{"version":3,"file":"json-editor.js","sources":["../../../projects/json-editor/src/lib/abstract-subscriber/abstract-subscriber.component.ts","../../../projects/json-editor/src/lib/shared/services/app-globals.service.ts","../../../projects/json-editor/src/lib/shared/services/path-util.service.ts","../../../projects/json-editor/src/lib/shared/services/remote-autocompletion.service.ts","../../../projects/json-editor/src/lib/shared/services/component-type.service.ts","../../../projects/json-editor/src/lib/shared/services/tabs-util.service.ts","../../../projects/json-editor/src/lib/shared/services/list-page-changer.service.ts","../../../projects/json-editor/src/lib/shared/services/dom-util.service.ts","../../../projects/json-editor/src/lib/shared/services/empty-value.service.ts","../../../projects/json-editor/src/lib/shared/services/find-replace-all.service.ts","../../../projects/json-editor/src/lib/shared/classes/sized-stack.ts","../../../projects/json-editor/src/lib/shared/services/json-schema.service.ts","../../../projects/json-editor/src/lib/shared/services/compare-keys-by-schema.service.ts","../../../projects/json-editor/src/lib/shared/services/keys-store.service.ts","../../../projects/json-editor/src/lib/shared/services/json-store.service.ts","../../../projects/json-editor/src/lib/shared/services/json-util.service.ts","../../../projects/json-editor/src/lib/shared/services/modal.service.ts","../../../projects/json-editor/src/lib/shared/services/record-fixer.service.ts","../../../projects/json-editor/src/lib/shared/services/schema-fixer.service.ts","../../../projects/json-editor/src/lib/shared/services/schema-validation.service.ts","../../../projects/json-editor/src/lib/shared/services/shortcut-action.service.ts","../../../projects/json-editor/src/lib/shared/services/window-href.service.ts","../../../projects/json-editor/src/lib/shared/services/problems.service.ts","../../../projects/json-editor/src/lib/shared/services/katex.service.ts","../../../projects/json-editor/src/lib/shared/services/text-diff.service.ts","../../../projects/json-editor/src/lib/shared/services/index.ts","../../../projects/json-editor/src/lib/shared/directives/shortcuts.directive.ts","../../../projects/json-editor/src/lib/modal-view/modal-view.component.ts","../../../projects/json-editor/src/lib/modal-view/modal-view.component.html","../../../projects/json-editor/src/lib/shared/pipes/sort-alphabetically.pipe.ts","../../../projects/json-editor/src/lib/shared/pipes/filter-by-expression.pipe.ts","../../../projects/json-editor/src/lib/add-field-dropdown/add-field-dropdown.component.ts","../../../projects/json-editor/src/lib/add-field-dropdown/add-field-dropdown.component.html","../../../projects/json-editor/src/lib/bottom-console-badges/bottom-console-badges.component.ts","../../../projects/json-editor/src/lib/bottom-console-badges/bottom-console-badges.component.html","../../../projects/json-editor/src/lib/shared/pipes/add-always-show-fields.pipe.ts","../../../projects/json-editor/src/lib/shared/pipes/filter-hidden-fields.pipe.ts","../../../projects/json-editor/src/lib/tree-menu/tree-menu-item.component.ts","../../../projects/json-editor/src/lib/tree-menu/tree-menu-item.component.html","../../../projects/json-editor/src/lib/tree-menu/tree-menu.component.ts","../../../projects/json-editor/src/lib/tree-menu/tree-menu.component.html","../../../projects/json-editor/src/lib/title-dropdown/title-dropdown.component.ts","../../../projects/json-editor/src/lib/title-dropdown/title-dropdown.component.html","../../../projects/json-editor/src/lib/find-replace/find-replace.component.ts","../../../projects/json-editor/src/lib/find-replace/find-replace.component.html","../../../projects/json-editor/src/lib/abstract-field/abstract-field.component.ts","../../../projects/json-editor/src/lib/abstract-list-field/abstract-list-field.component.ts","../../../projects/json-editor/src/lib/table-item-field/table-item-field.component.ts","../../../projects/json-editor/src/lib/table-item-field/table-item-field.component.html","../../../projects/json-editor/src/lib/list-action-group/list-action-group.component.ts","../../../projects/json-editor/src/lib/list-action-group/list-action-group.component.html","../../../projects/json-editor/src/lib/patch-actions/patch-actions.component.ts","../../../projects/json-editor/src/lib/patch-actions/patch-actions.component.html","../../../projects/json-editor/src/lib/shared/pipes/type-of.pipe.ts","../../../projects/json-editor/src/lib/shared/pipes/sort-keys-by-schema.pipe.ts","../../../projects/json-editor/src/lib/shared/pipes/keys-pipe.ts","../../../projects/json-editor/src/lib/add-or-replace-patch/add-or-replace-patch.component.ts","../../../projects/json-editor/src/lib/add-or-replace-patch/add-or-replace-patch.component.html","../../../projects/json-editor/src/lib/shared/pipes/underscore-to-space.pipe.ts","../../../projects/json-editor/src/lib/table-list-field/table-list-field.component.ts","../../../projects/json-editor/src/lib/table-list-field/table-list-field.component.html","../../../projects/json-editor/src/lib/object-field/object-field.component.ts","../../../projects/json-editor/src/lib/object-field/object-field.component.html","../../../projects/json-editor/src/lib/complex-list-field/complex-list-field.component.ts","../../../projects/json-editor/src/lib/complex-list-field/complex-list-field.component.html","../../../projects/json-editor/src/lib/primitive-list-field/primitive-list-field.component.ts","../../../projects/json-editor/src/lib/primitive-list-field/primitive-list-field.component.html","../../../projects/json-editor/src/lib/shared/directives/content-model.directive.ts","../../../projects/json-editor/src/lib/string-input/string-input.component.ts","../../../projects/json-editor/src/lib/string-input/string-input.component.html","../../../projects/json-editor/src/lib/searchable-dropdown/searchable-dropdown.component.ts","../../../projects/json-editor/src/lib/searchable-dropdown/searchable-dropdown.component.html","../../../projects/json-editor/src/lib/autocomplete-input/autocomplete-input.component.ts","../../../projects/json-editor/src/lib/autocomplete-input/autocomplete-input.component.html","../../../projects/json-editor/src/lib/text-diff/text-diff.component.ts","../../../projects/json-editor/src/lib/text-diff/text-diff.component.html","../../../projects/json-editor/src/lib/primitive-field/primitive-field.component.ts","../../../projects/json-editor/src/lib/primitive-field/primitive-field.component.html","../../../projects/json-editor/src/lib/ref-field/ref-field.component.ts","../../../projects/json-editor/src/lib/ref-field/ref-field.component.html","../../../projects/json-editor/src/lib/any-type-field/any-type-field.component.ts","../../../projects/json-editor/src/lib/any-type-field/any-type-field.component.html","../../../projects/json-editor/src/lib/add-new-element-button/add-new-element-button.component.ts","../../../projects/json-editor/src/lib/add-new-element-button/add-new-element-button.component.html","../../../projects/json-editor/src/lib/shared/pipes/self-or-empty.pipe.ts","../../../projects/json-editor/src/lib/shared/pipes/set-first-element-path.pipe.ts","../../../projects/json-editor/src/lib/sub-record/sub-record.component.ts","../../../projects/json-editor/src/lib/sub-record/sub-record.component.html","../../../projects/json-editor/src/lib/shared/pipes/sanitize-url.pipe.ts","../../../projects/json-editor/src/lib/html-view/html-view.component.ts","../../../projects/json-editor/src/lib/html-view/html-view.component.html","../../../projects/json-editor/src/lib/editor-previewer/editor-previewer.component.ts","../../../projects/json-editor/src/lib/editor-previewer/editor-previewer.component.html","../../../projects/json-editor/src/lib/bottom-console/problems-console-tab/problems-console-tab.component.ts","../../../projects/json-editor/src/lib/bottom-console/problems-console-tab/problems-console-tab.component.html","../../../projects/json-editor/src/lib/bottom-console/patches-console-tab/patches-console-tab.component.ts","../../../projects/json-editor/src/lib/bottom-console/patches-console-tab/patches-console-tab.component.html","../../../projects/json-editor/src/lib/bottom-console/bottom-console.component.ts","../../../projects/json-editor/src/lib/bottom-console/bottom-console.component.html","../../../projects/json-editor/src/lib/json-editor.component.ts","../../../projects/json-editor/src/lib/json-editor.component.html","../../../projects/json-editor/src/lib/rxjs-operators.ts","../../../projects/json-editor/src/lib/shared/pipes/last-path-element.pipe.ts","../../../projects/json-editor/src/lib/add-field-dropdown/add-nested-field-dropdown.component.ts","../../../projects/json-editor/src/lib/add-field-dropdown/add-nested-field-dropdown.component.html","../../../projects/json-editor/src/lib/shared/pipes/different-keys.pipe.ts","../../../projects/json-editor/src/lib/shared/pipes/index.ts","../../../projects/json-editor/src/lib/shared/directives/index.ts","../../../projects/json-editor/src/lib/json-editor.module.ts","../../../projects/json-editor/src/public-api.ts","../../../projects/json-editor/src/json-editor.ts"],"sourcesContent":["/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2017 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { OnDestroy, Component } from '@angular/core';\nimport { Subject } from 'rxjs';\n@Component({\n  template: ''\n})\nexport abstract class AbstractSubscriberComponent implements OnDestroy {\n  protected isDestroyed = new Subject<void>();\n\n  ngOnDestroy() {\n    this.isDestroyed.next();\n    this.isDestroyed.complete();\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Injectable, TemplateRef } from '@angular/core';\nimport { ReplaySubject } from 'rxjs/ReplaySubject';\n\nimport { CategorizedValidationProblems, SchemaValidationProblems, ValidationProblem, JsonEditorConfig } from '../interfaces';\n\n@Injectable()\nexport class AppGlobalsService {\n\n  readonly adminMode$ = new ReplaySubject<boolean>(1);\n  activeTabName = '';\n  tabNameToFirstTopLevelElement: { [tabName: string]: string } = {};\n  templates: {\n    [templateName: string]: TemplateRef<any>,\n    patchesHeaderTemplate?: TemplateRef<any>,\n  } = {};\n  config: JsonEditorConfig;\n  private _adminMode = false;\n\n  set adminMode(adminMode: boolean) {\n    this._adminMode = adminMode;\n    this.adminMode$.next(this._adminMode);\n  }\n\n  get adminMode() {\n    return this._adminMode;\n  }\n\n  get firstElementPathForCurrentTab() {\n    return this.tabNameToFirstTopLevelElement[this.activeTabName];\n  }\n\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n */\n\nimport { Injectable } from '@angular/core';\n\n\n@Injectable()\nexport class PathUtilService {\n\n  readonly separator = '/';\n\n  /**\n   *\n   * @param path - Element's path\n   * @param root - Find nearest or root parent array. True for root and false for nearest array parent\n   * @returns - Returns the path to the array parent\n   */\n  getNearestOrRootArrayParentInPath(path: Array<any>, root: boolean): Array<any> {\n    let _path = [];\n    const pathLength = path.length;\n    for (let index = 0; index < pathLength; index++) {\n      _path = root ? path.slice(0, index + 1) : path.slice(0, path.length - index);\n      if (typeof _path[_path.length - 1] === 'number') {\n        // transform ['arrayParent',0] => ['arrayParent']\n        _path.pop();\n        break;\n      }\n    }\n    return _path;\n  }\n\n  getElementIndexInForwardOrReversePath(path: Array<any>, directPathSearch: boolean): number {\n    return this.findIndexFromPath(path.slice(), directPathSearch);\n  }\n\n  /**\n   *\n   * @param path - The path of an element\n   * @param directPathSearch - Flag for define direct or reverse searching in path. Set to true for searching in direct\n   * or false for searching in reverse path\n   * @returns - Returns found index in path or -1 if not found\n   */\n  findIndexFromPath(path: Array<any>, directPathSearch: boolean): number {\n    path = directPathSearch ? path : path.reverse();\n    for (const index in path) {\n      if (!isNaN(path[index])) {\n        return path[index];\n      }\n    }\n    return -1;\n  }\n\n  /**\n   * Converts path array `/` separated path string.\n   * Example: from ['foo', 'bar', 0] to '/foo/bar/0'\n   */\n  toPathString(path: Array<any>): string {\n    if (path.length === 0) {\n      return '';\n    } else {\n      return `${this.separator}${path.join(this.separator)}`;\n    }\n\n  }\n\n  /**\n   * Converts `/` separated path string to path array.\n   * Example from '/foo/bar/0' to ['foo', 'bar', 0]\n   */\n  toPathArray(pathString: string): Array<any> {\n    return pathString.split(this.separator)\n      .slice(1) // remove the empty\n      .map((key) => isNaN(parseInt(key, 10)) ? key : parseInt(key, 10));\n  }\n}\n\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { AutocompletionConfig } from '../interfaces';\nimport { PathUtilService } from './path-util.service';\n\n@Injectable()\nexport class RemoteAutocompletionService {\n\n  constructor(private http: HttpClient,\n    private pathUtilService: PathUtilService) { }\n\n  getAutocompletionResults(options: AutocompletionConfig,\n    token: string): Observable<Array<object>> {\n    return this.http.get(`${options.url}${token}`)\n      .pipe(map(res => this.mapResponseToResults(res, options.path)));\n  }\n\n  private mapResponseToResults(response: any, resultsPath: string): Array<object> {\n    const pathElements = this.pathUtilService.toPathArray(resultsPath);\n    let results = response.json();\n    pathElements.forEach(pathElement => {\n      results = results[pathElement];\n    });\n    return results;\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Injectable } from '@angular/core';\n\nimport { JSONSchema } from '../interfaces';\n\n@Injectable()\nexport class ComponentTypeService {\n\n  /**\n   * It returns the editor specific type of given schema\n   * In other words, which component to use for given schema.\n   *\n   * Possible values:\n   *  - string, number, boolean, object, enum\n   *  - primitive-list, table-list, complex-list\n   *  - disabled, autocomplete\n   *\n   * @param {Object} schema\n   * @return {string}\n   */\n  getComponentType(schema: JSONSchema): string {\n    if (!schema) {\n      throw new Error('schema is undefined');\n    }\n\n    const schemaType = schema.type;\n    if (!schemaType) {\n      if (Object.keys(schema).length === 0) { // if shema === {} (empty object)\n        return 'raw';\n      }\n    } else if (schemaType === 'string') {\n      if (schema.autocompletionConfig) {\n        return 'autocomplete';\n      } else if (schema.enum) {\n        return 'enum';\n      }\n    } else if (schemaType === 'object') {\n      if (schema.properties['$ref']) {\n        return 'ref';\n      }\n    } else if (schemaType === 'array') {\n      const itemSchema = schema.items;\n      if (itemSchema.type === 'object' && !itemSchema.properties['$ref']) {\n        // complex-array: if it's an object array\n        // if its elements have at least a property with object (not ref-field)\n        // or a non-primitive array.\n        const isComplexArray = Object.keys(itemSchema.properties)\n          .some(prop => {\n            const propSchema = itemSchema.properties[prop];\n            return (propSchema.type === 'object' && !propSchema.properties['$ref']) ||\n              (propSchema.type === 'array' && (propSchema.items.type === 'object' || propSchema.items.type === 'array'));\n          });\n        if (isComplexArray) {\n          return 'complex-list';\n        } else {\n          return 'table-list';\n        }\n      } else {\n        // if schema.items.type is not object!\n        return 'primitive-list';\n      }\n    }\n    // execution reaches here if schemaType is either\n    // 'number', 'integer', 'string' or something else which is currently not supported\n    return schemaType;\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport * as _ from 'lodash';\nimport { Set } from 'immutable';\n\nimport { TabsConfig, JSONSchema } from '../interfaces';\nimport { PathUtilService } from './path-util.service';\n\n@Injectable()\nexport class TabsUtilService {\n\n  private schemaKeyToTabName: { [key: string]: string };\n  readonly activeTabName$: ReplaySubject<string> = new ReplaySubject<string>(1);\n\n  constructor(public pathUtilService: PathUtilService) { }\n\n  getTabNames(tabsConfig: TabsConfig): Array<string> {\n    const tabNames = tabsConfig.tabs.map(tab => tab.name);\n    // insert default tab name at the beginning\n    return [tabsConfig.defaultTabName]\n      .concat(tabNames);\n  }\n\n  getSchemaKeyToTabName(tabsConfig: TabsConfig, schema: JSONSchema): { [key: string]: string } {\n    if (!this.schemaKeyToTabName) {\n      // set tab.name for configured keys\n      const keyToTabName = tabsConfig.tabs\n        .map(tab => {\n          const keysWithTabName = {};\n          tab.properties.forEach(key => {\n            keysWithTabName[key] = tab.name;\n          });\n          return keysWithTabName;\n        }).reduce((pre, cur) => Object.assign(pre, cur));\n      // set defaultTabName for all other keys in the schema\n      Object.keys(schema.properties)\n        .filter(key => !keyToTabName[key])\n        .forEach(key => {\n          keyToTabName[key] = tabsConfig.defaultTabName;\n        });\n      this.schemaKeyToTabName = keyToTabName;\n    }\n    return this.schemaKeyToTabName;\n  }\n\n  // TODO: maybe this could be a decorator\n  selectTabIfNeeded(path: string) {\n    if (this.schemaKeyToTabName && path !== '') {\n      const tabName = this.schemaKeyToTabName[this.pathUtilService.toPathArray(path)[0]];\n      this.activeTabName$.next(tabName);\n    }\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2017 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\nimport { PathUtilService } from './path-util.service';\n\n@Injectable()\nexport class ListPageChangerService {\n\n  private pageChange$Map: { [path: string]: ReplaySubject<number> } = {};\n  private itemsPerPageMap: { [path: string]: number } = {};\n\n  constructor(private pathUtilService: PathUtilService) { }\n\n  /**\n   * Changes the page of the list so that requested item is visible on UI\n   * It doesn't do anything if given path's parent is not paginated list.\n   *\n   * @param itemPath path to a list item\n   */\n  changePage(fieldPath: string) {\n    const fieldPathArray = this.pathUtilService.toPathArray(fieldPath);\n    const listPathArray = this.pathUtilService.getNearestOrRootArrayParentInPath(fieldPathArray, true);\n\n    const listPath = this.pathUtilService.toPathString(listPathArray);\n    if (this.pageChange$Map[listPath]) {\n      const itemIndex = fieldPathArray[listPathArray.length];\n      const itemsPerPage = this.itemsPerPageMap[listPath];\n      const page = Math.floor((itemIndex / itemsPerPage) + 1);\n      this.pageChange$Map[listPath].next(page);\n    }\n  }\n\n  registerPaginatedList(listPath: string, itemsPerPage: number): ReplaySubject<number> {\n    this.itemsPerPageMap[listPath] = itemsPerPage;\n    this.pageChange$Map[listPath] = new ReplaySubject<number>(1);\n    return this.pageChange$Map[listPath];\n  }\n\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Injectable } from '@angular/core';\n\nimport { TabsUtilService } from './tabs-util.service';\nimport { ListPageChangerService } from './list-page-changer.service';\n\nimport { JsonPatch } from '../interfaces';\n\n@Injectable()\nexport class DomUtilService {\n\n  private readonly editableSelector = '.value-container input, span[contenteditable=true], .switch-input, searchable-dropdown span.value';\n  // highlight class is defined in json-editor.component.scss\n  private readonly highlightClass = 'highlight';\n  private highlightedElement: HTMLElement;\n\n  constructor(private tabsUtilService: TabsUtilService,\n    private listPageChangerService: ListPageChangerService) { }\n\n  focusAndSelectFirstEditableChildById(id: string, highlight = false) {\n    this.tabsUtilService.selectTabIfNeeded(id);\n    this.listPageChangerService.changePage(id);\n    setTimeout(() => {\n      const el = document.getElementById(id);\n      if (el) {\n        const firstEditable = el.querySelector(this.editableSelector) as HTMLElement;\n        if (firstEditable) {\n          if (firstEditable.classList.contains('hidden')) {\n            // has latex preview, click to disable to preview\n            (firstEditable.nextElementSibling as HTMLElement).click();\n            setTimeout(() => {\n              this.focusAndSelectContent(firstEditable, highlight);\n            });\n          } else {\n            this.focusAndSelectContent(firstEditable, highlight);\n          }\n        } else {\n          // if element doesn't have any input, open add-field-dropdown if it exists.\n          this.openDropdown(el);\n        }\n      }\n    });\n  }\n\n  private focusAndSelectContent(el: HTMLElement, highlight: boolean) {\n    el.focus();\n    this.selectAllContent(el);\n    if (highlight) {\n      el.classList.add(this.highlightClass);\n      this.highlightedElement = el;\n    }\n  }\n\n  focusFirstInputChildByElement(el: HTMLElement) {\n    const firstInput = el.querySelector('input') as HTMLElement;\n    if (firstInput) {\n      firstInput.focus();\n    }\n  }\n\n  focusRightOrLeftParentCell(id: string, direction: number) {\n    const el = document.getElementById(id);\n    if (el && el.tabIndex) {\n      let elementParentCell = el.parentElement;\n      while (elementParentCell.nodeName !== 'TD') {\n        elementParentCell = elementParentCell.parentElement;\n      }\n      let nextSibling = direction > 0 ? elementParentCell.nextElementSibling : elementParentCell.previousElementSibling;\n      while (nextSibling && nextSibling.nodeName === 'TD') {\n        const inputElement = nextSibling.querySelector(`input[tabindex='1'], span[contenteditable=true][tabindex='1']`) as HTMLElement;\n        if (inputElement) {\n          inputElement.focus();\n          this.selectAllContent(inputElement);\n          break;\n        }\n        nextSibling = direction > 0 ? nextSibling.nextElementSibling : nextSibling.previousElementSibling;\n      }\n    }\n  }\n\n  blurFirstEditableChildById(id: string) {\n    const el = document.getElementById(id);\n    const firstEditable = el.querySelector(this.editableSelector) as HTMLElement;\n    if (firstEditable) {\n      firstEditable.blur();\n    }\n  }\n\n  clearHighlight() {\n    if (this.highlightedElement) {\n      this.highlightedElement.classList.remove(this.highlightClass);\n      this.highlightedElement = undefined;\n    }\n  }\n\n  focusPatch(patch: JsonPatch) {\n    this.tabsUtilService.selectTabIfNeeded(patch.path);\n    this.listPageChangerService.changePage(patch.path);\n    setTimeout(() => {\n      const el = document.getElementById(patch.path);\n      const mergeButton = el.querySelector('.btn-merge') as HTMLButtonElement;\n      if (mergeButton) {\n        mergeButton.focus();\n        mergeButton.click();\n      } else {\n        const patchActionsContainer = el.querySelector(`.${patch.op}.patch-actions-container`) as HTMLElement;\n        if (patchActionsContainer) {\n          patchActionsContainer.focus();\n        }\n      }\n    });\n  }\n\n  private selectAllContent(el: HTMLElement) {\n    if (el instanceof HTMLInputElement) {\n      el.select();\n    } else {\n      // select all content for contenteditable element.\n      const range = document.createRange();\n      range.selectNodeContents(el);\n      const sel = window.getSelection();\n      sel.removeAllRanges();\n      sel.addRange(range);\n    }\n  }\n\n  private openDropdown(el: HTMLElement) {\n    const dropdown = el.querySelector('div.btn-group');\n    if (dropdown) {\n      const dropDownButton = dropdown.querySelector('button') as HTMLButtonElement;\n      if (dropDownButton) {\n        dropDownButton.click();\n      }\n    }\n  }\n\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Injectable } from '@angular/core';\nimport { fromJS } from 'immutable';\n\nimport { JSONSchema } from '../interfaces';\n\n@Injectable()\nexport class EmptyValueService {\n\n  private static defaultValueLookup = {\n    'string': '',\n    'boolean': false\n  };\n\n  generateEmptyValue(schema: JSONSchema): any {\n    const emptyValue = this.generateEmptyValueRecursively(schema);\n    if (typeof emptyValue === 'object') {\n      return fromJS(emptyValue);\n    } else {\n      return emptyValue;\n    }\n  }\n\n  private generateEmptyValueRecursively(schema: JSONSchema): any {\n    if (schema.default) {\n      return schema.default;\n    }\n\n    if (schema.type === 'object') {\n      const emptyObject = {};\n      Object.keys(schema.properties)\n        .filter(prop => {\n          const required = schema.required || [];\n          const alwaysShow = schema.alwaysShow || [];\n          return required.indexOf(prop) > -1 || alwaysShow.indexOf(prop) > -1;\n        }).forEach(prop => {\n          const propSchema = schema.properties[prop];\n          emptyObject[prop] = this.generateEmptyValueRecursively(propSchema);\n        });\n      return emptyObject;\n    }\n\n    if (schema.type === 'array') {\n      const emptyArray = [];\n      const arrayElementSchema = schema.items;\n      if (schema.componentType !== 'complex-list') {\n        emptyArray.push(this.generateEmptyValueRecursively(arrayElementSchema));\n      }\n      return emptyArray;\n    }\n\n    return EmptyValueService.defaultValueLookup[schema.type];\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { List, Map } from 'immutable';\n\nimport { JSONSchema } from '../interfaces';\n\n@Injectable()\nexport class FindReplaceAllService {\n\n  // TODO: fix compiler errors when type of immutable `List<any> | Map<string, any>`\n  /**\n   * Does deep replace when it finds the occurance in an immutable List and Map\n   * uses schema to skip disabled properties\n   *\n   * @param {List<any> | Map<string, any} immutable\n   * @param {Object} schema\n   * @param {string} find\n   * @param {replace} replace\n   * @param {boolean} matchWhole - looks for whole match to a string property of immutable\n   * @param {Array<any> | Object} diffHtml - TODO: describe\n   */\n  findReplaceInImmutable(immutable: any, schema: JSONSchema, find: string, replace: string, exact = false, diffHtml?: Array<any> | Object):\n    { replaced: any, diffHtml: Array<any> | Object } {\n    const immutableAsMutable = immutable.asMutable();\n    const isList = List.isList(immutable);\n    // create empty array or object for the immutable to store diff\n    diffHtml = isList ? [] : {};\n    immutableAsMutable.forEach((value, key) => {\n      const innerSchema = isList ? schema.items : schema.properties[key];\n      // ignore disabled and ref fields\n      if (innerSchema.disabled || innerSchema.hidden || key === '$ref') {\n        return;\n        // TODO: is `schema.type === 'string'` better?\n      } else if (typeof value === 'string') {\n        // assign value to diff as initial, if nothing has changed it will remain same\n        let diff = value;\n        // create html diff for each possible change\n        const singleDiffHtml = `<strong style='color: green;'>${replace}</strong><del><em style='color: red;'>${find}</em></del>`;\n        if (!exact) {\n          const regExp = new RegExp(find, 'g');\n          const replaced = value.replace(regExp, replace);\n          immutableAsMutable.set(key, replaced);\n          // create diff for multiple changes in value\n          diff = diff.replace(regExp, singleDiffHtml);\n        } else if (value === find) {\n          immutableAsMutable.set(key, replace);\n          diff = singleDiffHtml;\n        }\n        diffHtml[key] = diff;\n      // TODO: is `schema.type === 'object' || schema.type === 'array'` better?\n      } else if (List.isList(value) || Map.isMap(value)) {\n        // create empty array or object for the value in diffHtml\n        const result = this.\n          findReplaceInImmutable(immutableAsMutable.get(key), innerSchema, find, replace, exact, diffHtml[key]);\n        diffHtml[key] = result.diffHtml;\n        immutableAsMutable.set(key, result.replaced);\n      }\n    });\n    return { replaced: immutableAsMutable.asImmutable(), diffHtml };\n  }\n\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nexport class SizedStack<T> {\n  private values = new Array<T>();\n  private size: number;\n\n  constructor(size: number) {\n    this.size = size;\n  }\n\n  push(value: T) {\n    this.values.push(value);\n    if (this.values.length > this.size) {\n      this.values.shift();\n    }\n  }\n\n  pop(): T {\n    return this.values.pop();\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n */\n\nimport { Injectable } from '@angular/core';\n\nimport { JSONSchema } from '../interfaces';\nimport { PathUtilService } from './path-util.service';\n\n@Injectable()\nexport class JsonSchemaService {\n\n  private schema: JSONSchema;\n\n  constructor(private pathUtilService: PathUtilService) { }\n\n  setSchema(schema: JSONSchema) {\n    this.schema = schema;\n  }\n\n  /**\n   * Returns the schema extracted from this path\n   */\n  forPathArray(path: Array<any>): JSONSchema {\n    return path\n      .reduce<JSONSchema>((schema, pathEl) => {\n        if (isNaN(pathEl) && pathEl !== '-') {\n          return schema.properties[pathEl];\n        } else {\n          return schema.items;\n        }\n      }, this.schema);\n  }\n\n  /**\n   * Returns the schema extracted from the json-pointer string\n   */\n  forPathString(path: string): JSONSchema {\n    const pathArray = this.pathUtilService.toPathArray(path);\n    return this.forPathArray(pathArray);\n  }\n\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2018 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Injectable } from '@angular/core';\n\nimport { JSONSchema } from '../interfaces';\n\n@Injectable()\nexport class CompareKeysBySchemaService {\n\n  /**\n   * @param key1 the first key\n   * @param key2 the second key\n   * @param schema schema of the parent object\n   */\n  compare(key1: string, key2: string, schema: JSONSchema): number {\n    // Sort by priority, larger is the first.\n    const priorty1 = schema.properties[key1].priority || 0;\n    const priority2 = schema.properties[key2].priority || 0;\n\n    if (priorty1 > priority2) { return -1; }\n    if (priorty1 < priority2) { return 1; }\n\n    // Sort alphabetically.\n    if (key1 < key2) { return -1; }\n    if (key1 > key2) { return 1; }\n    return 0;\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Injectable } from '@angular/core';\nimport { Map, List, OrderedSet, Set, Seq } from 'immutable';\nimport { ReplaySubject } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { JSONSchema } from '../interfaces';\nimport { PathUtilService } from './path-util.service';\nimport { JsonSchemaService } from './json-schema.service';\nimport { AppGlobalsService } from './app-globals.service';\nimport { CompareKeysBySchemaService } from './compare-keys-by-schema.service';\n\n\n@Injectable()\nexport class KeysStoreService {\n  private keys$Map: { [path: string]: ReplaySubject<OrderedSet<string>> };\n  public keysMap: { [path: string]: OrderedSet<string> };\n  public onKeysChange = new Subject<{ path: string, keys: OrderedSet<string> }>();\n\n  constructor(private appGlobalsService: AppGlobalsService,\n    private pathUtilService: PathUtilService,\n    private jsonSchemaService: JsonSchemaService,\n    private compareKeysBySchemaService: CompareKeysBySchemaService) { }\n\n  forPath(path: string): ReplaySubject<OrderedSet<string>> {\n    return this.keys$Map[path];\n  }\n\n  /**\n   * Adds a key to the specified path.\n   *\n   * @param path path to add the key to\n   * @param key key to be added\n   * @param schema schema that belongs to path (schema.items for table-list)\n   */\n  addKey(path: string, key: string, schema: JSONSchema, value?: any): string {\n\n    // FIXME: could do O(logn) insert instead of O(nlogn) since the set is already sorted.\n    this.keysMap[path] = this.keysMap[path]\n      .add(key)\n      .sort((a, b) => this.compareKeysBySchemaService.compare(a, b, schema)) as OrderedSet<string>;\n    this.keys$Map[path].next(this.keysMap[path]);\n    this.onKeysChange.next({ path, keys: this.keysMap[path] });\n    const newKeyPath = `${path}${this.pathUtilService.separator}${key}`;\n\n    const keySchema = schema.properties[key];\n    if (keySchema.type === 'object' || keySchema.componentType === 'table-list') {\n      this.buildKeysMapRecursivelyForPath(value || Map<string, any>(), newKeyPath, keySchema);\n    }\n\n    return newKeyPath;\n  }\n\n  deletePath(path: Array<any>) {\n    const lastKey = path[path.length - 1];\n    const parentPath = this.pathUtilService.toPathString(path.slice(0, -1));\n    // don't invoke deleteKey if parentPath is primitive-list\n    if (this.keysMap[parentPath]) {\n      this.deleteKey(parentPath, lastKey);\n    }\n  }\n\n  /**\n   * Sync keys in store for the given path or its parent, grand parent etc. if necessary\n   *\n   * @param path path to the (re)set field\n   * @param json whole json\n   */\n  syncKeysForPath(path: Array<any>, json: Map<string, any>) {\n    // search from leaf to root, to find the first path with entry in keys map\n    for (let i = path.length - 1; i >= 0; i--) {\n      const currentPath = path.slice(0, i);\n      const currentPathString = this.pathUtilService.toPathString(currentPath);\n      if (this.keysMap[currentPathString]) {\n        // path[i] is key that should be added to currentPat\n        const key = path[i];\n        // if currentPath has the key\n        if (this.keysMap[currentPathString].has(key)) {\n          // just build the store keys map for that /current/path/key if it is object or array\n          const keyPath = currentPath.concat(key);\n          const keySchema = this.jsonSchemaService.forPathArray(keyPath);\n          if (keySchema.type === 'object' || keySchema.type === 'array') {\n            this.buildKeysMapRecursivelyForPath(json.getIn(keyPath), keyPath, keySchema);\n          }\n          // if currentPath doesn't have the key\n        } else {\n          const currentSchema = this.jsonSchemaService.forPathArray(currentPath);\n          // if currentPath is to a table list\n          if (currentSchema.componentType === 'table-list') {\n            // have to rebuild keys map for it because key is here an index we don't know what to add\n            this.buildKeysMapRecursivelyForPath(json.getIn(currentPath), currentPath, currentSchema);\n            // if not to a table list.\n          } else {\n            // just add the key which will build keys map for /current/path/key as well if needed\n            this.addKey(currentPathString, key, currentSchema, json.getIn(currentPath.concat(path[i])));\n          }\n        }\n        // break when a entry found for a path in keys map\n        break;\n      }\n    }\n  }\n\n  deleteKey(parentPath: string, key: string) {\n    // remove deleted one from parent\n    this.keysMap[parentPath] = this.keysMap[parentPath].delete(key);\n    this.keys$Map[parentPath].next(this.keysMap[parentPath]);\n    this.onKeysChange.next({ path: parentPath, keys: this.keysMap[parentPath] });\n    // delete keys for deleted one\n    const deletedKeyPath = `${parentPath}${this.pathUtilService.separator}${key}`;\n    delete this.keysMap[deletedKeyPath];\n    delete this.keys$Map[deletedKeyPath];\n    // delete keys for all children of the deleted one\n    const deletedKeyPathChildPrefix = deletedKeyPath + this.pathUtilService.separator;\n    Object.keys(this.keysMap)\n      .filter(path => path.startsWith(deletedKeyPathChildPrefix))\n      .forEach(childPath => {\n        delete this.keysMap[childPath];\n        delete this.keys$Map[childPath];\n      });\n  }\n\n  /**\n   * Swaps keys of given two indices in object list recursively\n   */\n  swapListElementKeys(listPath: Array<any>, index1: number, index2: number) {\n    const listSchema = this.jsonSchemaService.forPathArray(listPath);\n    if (listSchema.componentType !== 'complex-list') { return; }\n\n    const listPathString = this.pathUtilService.toPathString(listPath);\n    const ps1 = `${listPathString}${this.pathUtilService.separator}${index1}`;\n    const ps2 = `${listPathString}${this.pathUtilService.separator}${index2}`;\n    const keys1 = this.keysMap[ps1];\n    this.setKeys(ps1, this.keysMap[ps2]);\n    this.setKeys(ps2, keys1);\n    // swap children as well\n    const ps1ChildPrefix = ps1 + this.pathUtilService.separator;\n    const ps2ChildPrefix = ps2 + this.pathUtilService.separator;\n    const childrenSwaps: Array<{ from: string, to: string, keys: OrderedSet<string> }> = [];\n    Object.keys(this.keysMap)\n      .forEach(path => {\n        if (path.startsWith(ps1ChildPrefix)) {\n          const toPath = path.replace(ps1ChildPrefix, ps2ChildPrefix);\n          childrenSwaps.push({ from: path, to: toPath, keys: this.keysMap[path] });\n        } else if (path.startsWith(ps2ChildPrefix)) {\n          const toPath = path.replace(ps2ChildPrefix, ps1ChildPrefix);\n          childrenSwaps.push({ from: path, to: toPath, keys: this.keysMap[path] });\n        }\n      });\n    childrenSwaps\n      .forEach(swap => {\n        this.setKeys(swap.to, swap.keys);\n        this.onKeysChange.next({ path: swap.to, keys: this.keysMap[swap.to] });\n      });\n    childrenSwaps\n      .filter(swap => !childrenSwaps.some(otherSwap => swap.from === otherSwap.to))\n      .forEach(swap => {\n        delete this.keysMap[swap.from];\n        delete this.keys$Map[swap.from];\n      });\n  }\n\n  buildKeysMap(json: Map<string, any>, schema: JSONSchema) {\n    this.keys$Map = {};\n    this.keysMap = {};\n    this.buildKeysMapRecursivelyForPath(json, '', schema);\n  }\n\n  buildKeysMapRecursivelyForPath(mapOrList: any, path: string | Array<any>, schema?: JSONSchema) {\n    // TODO: remove this and unify typing when #330 is fixed\n    const pathString = Array.isArray(path) ? this.pathUtilService.toPathString(path) : path;\n\n    if (!schema) {\n      schema = this.jsonSchemaService.forPathString(pathString);\n    }\n\n    if (schema.type === 'object') {\n      const map = mapOrList as Map<string, any> || Map<string, any>();\n      const finalKeys = this.buildkeysForObject(pathString, map, schema);\n\n      // recursive call\n      finalKeys\n        .filter(key => this.isObjectOrArray(schema.properties[key]))\n        .forEach(key => {\n          const nextPath = `${pathString}${this.pathUtilService.separator}${key}`;\n          this.buildKeysMapRecursivelyForPath(map.get(key), nextPath, schema.properties[key]);\n        });\n    } else if (schema.componentType === 'table-list') {\n      const list = mapOrList as List<Map<string, any>> || List<Map<string, any>>();\n      this.buildKeysForTableList(pathString, list, schema);\n      // there is no recursive call for table list items because they aren't expected to have object or object list as property.\n    } else if (schema.componentType === 'complex-list') {\n      const list = mapOrList as List<Map<string, any>> || List<Map<string, any>>();\n      list.forEach((element, index) => {\n        const elementPath = `${pathString}${this.pathUtilService.separator}${index}`;\n        this.buildKeysMapRecursivelyForPath(element, elementPath, schema.items);\n      });\n    }\n  }\n\n  // default value for `list`, if this is called for alwaysShow in which case `list` would be undefined\n  private buildKeysForTableList(path: string, list = List<Map<string, any>>(), schema: JSONSchema) {\n    // get present unique keys in all items of table-list\n    const keys = Seq.Set(list\n      .map(object => object.keySeq().toArray())\n      .reduce((pre, cur) => pre.concat(cur), []));\n    const itemSchema = schema.items;\n    const finalKeys = this.schemafy(keys, itemSchema);\n    this.setKeys(path, finalKeys);\n  }\n\n  // default value for `map`, if this is called for alwaysShow in which case `map` would be undefined\n  private buildkeysForObject(path: string, map = Map<string, any>(), schema: JSONSchema): OrderedSet<string> {\n    const finalKeys = this.schemafy(map.keySeq(), schema);\n    this.setKeys(path, finalKeys);\n    return finalKeys;\n  }\n\n  /**\n   * Filters keys, add alwaysShow fields and sorts by schema.\n   */\n  private schemafy(keys: Seq<number, string>, schema: JSONSchema): OrderedSet<string> {\n    return keys\n      .concat(schema.required || [])\n      .filter(key => this.isNotHidden(key, schema) || this.appGlobalsService.adminMode)\n      .concat(schema.alwaysShow || [])\n      .sort((a, b) => this.compareKeysBySchemaService.compare(a, b, schema))\n      .toOrderedSet();\n  }\n\n  private isNotHidden(key: string, schema: JSONSchema): boolean {\n    if (!schema.properties[key]) {\n      throw new Error(`\"${key}\" is not specified as property in \\n${JSON.stringify(schema.properties, undefined, 2)}`);\n    }\n    return !schema.properties[key].hidden;\n  }\n\n  private isObjectOrArray(schema: JSONSchema): boolean {\n    return schema.type === 'object' || schema.type === 'array';\n  }\n\n  private setKeys(path: string, keys: OrderedSet<string>) {\n    this.keysMap[path] = keys;\n    if (!this.keys$Map[path]) {\n      this.keys$Map[path] = new ReplaySubject(1);\n    }\n    this.keys$Map[path].next(keys);\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Injectable } from '@angular/core';\nimport { Map, List, fromJS } from 'immutable';\nimport { ReplaySubject } from 'rxjs';\nimport { Subject } from 'rxjs';\n\nimport { PathUtilService } from './path-util.service';\nimport { KeysStoreService } from './keys-store.service';\nimport { JsonPatch, JsonPatchesByPath } from '../interfaces';\nimport { SizedStack } from '../classes';\n\n@Injectable()\nexport class JsonStoreService {\n\n  readonly patchesByPath$ = new ReplaySubject<JsonPatchesByPath>(1);\n  readonly json$ = new Subject<Map<string, any>>();\n  readonly jsonPatches$ = new Subject<Array<JsonPatch>>();\n\n  private patchesByPath: JsonPatchesByPath = {};\n  private json: Map<string, any>;\n  private jsonPatches: Array<JsonPatch>;\n\n  // list of reverse patches for changes\n  private history = new SizedStack<JsonPatch>(10);\n\n  constructor(private pathUtilService: PathUtilService,\n    private keysStoreService: KeysStoreService) { }\n\n  setIn(path: Array<any>, value: any, allowUndo = true) {\n    if (value === '' || value === undefined) {\n      this.removeIn(path);\n      return;\n    }\n\n    value = this.toImmutable(value);\n\n    // immutablejs setIn creates Map for keys that don't exist in path\n    // therefore List() should be set manually for some of those keys.\n    this.setEmptyListBeforeEachIndexInPath(path);\n\n    if (allowUndo) {\n      this.pushRevertPatchToHistory(path, 'replace');\n    }\n\n    // set new value\n    this.json = this.json.setIn(path, value);\n\n    this.keysStoreService.syncKeysForPath(path, this.json);\n\n    this.json$.next(this.json);\n  }\n\n  private setEmptyListBeforeEachIndexInPath(path: Array<any>) {\n    for (let i = 0; i < path.length - 1; i++) {\n      const currentPath = path.slice(0, i + 1);\n      if (!this.json.hasIn(currentPath) && typeof path[i + 1] === 'number') {\n        this.json = this.json.setIn(currentPath, List());\n      }\n    }\n  }\n\n  getIn(path: Array<any>, notSetValue?: any): any {\n    return this.json.getIn(path, notSetValue);\n  }\n\n  removeIn(path: Array<any>) {\n    this.pushRevertPatchToHistory(path, 'add');\n\n    this.json = this.json.removeIn(path);\n    this.json$.next(this.json);\n    this.keysStoreService.deletePath(path);\n  }\n\n  private pushRevertPatchToHistory(path: Array<any>, revertOp: string) {\n    this.history.push({\n      path: this.pathUtilService.toPathString(path),\n      op: revertOp,\n      value: this.json.getIn(path)\n    });\n  }\n\n  addIn(path: Array<any>, value: any) {\n    const lastPathElement = path[path.length - 1];\n    const isInsert = typeof lastPathElement === 'number' || lastPathElement === '-';\n    if (isInsert) {\n      const pathWithoutIndex = path.slice(0, path.length - 1);\n      let list = this.getIn(pathWithoutIndex) as List<any> || List();\n      value = this.toImmutable(value);\n      if (lastPathElement === '-') {\n        list = list.push(value);\n        path[path.length - 1] = list.size - 1;\n      } else {\n        list = list.insert(lastPathElement, value);\n      }\n      // allowUndo=false to avoid creating replace history patch when adding an item to a list.\n      this.setIn(pathWithoutIndex, list, false);\n    } else {\n      this.setIn(path, value);\n    }\n  }\n\n  private toImmutable(value: any): any {\n    if (typeof value === 'object' && !(List.isList(value) || Map.isMap(value))) {\n      return fromJS(value);\n    }\n    return value;\n  }\n\n  /**\n   * Moves the element at given index UP or DOWN within the list\n   * @param listPath path to a list in json\n   * @param index index of the element that is being moved\n   * @param direction 1 for DOWN, -1 for UP movement\n   * @return new path of the moved element\n   */\n  moveIn(listPath: Array<any>, index: number, direction: number): Array<any> {\n    let list = this.getIn(listPath);\n    let newIndex = index + direction;\n    if (newIndex >= list.size || newIndex < 0) {\n      newIndex = list.size - Math.abs(newIndex);\n    }\n    const temp = list.get(index);\n    list = list\n      .set(index, list.get(newIndex))\n      .set(newIndex, temp);\n    this.setIn(listPath, list);\n\n    this.keysStoreService.swapListElementKeys(listPath, index, newIndex);\n\n    return listPath.concat(newIndex);\n  }\n\n  setJson(json: Map<string, any>) {\n    this.json = json;\n  }\n\n  setJsonPatches(patches: Array<JsonPatch>) {\n    this.patchesByPath = {};\n    patches.forEach(patch => {\n      const path = this.getComponentPathForPatch(patch);\n      if (!this.patchesByPath[path]) {\n        this.patchesByPath[path] = [];\n      }\n      this.patchesByPath[path].push(patch);\n    });\n\n    this.jsonPatches = patches;\n    this.patchesByPath$.next(this.patchesByPath);\n  }\n\n  rollbackLastChange(): string {\n    const lastChangeReversePatch = this.history.pop();\n    if (lastChangeReversePatch) {\n      this.applyPatch(lastChangeReversePatch, false);\n      return lastChangeReversePatch.path;\n    } else {\n      return undefined;\n    }\n  }\n\n  applyPatch(patch: JsonPatch, allowUndo = true) {\n    const path = this.pathUtilService.toPathArray(patch.path);\n    switch (patch.op) {\n      case 'replace':\n        this.setIn(path, patch.value, allowUndo);\n        break;\n      case 'remove':\n        this.removeIn(path);\n        break;\n      case 'add':\n      // custom type for adding a replace patch as new.\n      case 'add-as-new':\n        this.addIn(path, patch.value);\n        break;\n      default:\n        console.warn(`${patch.op} is not supported!`);\n    }\n    this.removeJsonPatch(patch);\n  }\n\n  rejectPatch(patch: JsonPatch) {\n    this.removeJsonPatch(patch);\n  }\n\n  hasPatch(path: string): boolean {\n    return this.patchesByPath[path] && this.patchesByPath[path].length > 0;\n  }\n\n  hasPatchOrChildrenHavePatch(path: string): boolean {\n    if (this.hasPatch(path)) {\n      return true;\n    }\n\n    if (this.jsonPatches) {\n      const childPathPrefix = `${path}${this.pathUtilService.separator}`;\n      return this.jsonPatches\n        .some(patch => patch.path.startsWith(childPathPrefix));\n    }\n    return false;\n  }\n\n  private removeJsonPatch(patch: JsonPatch) {\n    const path = this.getComponentPathForPatch(patch);\n    // don't do anything if it's UNDO json-patch.\n    if (this.patchesByPath[path]) {\n      const patchIndex = this.patchesByPath[path].indexOf(patch);\n      if (patchIndex > -1) {\n        this.patchesByPath[path].splice(patchIndex, 1);\n        this.patchesByPath$.next(this.patchesByPath);\n\n        const globalPatchIndex = this.jsonPatches.indexOf(patch);\n        this.jsonPatches.splice(globalPatchIndex, 1);\n        this.jsonPatches$.next(this.jsonPatches);\n      }\n    }\n  }\n\n  private getComponentPathForPatch(patch: JsonPatch): string {\n    if (patch.op === 'add') {\n      // add patches handled by parent component\n      return this.getParentPath(patch.path);\n    }\n    return patch.path;\n  }\n\n  private getParentPath(path: string): string {\n    const pathArray = this.pathUtilService.toPathArray(path);\n    const parentPathArray = pathArray.slice(0, -1);\n    return this.pathUtilService.toPathString(parentPathArray);\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Injectable } from '@angular/core';\n\nimport { PathUtilService } from './path-util.service';\n\n@Injectable()\nexport class JsonUtilService {\n\n  constructor(private pathUtilService: PathUtilService) { }\n\n  /**\n   * Returns value of the property located in dot separated path of json.\n   */\n  getValueInPath(json: any, path: string): any {\n    const pathElements = this.pathUtilService.toPathArray(path);\n    let value = json;\n    pathElements.forEach(pathElement => {\n      value = value[pathElement];\n      if (!value) {\n        throw new Error(`\"${pathElement}\" of given path not defined in given json`);\n      }\n    });\n    return value;\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n\nimport { ModalOptions } from '../interfaces';\n\n@Injectable()\nexport class ModalService {\n\n  options$: ReplaySubject<ModalOptions> = new ReplaySubject<ModalOptions>(1);\n  display$: ReplaySubject<boolean> = new ReplaySubject<boolean>(1);\n\n  displayModal(options: ModalOptions) {\n    this.options$.next(options);\n    this.display$.next(true);\n  }\n\n  closeCurrentModal() {\n    this.display$.next(false);\n  }\n\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Injectable } from '@angular/core';\n\nimport { EmptyValueService } from './empty-value.service';\nimport { ComponentTypeService } from './component-type.service';\nimport { JSONSchema } from '../interfaces';\n\n@Injectable()\nexport class RecordFixerService {\n\n  constructor(private emptyValueService: EmptyValueService,\n    private componentTypeService: ComponentTypeService) { }\n\n  /**\n   * Fixes given record according to given schema, in other words\n   * changes it to match the format expected the by te json-editor\n   *\n   * @param rawRecord - json record to be fixed\n   * @param schema - extended schema of rawRecord\n   * @return - fixed record\n   */\n  fixRecord(rawRecord: object, schema: JSONSchema): object {\n    const record = Object.assign({}, rawRecord);\n    Object.keys(record).forEach(field => {\n      if (!schema.properties[field]) {\n        // Delete if field is not in schema!\n        this.deleteField(record, field);\n      } else {\n        // Fix the field and all children.\n        this.fix(field, record, schema.properties[field]);\n      }\n    });\n    return record;\n  }\n\n  /**\n   * Visits all parts of record recursivly, along with the subschema of the part\n   * and apply required fixes.\n   *\n   * NOTE: the reason that parent and key are passed instead of the direct value\n   * is to be able do some operations that needs the parent such as `delete`.\n   *\n   * TODO: add special case for arrays because fixes are the same for\n   * all elements.\n   *\n   * @param key - field name or element index\n   * @param parent - parent of the field/element\n   * @param schema - schema of visited field/element\n   */\n  private fix(key: string | number, parent: object | Array<any>, schema: JSONSchema) {\n    if (schema.hidden) {\n      return;\n    }\n\n    // Fixes for each type/condition, can be added below.\n    const value = parent[key];\n\n    // Recursive calls\n    if (schema.type === 'object') {\n      if (!schema.properties) {\n        throw new Error(`\"${key}\"'s schema has \"type\": \"object\" but doesn't specify \"properties\"`);\n      } else if (!(value instanceof Object)) {\n        throw new Error(`\"${key}\" in ${JSON.stringify(value, null, 2)} is specified as \"object\" by schema but it is not an object in json`);\n      }\n      // Looping over record to filter out fields that are not in schema.\n      Object.keys(value).forEach(prop => {\n        if (!schema.properties[prop]) {\n          // we don't like fields without schema!\n          this.deleteField(value, prop);\n        } else {\n          this.fix(prop, value, schema.properties[prop]);\n        }\n      });\n    } else if (schema.type === 'array') {\n      if (!schema.items) {\n        throw new Error(`\"${key}\"'s schema has \"type\": \"array\" but doesn't specify \"items\"`);\n      } else if (!Array.isArray(value)) {\n        throw new Error(`\"${key}\" in ${JSON.stringify(value, null, 2)} is specified as \"array\" by schema but it is not an array in json`);\n      }\n      value.forEach((element, index) => {\n        this.fix(index, value, schema.items);\n      });\n    }\n  }\n\n  /**\n   * Deletes given field from the given object.\n   * Used for deleting fields that aren't on the schema.\n   *\n   * TODO: replace this with only `delete` when logging is not necessary!\n   */\n  private deleteField(object: object, field: string) {\n    delete object[field];\n    console.warn(`\"${field}\" is removed from input json since it's not in the schema`);\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Injectable } from '@angular/core';\nimport * as _ from 'lodash';\n\nimport { JsonUtilService } from './json-util.service';\nimport { ComponentTypeService } from './component-type.service';\nimport { JSONSchema, SchemaOptions } from '../interfaces';\n\n@Injectable()\nexport class SchemaFixerService {\n\n  constructor(private jsonUtilService: JsonUtilService,\n    private componentTypeService: ComponentTypeService) { }\n\n  /**\n   * Fixes schema to be in a format that expected by json-editor\n   *\n   * @param schema - json schema\n   * @param config - schema specific options\n   * @return - fixed schema\n   */\n  fixSchema(originalSchema: JSONSchema, config?: SchemaOptions): JSONSchema {\n    let schema = _.cloneDeep(originalSchema);\n    if (config) {\n      schema = this.enrichSchemaWithConfig(schema, config);\n    }\n    schema = this.fixRecursively(schema);\n    return schema;\n  }\n\n  /**\n   * Enriches given schema with given configuration objects\n   * puts config into correct places in schema.\n   *\n   * @param schema - json schema\n   * @param config - schema specific options\n   */\n  private enrichSchemaWithConfig(schema: JSONSchema, config: SchemaOptions): JSONSchema {\n    return _.mergeWith(schema, config, (currentSchema, currentConfig, key) => {\n      if ((key === 'properties' || key === 'items') && !currentSchema) {\n        console.warn(`config => ${JSON.stringify(currentConfig, (configKey, value) => {\n          if (typeof value === 'function') {\n            return 'ƒ()';\n          }\n          return value;\n        }, 2)} should not be under \"${key}\" because schema does not have \"${key}\"`);\n        // cancel merge to avoid creating broken json schema\n        return null;\n      }\n      if (currentSchema && key === 'properties') {\n        const configKeys = Object.keys(currentConfig);\n        configKeys\n          .filter(configKey => !currentSchema[configKey])\n          .forEach(wrongConfigKey => {\n            delete currentConfig[wrongConfigKey];\n            console.warn(wrongConfigKey);\n          });\n      }\n    });\n  }\n\n  /**\n   * Applies all fixes to schema recursively\n   */\n  private fixRecursively(schema: JSONSchema): JSONSchema {\n    if (schema.anyOf) {\n      schema = this.fixAnyOf(schema);\n    } else if (schema.allOf) {\n      schema = this.fixAllOf(schema);\n    }\n    if (schema.order) {\n      schema = this.fixOrder(schema);\n    }\n    if (schema.disabled) {\n      schema = this.fixDisabled(schema);\n    }\n    if (schema.alwaysShow) {\n      schema = this.fixAlwaysShow(schema);\n    }\n    if (schema.alwaysShowRegExp) {\n      schema = this.fixAlwaysShowRegExp(schema);\n    }\n    // schema fixes must be done above\n\n    // recursively call for deeper parts of schema\n    if (schema.properties) {\n      Object.keys(schema.properties)\n        .forEach(prop => {\n          schema.properties[prop] = this.fixRecursively(schema.properties[prop]);\n        });\n    } else if (schema.items) {\n      schema.items = this.fixRecursively(schema.items);\n    }\n    // fixes that needs above fixes to be done deeply for the current schema\n    schema.componentType = this.componentTypeService.getComponentType(schema);\n\n    return schema;\n  }\n\n  /**\n   * Fixes disabled config to assign the disabled attribute\n   * to array items or object properties\n   */\n  private fixDisabled(schema: JSONSchema): JSONSchema {\n    if (schema.items) {\n      schema.items.disabled = true;\n    } else if (schema.properties) {\n      Object.keys(schema.properties)\n        .forEach(prop => {\n          schema.properties[prop].disabled = true;\n        });\n    }\n    return schema;\n  }\n\n  /**\n   * Fixes order config to assign the right priority to properties\n   */\n  private fixOrder(schema: JSONSchema): JSONSchema {\n    const order: Array<string> = schema.order;\n    order.forEach((orderKey: string, index: number) => {\n      const priority = order.length - index;\n      if (orderKey in schema.properties) {\n        schema.properties[orderKey].priority = priority;\n      } else {\n        console.warn(`${orderKey} defined in order config does not exist in schema.`);\n      }\n    });\n    return schema;\n  }\n\n  /**\n   * Fixes anyOf schemas with exactly same property structure\n   * it merges all enum fields in anyOf elements\n   */\n  private fixAnyOf(schema: JSONSchema): JSONSchema {\n    const anyOf = schema.anyOf;\n\n    // find existence count of all enum properties in anyOf elements\n    // the reason of this, a field could be enum type for some and not for some other anyOf element\n    const enumPropCount = {};\n    anyOf.forEach(anyOfElement => {\n      Object.keys(anyOfElement.properties)\n        .filter(prop => anyOfElement.properties[prop].enum)\n        .forEach(prop => {\n          if (!enumPropCount[prop]) {\n            enumPropCount[prop] = 0;\n          }\n          enumPropCount[prop]++;\n        });\n    });\n\n    // combine all enum arrays in anyOf elements\n    const enums = {};\n    Object.keys(enumPropCount)\n      .forEach(prop => {\n        anyOf.forEach(anyOfElement => {\n          if (!enums[prop]) {\n            enums[prop] = [];\n          }\n          const enumValues = anyOfElement.properties[prop].enum;\n          // check if current field is enum for current anyOf element\n          if (enumValues) {\n            enums[prop] = enums[prop].concat(enumValues);\n          }\n        });\n      });\n\n    const fixedSchema = anyOf[0];\n    // shallow cleaning of format and pattern\n    Object.keys(fixedSchema.properties)\n      .forEach(prop => {\n        delete fixedSchema.properties[prop].format;\n        delete fixedSchema.properties[prop].pattern;\n      });\n\n    Object.keys(enumPropCount)\n      .forEach(prop => {\n        const uniqueEnumValues = Array.from(new Set(enums[prop])) as Array<string>;\n        // if a field enum for all anyOf elements\n        if (enumPropCount[prop] === anyOf.length) {\n          // merge all enum values into one\n          fixedSchema.properties[prop].enum = uniqueEnumValues;\n          // if a field enum for some of anyOf elements\n        } else {\n          // create a autocomplete config so that it will allow any values\n          // but autocomplete from enum values from where the field is defined as enum\n          delete fixedSchema.properties[prop].enum;\n          fixedSchema.properties[prop].autocompletionConfig = {\n            source: uniqueEnumValues,\n            size: 7\n          };\n        }\n      });\n    // copy disabled attribute inside fixedSchema because it\n    // is outside anyOf element and is ignored\n    if (schema.disabled) {\n      fixedSchema.disabled = true;\n    }\n    return fixedSchema;\n  }\n\n  private fixAllOf(schema: JSONSchema): JSONSchema {\n    return _.merge({}, ...schema.allOf) as JSONSchema;\n  }\n\n  /**\n   * Adds keys that matches `alwaysShowRegExp` to `alwaysShow`.\n   * Passes `alwaysShowRegExp` down to children so that it is applied recursively.\n   */\n  private fixAlwaysShowRegExp(schema: JSONSchema): JSONSchema {\n    if (!schema.alwaysShow) {\n      schema.alwaysShow = [];\n    }\n    Object.keys(schema.properties)\n      .forEach(key => {\n        // pass alwaysShowRegExp down to apply it recursively.\n        const subSchema = schema.properties[key];\n        if (subSchema.type === 'object') {\n          subSchema.alwaysShowRegExp = schema.alwaysShowRegExp;\n        }\n\n        if (key.search(schema.alwaysShowRegExp) > -1) {\n          schema.alwaysShow.push(key);\n        }\n      });\n    return schema;\n  }\n\n  /**\n   * Removes alwayShow fields that aren't in the schema.properties\n   * and warns on console.\n   */\n  private fixAlwaysShow(schema: JSONSchema): JSONSchema {\n    const alwaysShow = schema.alwaysShow;\n    schema.alwaysShow = alwaysShow.filter(key => {\n      if (schema.properties[key]) {\n        return true;\n      } else {\n        console.warn(`${key} is configured as alwaysShow but it is not in ${JSON.stringify(Object.keys(schema.properties))}`);\n      }\n    });\n    return schema;\n  }\n\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Injectable } from '@angular/core';\nimport * as Ajv from 'ajv';\nimport * as enableCustomErrorMessages from 'ajv-errors';\n\nimport { AppGlobalsService } from './app-globals.service';\nimport { JSONSchema, ValidationProblem } from '../interfaces';\n\n@Injectable()\nexport class SchemaValidationService {\n\n  // `jsonPointer: true` is required for `avj-errors` package\n  private ajv = new Ajv({ allErrors: true, jsonPointers: true });\n\n  // https://gist.github.com/dperini/729294\n  private reWebUrl = new RegExp(\n    '^' +\n    // protocol identifier\n    '(?:(?:https?|ftp)://)' +\n    // user:pass authentication\n    '(?:\\\\S+(?::\\\\S*)?@)?' +\n    '(?:' +\n    // IP address exclusion\n    // private & local networks\n    '(?!(?:10)(?:\\\\.\\\\d{1,3}){3})' +\n    '(?!(?:169\\\\.254|192\\\\.168)(?:\\\\.\\\\d{1,3}){2})' +\n    '(?!172\\\\.(?:1[6-9]|2\\\\d|3[0-1])(?:\\\\.\\\\d{1,3}){2})' +\n    // IP address dotted notation octets\n    // excludes loopback network 0.0.0.0\n    // excludes reserved space >= 224.0.0.0\n    // excludes network & broacast addresses\n    // (first & last IP address of each class)\n    '(?:[1-9]\\\\d?|1\\\\d\\\\d|2[01]\\\\d|22[0-3])' +\n    '(?:\\\\.(?:1?\\\\d{1,2}|2[0-4]\\\\d|25[0-5])){2}' +\n    '(?:\\\\.(?:[1-9]\\\\d?|1\\\\d\\\\d|2[0-4]\\\\d|25[0-4]))' +\n    '|' +\n    'localhost' +\n    '|' +\n    // host name\n    '(?:(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)' +\n    // domain name\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff0-9]-*)*[a-z\\\\u00a1-\\\\uffff0-9]+)*' +\n    // TLD identifier\n    '(?:\\\\.(?:[a-z\\\\u00a1-\\\\uffff]{2,}))' +\n    // TLD may end with dot\n    '\\\\.?' +\n    ')' +\n    // port number\n    '(?::\\\\d{2,5})?' +\n    // resource path\n    '(?:[/?#]\\\\S*)?' +\n    '$', 'i'\n  );\n\n  constructor(public appGlobalsService: AppGlobalsService) {\n    enableCustomErrorMessages(this.ajv);\n\n    //  ajv didn't support format:url, so was added using web url regex for validation\n    this.ajv.addFormat('url', this.reWebUrl);\n    if (this.appGlobalsService.config && this.appGlobalsService.config.customFormatValidation) {\n      const customFormats = this.appGlobalsService.config.customFormatValidation;\n\n      Object.keys(customFormats).forEach(key => {\n        this.ajv.addFormat(key, customFormats[key].formatChecker);\n      });\n    }\n  }\n\n  /**\n   * Validates a specific value against schema\n   *\n   * Uses: ajv package for json-schema validation\n   *\n   */\n  validateValue(value: any, schema: JSONSchema): Array<ValidationProblem> {\n    const validationErrors = [];\n\n    if (!this.ajv.validate(schema, value)) {\n      this.ajv.errors.forEach(error => {\n        validationErrors.push({\n          message: error.message,\n          type: 'Error'\n        });\n      });\n    }\n    return validationErrors;\n  }\n\n}\n\n\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n */\n\nimport { Injectable } from '@angular/core';\nimport { List } from 'immutable';\n\nimport { EmptyValueService } from './empty-value.service';\nimport { JsonStoreService } from './json-store.service';\nimport { JsonSchemaService } from './json-schema.service';\nimport { DomUtilService } from './dom-util.service';\nimport { PathUtilService } from './path-util.service';\nimport { KeysStoreService } from './keys-store.service';\nimport { JSONSchema, ShortcutActionFunction } from '../interfaces';\n\n@Injectable()\nexport class ShortcutActionService {\n\n  constructor(public emptyValueService: EmptyValueService,\n    public domUtilService: DomUtilService,\n    public jsonStoreService: JsonStoreService,\n    public jsonSchemaService: JsonSchemaService,\n    public pathUtilService: PathUtilService,\n    public keysStoreService: KeysStoreService) { }\n\n  addToRootAction(path: Array<any>): void {\n    this.add(path, true);\n  }\n\n  addAction(path: Array<any>): void {\n    this.add(path, false);\n  }\n\n  private add(path: Array<any>, root: boolean): void {\n    const _path = this.pathUtilService.getNearestOrRootArrayParentInPath(path, root);\n    this.addNewElementInArray(_path, this.jsonSchemaService.forPathArray(_path));\n  }\n\n  /**\n   * @param path - Path of the array parent that the element is about to be inserted\n   * @param schema - Schema of the element that is about to be inserted\n   */\n  private addNewElementInArray(path: Array<any>, schema: JSONSchema) {\n    const itemSchema = schema.items;\n    const emptyValue = this.emptyValueService.generateEmptyValue(itemSchema);\n    const values = this.jsonStoreService.getIn(path) || List();\n    this.jsonStoreService.setIn(path, values.push(emptyValue));\n    path.push(values.size);\n    this.waitThenFocus(this.pathUtilService.toPathString(path));\n  }\n\n  addBelowToRootAction(path: Array<any>): void {\n    const rootPath = this.pathUtilService.getNearestOrRootArrayParentInPath(path, true);\n    const schema = this.jsonSchemaService.forPathArray(rootPath);\n    const itemSchema = schema.items;\n    const emptyValue = this.emptyValueService.generateEmptyValue(itemSchema);\n    const values = this.jsonStoreService.getIn(rootPath) || List();\n    this.jsonStoreService.setIn(rootPath, values.insert(path[1] + 1, emptyValue));\n    rootPath.push(path[1] + 1);\n    this.waitThenFocus(this.pathUtilService.toPathString(rootPath));\n  }\n\n  moveUpAction(path: Array<any>): void {\n    this.move(path, -1);\n  }\n\n  moveDownAction(path: Array<any>): void {\n    this.move(path, 1);\n  }\n\n  moveUpRootAction(path: Array<any>): void {\n    this.move(path, -1, true);\n  }\n\n  moveDownRootAction(path: Array<any>): void {\n    this.move(path, 1, true);\n  }\n\n  /**\n   * @param path - Path of the element that is moved\n   * @param direction - Movement direction. -1 for UP, +1 for DOWN\n   */\n  private move(path: Array<any>, direction: number, root = false): void {\n    this.domUtilService.blurFirstEditableChildById(this.pathUtilService.toPathString(path));\n    const index = this.pathUtilService.getElementIndexInForwardOrReversePath(path, root);\n    path = this.jsonStoreService.moveIn(this.pathUtilService.getNearestOrRootArrayParentInPath(path, root), index, direction);\n    const pathString = this.pathUtilService.toPathString(path);\n    this.waitThenFocus(pathString);\n  }\n\n  deleteAction(path: Array<any>) {\n    // blur element before delete for ensuring that `commitValueChange` will not show again the deleted value\n    this.domUtilService.blurFirstEditableChildById(this.pathUtilService.toPathString(path));\n    this.deleteElement(this.pathUtilService.getNearestOrRootArrayParentInPath(path, false),\n      this.pathUtilService.getElementIndexInForwardOrReversePath(path, false));\n  }\n\n  /**\n   * @param path - Path of the element's array parent\n   * @param index - Index of the element that is deleted from array parent path\n   */\n  private deleteElement(path: Array<any>, index: number) {\n    const values = this.jsonStoreService.getIn(path);\n    this.jsonStoreService.setIn(path, values.remove(index));\n  }\n\n  navigateUpAction(path: Array<any>): void {\n    this.navigateUpDown(path, -1);\n  }\n\n  navigateDownAction(path: Array<any>): void {\n    this.navigateUpDown(path, 1);\n  }\n\n  /**\n   * @param path - Path of the element that is focused\n   * @param direction - Navigation direction. -1 for UP, +1 for DOWN\n   */\n  private navigateUpDown(path: Array<any>, direction: number) {\n    const values = this.jsonStoreService.getIn(this.pathUtilService.getNearestOrRootArrayParentInPath(path, false));\n    if (List.isList(values)) {\n      const elemIndexInPath = this.pathUtilService.getElementIndexInForwardOrReversePath(path, true);\n      if ((elemIndexInPath + direction) < values.size && (elemIndexInPath + direction) >= 0) {\n        path[path.length - 2] = elemIndexInPath + direction;\n      } else {\n        path[path.length - 2] = values.size - Math.abs((elemIndexInPath + direction));\n      }\n      const pathString = this.pathUtilService.toPathString(path);\n      this.domUtilService.focusAndSelectFirstEditableChildById(pathString);\n    }\n  }\n\n  navigateLeftAction(path: Array<any>): void {\n    this.navigateRightLeft(path, -1);\n  }\n\n  navigateRightAction(path: Array<any>): void {\n    this.navigateRightLeft(path, 1);\n  }\n\n  /**\n   * @param path - Path of the element that is focused\n   * @param direction - Navigation direction. -1 for LEFT, +1 for RIGHT\n   */\n  private navigateRightLeft(path: Array<any>, direction: number) {\n    const pathString = this.pathUtilService.toPathString(path);\n    this.domUtilService.focusRightOrLeftParentCell(pathString, direction);\n  }\n\n  /**\n   * Copies the current row in table below and sets the value of the previous focused field to empty in the new row\n   * @param path - Path\n   */\n  copyAction(path: Array<any>) {\n    this.copyRowOrSchemaBelow(path, false);\n  }\n\n  /**\n   * Copies the root parent element below(eg creates a new author in authors list)\n   * when you edit an author's field)\n   * @param path - Path\n   */\n  copyFromRootAction(path: Array<any>) {\n    this.copyRowOrSchemaBelow(path, true);\n  }\n\n  /**\n   * @param originalPath - Path of the element that is copied\n   * @param root - Copy item from parent or root. Set to true for usage as in `copyFromRootAction` and false\n   * for usage as in `copyAction`\n   */\n  private copyRowOrSchemaBelow(originalPath: Array<any>, root: boolean) {\n    const arrayParentPath = this.pathUtilService.getNearestOrRootArrayParentInPath(originalPath, root);\n    if (this.jsonSchemaService.forPathArray(arrayParentPath)['items'].hasOwnProperty('properties')) {\n      const elemIndex = this.pathUtilService.getElementIndexInForwardOrReversePath(originalPath, root);\n      const valuesList = this.jsonStoreService.getIn(arrayParentPath) || List();\n      let newValue = valuesList.get(elemIndex);\n      const newPath = arrayParentPath.concat(elemIndex + 1);\n      let newPathString = this.pathUtilService.toPathString(newPath);\n      if (!root) {\n        newValue = newValue.set(originalPath[originalPath.length - 1]);\n        newPathString = `${newPathString}${this.pathUtilService.separator}${originalPath[originalPath.length - 1]}`;\n      }\n      this.jsonStoreService.setIn(arrayParentPath, valuesList.insert(elemIndex + 1, newValue));\n      this.waitThenFocus(newPathString);\n    }\n  }\n\n  undoAction() {\n    const rolledBackPath = this.jsonStoreService.rollbackLastChange();\n    if (rolledBackPath) {\n      this.waitThenFocus(rolledBackPath);\n    }\n  }\n\n  private waitThenFocus(path: string) {\n    setTimeout(() => {\n      this.domUtilService.focusAndSelectFirstEditableChildById(path, true);\n    });\n  }\n\n  generateShortcutAction(actionName: string): ShortcutActionFunction {\n\n    return (event: KeyboardEvent) => {\n      event.preventDefault();\n      const eventTarget = event.target as HTMLInputElement;\n      const pathString = eventTarget.getAttribute('data-path');\n      if (pathString) {\n        this[actionName](this.pathUtilService.toPathArray(pathString));\n      }\n      return false;\n    };\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Injectable } from '@angular/core';\n\n@Injectable()\nexport class WindowHrefService {\n  // initial value is set to avoid ngc error.\n  readonly hrefWithoutHash: string;\n\n  constructor() {\n    this.hrefWithoutHash = this.getHrefWithoutHash();\n  }\n\n  private getHrefWithoutHash(): string {\n    const href = window.location.href;\n    const lastHashIndex = href.lastIndexOf('#');\n    if (lastHashIndex > 0) {\n      return href.substring(0, lastHashIndex);\n    } else {\n       return href;\n    }\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2017 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n */\n\nimport { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\nimport { Observable } from 'rxjs';\nimport { combineLatest } from 'rxjs';\nimport { distinctUntilChanged, map } from 'rxjs/operators';\n\nimport {\n  SchemaValidationProblems,\n  CategorizedValidationProblems,\n  ValidationProblem,\n  ProblemCollectionType,\n  ProblemCount\n} from '../interfaces';\n\n@Injectable()\nexport class ProblemsService {\n\n  readonly externalCategorizedProblems$ = new ReplaySubject<CategorizedValidationProblems>(1);\n  readonly internalCategorizedProblems$ = new ReplaySubject<CategorizedValidationProblems>(1);\n\n  private readonly externalProblemCount$ = new ReplaySubject<ProblemCount>(1);\n  private readonly internalProblemCount$ = new ReplaySubject<ProblemCount>(1);\n  readonly errorCount$ = this.getTotalDistinctProblemCount$ForType('errors');\n  readonly warningCount$ = this.getTotalDistinctProblemCount$ForType('warnings');\n\n  readonly internalProblemMap$ = new ReplaySubject<SchemaValidationProblems>(1);\n  private internalProblemMap: SchemaValidationProblems = {};\n\n  private internalCategorizedProblemMap: CategorizedValidationProblems = { errors: {}, warnings: {} };\n  private externalCategorizedProblemMap: CategorizedValidationProblems = { errors: {}, warnings: {} };\n\n  private externalProblemCount = { errors: 0, warnings: 0 };\n  private internalProblemCount = { errors: 0, warnings: 0 };\n\n  constructor() {\n    // set default counts to components\n    this.externalProblemCount$.next(this.externalProblemCount);\n    this.internalProblemCount$.next(this.internalProblemCount);\n  }\n\n  private getTotalDistinctProblemCount$ForType(type: ProblemCollectionType): Observable<number> {\n    const external$ = this.externalProblemCount$\n      .pipe(map(counts => counts[type]));\n    const internal$ = this.internalProblemCount$\n      .pipe(map(counts => counts[type]));\n    return combineLatest(external$, internal$, (external, internal) => external + internal)\n      .pipe(distinctUntilChanged());\n  }\n\n  set externalProblems(problems: SchemaValidationProblems) {\n    const { categorizedProblemMap, errorCount, warningCount } = this.categorizeProblemMap(problems);\n\n    this.externalProblemCount = { errors: errorCount, warnings: warningCount };\n    this.externalProblemCount$.next(this.externalProblemCount);\n\n    this.externalCategorizedProblemMap = categorizedProblemMap;\n    this.externalCategorizedProblems$.next(this.externalCategorizedProblemMap);\n  }\n\n  setInternalProblemsForPath(path: string, problems: Array<ValidationProblem>) {\n    this.internalProblemMap[path] = problems;\n    this.internalProblemMap$.next(this.internalProblemMap);\n\n    const categorizedProblems = this.categorizeValidationProblems(problems);\n\n    this.internalProblemCount.errors += categorizedProblems.errors.length - this.internalProblemCountForPath(path, 'errors');\n    this.internalProblemCount.warnings += categorizedProblems.warnings.length - this.internalProblemCountForPath(path, 'warnings');\n    this.internalProblemCount$.next(this.internalProblemCount);\n\n    this.internalCategorizedProblemMap.errors[path] = categorizedProblems.errors;\n    this.internalCategorizedProblemMap.warnings[path] = categorizedProblems.warnings;\n    this.internalCategorizedProblems$.next(this.internalCategorizedProblemMap);\n  }\n\n  private internalProblemCountForPath(path: string, type: ProblemCollectionType): number {\n    if (this.internalCategorizedProblemMap[type][path]) {\n      return this.internalCategorizedProblemMap[type][path].length;\n    }\n    return 0;\n  }\n\n  hasProblem(path: string): boolean {\n    const internalProblems = this.internalCategorizedProblemMap.errors[path];\n    const externalProblems = this.externalCategorizedProblemMap.errors[path];\n    const internalProblemCount = internalProblems ? internalProblems.length : 0;\n    const externalProblemCount = externalProblems ? externalProblems.length : 0;\n    return (internalProblemCount + externalProblemCount) > 0;\n  }\n\n  private categorizeProblemMap(problemMap: SchemaValidationProblems): {\n    categorizedProblemMap: CategorizedValidationProblems,\n    errorCount: number, warningCount: number\n  } {\n    const categorizedProblemMap = { errors: {}, warnings: {} };\n    let errorCount = 0;\n    let warningCount = 0;\n\n    Object.keys(problemMap)\n      .map(path => {\n        const validationProblems = problemMap[path];\n        const categorized = this.categorizeValidationProblems(validationProblems);\n        return { path, categorized };\n      }).forEach(problemsForPath => {\n        categorizedProblemMap.errors[problemsForPath.path] = problemsForPath.categorized.errors;\n        categorizedProblemMap.warnings[problemsForPath.path] = problemsForPath.categorized.warnings;\n        errorCount += problemsForPath.categorized.errors.length;\n        warningCount += problemsForPath.categorized.warnings.length;\n      });\n    return { categorizedProblemMap, errorCount, warningCount };\n  }\n\n  private categorizeValidationProblems(validationProblems: Array<ValidationProblem>) {\n    const categorized: { errors: Array<ValidationProblem>, warnings: Array<ValidationProblem> }\n      = { errors: [], warnings: [] };\n    validationProblems.forEach(error => {\n      if (error.type === 'Error') {\n        categorized.errors.push(error);\n      } else {\n        categorized.warnings.push(error);\n      }\n    });\n    return categorized;\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { List, Map } from 'immutable';\nimport { render, ParseError } from 'katex';\n\nimport { JSONSchema, KatexData } from '../interfaces';\n\n@Injectable()\nexport class KatexService {\n  private delimiters = [\n    { left: '$$', right: '$$', display: true },\n    { left: '$', right: '$', display: false },\n    // FIXME check if we need the ones below\n    { left: '\\\\[', right: '\\\\]', display: true },\n    { left: '\\\\(', right: '\\\\)', display: false },\n  ];\n\n  /**\n  *\n  * Receives text that can contain LaTeX formulas. The formulas will be\n  * identified using `this.delimiters` and rendered inside the passed\n  * HTMLElement\n  *\n  * NOTE: The HTMLElement is expected to have a single child and this\n  * will be replaced by the HTML with formatted LaTeX\n  *\n  * @param {string} text - text to be formatted with LaTeX\n  * @param {HTMLElement} el - the HTMLElement where the LaTeX should be rendered\n  */\n  renderMathInText(text: string, el: HTMLElement) {\n    const data: Array<KatexData> = this.splitWithDelimiters(text, this.delimiters);\n\n    const fragment = document.createDocumentFragment();\n\n    for (let i = 0; i < data.length; i++) {\n      if (data[i].type === 'text') {\n        fragment.appendChild(document.createTextNode(data[i].data));\n      } else {\n        const span = document.createElement('span');\n        const math = data[i].data;\n        try {\n          render(math, span, {\n            displayMode: data[i].display,\n          });\n        } catch (e) {\n          if (!(e instanceof ParseError)) {\n            throw e;\n          }\n          console.error(\n            `KaTeX auto-render: Failed to parse ${data[i].data} with ${e}`\n          );\n          fragment.appendChild(document.createTextNode(data[i].rawData));\n          continue;\n        }\n        fragment.appendChild(span);\n      }\n    }\n    // clear\n    el.innerHTML = '';\n    el.appendChild(fragment);\n  }\n\n  private findEndOfMath(delimiter: string, text: string, startIndex: number): number {\n    // Adapted from\n    // https://github.com/Khan/perseus/blob/master/src/perseus-markdown.jsx\n    let index = startIndex;\n    let braceLevel = 0;\n\n    const delimLength = delimiter.length;\n\n    while (index < text.length) {\n      const character = text[index];\n\n      if (braceLevel <= 0 &&\n        text.slice(index, index + delimLength) === delimiter) {\n        return index;\n      } else if (character === '\\\\') {\n        index++;\n      } else if (character === '{') {\n        braceLevel++;\n      } else if (character === '}') {\n        braceLevel--;\n      }\n\n      index++;\n    }\n\n    return -1;\n  }\n\n  private splitAtDelimiters(startData: Array<KatexData>, leftDelim: string, rightDelim: string, display: boolean): Array<KatexData> {\n    const finalData = [];\n\n    for (let i = 0; i < startData.length; i++) {\n      if (startData[i].type === 'text') {\n        const text = startData[i].data;\n\n        let lookingForLeft = true;\n        let currIndex = 0;\n        let nextIndex;\n\n        nextIndex = text.indexOf(leftDelim);\n        if (nextIndex !== -1) {\n          currIndex = nextIndex;\n          finalData.push({\n            type: 'text',\n            data: text.slice(0, currIndex),\n          });\n          lookingForLeft = false;\n        }\n\n        while (true) {\n          if (lookingForLeft) {\n            nextIndex = text.indexOf(leftDelim, currIndex);\n            if (nextIndex === -1) {\n              break;\n            }\n\n            finalData.push({\n              type: 'text',\n              data: text.slice(currIndex, nextIndex),\n            });\n\n            currIndex = nextIndex;\n          } else {\n            nextIndex = this.findEndOfMath(\n              rightDelim,\n              text,\n              currIndex + leftDelim.length);\n            if (nextIndex === -1) {\n              break;\n            }\n\n            finalData.push({\n              type: 'math',\n              data: text.slice(\n                currIndex + leftDelim.length,\n                nextIndex),\n              rawData: text.slice(\n                currIndex,\n                nextIndex + rightDelim.length),\n              display: display,\n            });\n\n            currIndex = nextIndex + rightDelim.length;\n          }\n\n          lookingForLeft = !lookingForLeft;\n        }\n\n        finalData.push({\n          type: 'text',\n          data: text.slice(currIndex),\n        });\n      } else {\n        finalData.push(startData[i]);\n      }\n    }\n\n    return finalData;\n  }\n\n  private splitWithDelimiters(text, delimiters): Array<KatexData> {\n    let data = [{ type: 'text', data: text }];\n    for (let i = 0; i < delimiters.length; i++) {\n      const delimiter = delimiters[i];\n      data = this.splitAtDelimiters(\n        data, delimiter.left, delimiter.right,\n        delimiter.display || false);\n    }\n    return data;\n  }\n\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2017 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n */\n\nimport { Injectable } from '@angular/core';\nimport { diffWords, IDiffResult } from 'diff';\n\n@Injectable()\nexport class TextDiffService {\n  diffByWord(currentText: string, newText = ''): Array<IDiffResult> {\n    return diffWords(currentText, newText);\n  }\n}\n","import { AppGlobalsService } from './app-globals.service';\nimport { RemoteAutocompletionService } from './remote-autocompletion.service';\nimport { ComponentTypeService } from './component-type.service';\nimport { DomUtilService } from './dom-util.service';\nimport { EmptyValueService } from './empty-value.service';\nimport { FindReplaceAllService } from './find-replace-all.service';\nimport { JsonStoreService } from './json-store.service';\nimport { JsonUtilService } from './json-util.service';\nimport { JsonSchemaService } from './json-schema.service';\nimport { KeysStoreService } from './keys-store.service';\nimport { PathUtilService } from './path-util.service';\nimport { ModalService } from './modal.service';\nimport { RecordFixerService } from './record-fixer.service';\nimport { SchemaFixerService } from './schema-fixer.service';\nimport { SchemaValidationService } from './schema-validation.service';\nimport { ShortcutActionService } from './shortcut-action.service';\nimport { WindowHrefService } from './window-href.service';\nimport { TabsUtilService } from './tabs-util.service';\nimport { ProblemsService } from './problems.service';\nimport { KatexService } from './katex.service';\nimport { TextDiffService } from './text-diff.service';\nimport { ListPageChangerService } from './list-page-changer.service';\nimport { CompareKeysBySchemaService } from './compare-keys-by-schema.service';\n\nexport {\n  AppGlobalsService,\n  RemoteAutocompletionService,\n  ComponentTypeService,\n  DomUtilService,\n  EmptyValueService,\n  FindReplaceAllService,\n  JsonStoreService,\n  JsonUtilService,\n  JsonSchemaService,\n  KeysStoreService,\n  PathUtilService,\n  ModalService,\n  RecordFixerService,\n  SchemaFixerService,\n  SchemaValidationService,\n  ShortcutActionService,\n  WindowHrefService,\n  TabsUtilService,\n  ProblemsService,\n  KatexService,\n  TextDiffService,\n  ListPageChangerService,\n  CompareKeysBySchemaService\n};\n\nexport const SHARED_SERVICES = [\n  AppGlobalsService,\n  RemoteAutocompletionService,\n  ComponentTypeService,\n  DomUtilService,\n  EmptyValueService,\n  FindReplaceAllService,\n  JsonStoreService,\n  JsonUtilService,\n  KeysStoreService,\n  JsonSchemaService,\n  PathUtilService,\n  ModalService,\n  RecordFixerService,\n  SchemaFixerService,\n  SchemaValidationService,\n  ShortcutActionService,\n  WindowHrefService,\n  TabsUtilService,\n  ProblemsService,\n  KatexService,\n  TextDiffService,\n  ListPageChangerService,\n  CompareKeysBySchemaService\n];\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n */\n\nimport {\n  ElementRef,\n  Directive,\n  Input,\n  OnChanges,\n  OnDestroy,\n  SimpleChanges\n} from '@angular/core';\n\nimport { MousetrapInstance,\nMousetrap } from 'mousetrap';\n\nimport { ShortcutActionService } from '../services';\nimport { Shortcut, CustomShortcutKeys } from '../interfaces';\n\n@Directive({\n  selector: '[shortcuts]'\n})\nexport class ShortcutsDirective implements OnDestroy, OnChanges {\n  // custom shortcut keys\n  @Input() shortcuts: CustomShortcutKeys;\n\n  // actions with default shortcut keys, update with the custom keys later\n  private readonly actionNameToShortcut: { [actionName: string]: Shortcut } = {\n    add: {\n      key: 'alt+a',\n      action: this.shortcutActionService.generateShortcutAction('addAction')\n    },\n    addToRoot: {\n      key: 'mod+shift+a',\n      action: this.shortcutActionService.generateShortcutAction('addToRootAction')\n    },\n    addBelowToRoot: {\n      key: 'mod+shift+b',\n      action: this.shortcutActionService.generateShortcutAction('addBelowToRootAction')\n    },\n    moveUp: {\n      key: 'mod+shift+up',\n      action: this.shortcutActionService.generateShortcutAction('moveUpAction')\n    },\n    moveDown: {\n      key: 'mod+shift+down',\n      action: this.shortcutActionService.generateShortcutAction('moveDownAction')\n    },\n    moveUpRoot: {\n      key: 'mod+alt+up',\n      action: this.shortcutActionService.generateShortcutAction('moveUpRootAction')\n    },\n    moveDownRoot: {\n      key: 'mod+alt+down',\n      action: this.shortcutActionService.generateShortcutAction('moveDownRootAction')\n    },\n    delete: {\n      key: 'mod+backspace',\n      action: this.shortcutActionService.generateShortcutAction('deleteAction')\n    },\n    navigateUp: {\n      key: 'mod+up',\n      action: this.shortcutActionService.generateShortcutAction('navigateUpAction')\n    },\n    navigateDown: {\n      key: 'mod+down',\n      action: this.shortcutActionService.generateShortcutAction('navigateDownAction')\n    },\n    navigateLeft: {\n      key: 'mod+left',\n      action: this.shortcutActionService.generateShortcutAction('navigateLeftAction')\n    },\n    navigateRight: {\n      key: 'mod+right',\n      action: this.shortcutActionService.generateShortcutAction('navigateRightAction')\n    },\n    copy: {\n      key: 'alt+c',\n      action: this.shortcutActionService.generateShortcutAction('copyAction')\n    },\n    copyFromRoot: {\n      key: 'mod+alt+r',\n      action: this.shortcutActionService.generateShortcutAction('copyFromRootAction')\n    },\n    undo: {\n      key: 'mod+alt+z',\n      action: this.shortcutActionService.generateShortcutAction('undoAction')\n    }\n  };\n  private mousetrap: MousetrapInstance;\n\n  constructor(private el: ElementRef,\n    private shortcutActionService: ShortcutActionService) {\n    this.mousetrap = new Mousetrap(this.el.nativeElement);\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const customShortcutKeysChange = changes['shortcuts'];\n    if (customShortcutKeysChange) {\n      const actionNames = Object.keys(this.actionNameToShortcut);\n      // if custom shortcut keys are set\n      if (this.shortcuts) {\n        actionNames.forEach(actionName => {\n          const shortcut = this.actionNameToShortcut[actionName];\n          if (this.shortcuts[actionName]) {\n            // override shortcut key\n            shortcut.key = this.shortcuts[actionName];\n          }\n          this.mousetrap.bind(shortcut.key, shortcut.action);\n        });\n      } else {\n        actionNames.forEach(actionName => {\n          const shortcut = this.actionNameToShortcut[actionName];\n          this.mousetrap.bind(shortcut.key, shortcut.action);\n        });\n      }\n\n    }\n  }\n\n\n  ngOnDestroy() {\n    Object.keys(this.actionNameToShortcut)\n      .forEach(actionName => {\n        this.mousetrap.unbind(this.actionNameToShortcut[actionName].key);\n      });\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Component, ChangeDetectorRef, ChangeDetectionStrategy, ViewChild, OnInit } from '@angular/core';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\n\nimport { AbstractSubscriberComponent } from '../abstract-subscriber';\nimport { ModalService } from '../shared/services';\nimport { ModalOptions } from '../shared/interfaces';\nimport { takeUntil } from \"rxjs/operators\";\n\n@Component({\n  selector: 'modal-view',\n  styleUrls: [\n    './modal-view.component.scss'\n  ],\n  templateUrl: './modal-view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ModalViewComponent extends AbstractSubscriberComponent implements OnInit {\n\n  @ViewChild('modal') modal: ModalDirective;\n  options: ModalOptions;\n\n  // TODO: unsubcribe on destroy\n  constructor(private modalService: ModalService,\n    private changeDetectorRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.modalService\n      .display$\n      .pipe(takeUntil(this.isDestroyed))\n      .subscribe(display => {\n        display ? this.modal.show() : this.modal.hide();\n      });\n    this.modalService\n      .options$\n      .pipe(takeUntil(this.isDestroyed))\n      .subscribe(options => {\n        this.options = options;\n        this.changeDetectorRef.markForCheck();\n      });\n  }\n\n  onShow() {\n    if (this.options && this.options.onShow) {\n      this.options.onShow();\n    }\n  }\n}\n","<div class=\"modal fade\" (onShown)=\"onShow()\" bsModal #modal=\"bs-modal\" tabindex=\"-1\" role=\"dialog\" [config]=\"{ backdrop: false }\">\n  <div class=\"modal-dialog modal-lg\">\n    <div *ngIf=\"options\" class=\"modal-content\">\n      <div class=\"modal-header\">\n        <button type=\"button\" class=\"close\" (click)=\"modal.hide()\">&times;</button>\n        <h4 class=\"modal-title\">{{options.title}}</h4>\n      </div>\n      <div class=\"modal-body\">\n        <div [innerHTML]=\"options.bodyHtml\"></div>\n        <div [ngSwitch]=\"options.type\">\n          <div *ngSwitchCase=\"'confirm'\">\n            <button class=\"btn btn-success\" (click)=\"options.onConfirm();\">\n               <i class=\"fa fa-check\"></i> Confirm\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</div>","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Set, OrderedSet } from 'immutable';\n\nimport { JSONSchema } from '../interfaces';\n\n@Pipe({\n  name: 'sortAlphabetically',\n})\nexport class SortAlphabeticallyPipe implements PipeTransform {\n\n  transform(set: Set<string>): OrderedSet<string> {\n    return set.sort((a, b) => {\n      if (a < b) { return -1; }\n      if (a > b) { return 1; }\n      return 0;\n    }) as OrderedSet<string>;\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filterByExpression',\n})\nexport class FilterByExpressionPipe implements PipeTransform {\n\n  transform(array: Array<string>, prefix: string): Array<string> {\n    const pattern = new RegExp(prefix, 'i');\n    return array.filter(value => value.match(pattern));\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Component, Input, Output, EventEmitter, ElementRef, OnChanges, SimpleChanges, ChangeDetectionStrategy } from '@angular/core';\nimport { Set } from 'immutable';\n\nimport { DomUtilService, KeysStoreService } from '../shared/services';\nimport { JSONSchema } from '../shared/interfaces';\n\n@Component({\n  selector: 'add-field-dropdown',\n  styleUrls: [\n    './add-field-dropdown.component.scss'\n  ],\n  templateUrl: './add-field-dropdown.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AddFieldDropdownComponent implements OnChanges {\n\n  @Input() schema: JSONSchema;\n  @Input() fields: Set<string>;\n  @Input() pathString: string;\n  @Input() isDisabled: boolean;\n\n  addableKeys: any;\n  expression = '';\n  hidden = false;\n\n  constructor(private elementRef: ElementRef,\n    private domUtilService: DomUtilService,\n    private keysStoreService: KeysStoreService) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['schema'] || changes['fields']) {\n      this.addableKeys = Set.fromKeys(this.schema.properties)\n        .subtract(this.fields)\n        .filter(field => !this.schema.properties[field].hidden);\n      this.hidden = this.addableKeys.size === 0;\n    }\n  }\n\n  onDropdownShown() {\n    setTimeout(() =>\n      this.domUtilService.focusFirstInputChildByElement(this.elementRef.nativeElement));\n  }\n\n  onFieldSelect(field: string) {\n    const newFieldPathString = this.keysStoreService.addKey(this.pathString, field, this.schema);\n    this.domUtilService.focusAndSelectFirstEditableChildById(newFieldPathString);\n    this.expression = '';\n  }\n\n}\n","<div *ngIf=\"!hidden\" class=\"btn-group add-field-dropdown-container\" dropdown keyboardNav=\"true\" [isDisabled]=\"isDisabled\" (onShown)=\"onDropdownShown()\">\n  <button type=\"button\" class=\"btn btn-add-field-dropdown\" dropdownToggle>\n     <ng-content></ng-content>\n  </button>\n  <ul class=\"dropdown-menu\" *dropdownMenu>\n    <li class=\"dropdown-filter-container\">\n      <input [(ngModel)]=\"expression\" placeholder=\"filter\" (click)=\"$event.stopPropagation()\">\n    </li>\n    <li class=\"divider dropdown-divider\"></li>\n    <li *ngFor=\"let key of addableKeys | filterByExpression:expression | sortAlphabetically\">\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\" (click)=\"onFieldSelect(key)\">{{key}}</a>\n    </li>\n  </ul>\n</div>","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2017 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n */\n\nimport { Component, Output, EventEmitter, OnInit, OnDestroy, ChangeDetectorRef, ChangeDetectionStrategy } from '@angular/core';\n\nimport { AbstractSubscriberComponent } from '../abstract-subscriber';\nimport { ProblemsService, JsonStoreService } from '../shared/services';\nimport { Subscription } from 'rxjs';\nimport { takeUntil, map } from 'rxjs/operators';\n\n@Component({\n  selector: 'bottom-console-badges',\n  styleUrls: [\n    './bottom-console-badges.component.scss'\n  ],\n  templateUrl: './bottom-console-badges.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BottomConsoleBadgesComponent extends AbstractSubscriberComponent implements OnInit, OnDestroy {\n\n  @Output() badgeClick = new EventEmitter<string>();\n\n  errorCount = 0;\n  warningCount = 0;\n  patchCount = 0;\n\n  constructor(private problemsService: ProblemsService,\n    private changeDetectorRef: ChangeDetectorRef,\n    private jsonStoreService: JsonStoreService) {\n    super();\n  }\n\n  ngOnInit() {\n    this.problemsService.errorCount$\n      .pipe(takeUntil(this.isDestroyed))\n      .subscribe(count => {\n        this.errorCount = count;\n        // FIXME: use markForCheck() instead\n        // markForCheck() wasn't working for mysterious reasons for initial update\n        this.changeDetectorRef.detectChanges();\n      });\n    this.problemsService.warningCount$\n      .pipe(takeUntil(this.isDestroyed))\n      .subscribe(count => {\n        this.warningCount = count;\n        // FIXME: use markForCheck() instead\n        // markForCheck() wasn't working for mysterious reasons for initial update\n        this.changeDetectorRef.detectChanges();\n      });\n    this.jsonStoreService.patchesByPath$\n      .pipe(map(patchesByPath => {\n        return Object.keys(patchesByPath)\n          .map(path => patchesByPath[path].length)\n          .reduce((sum, patchCountPerPath) => sum + patchCountPerPath, 0);\n      }))\n      .pipe(takeUntil(this.isDestroyed))\n      .subscribe(patchCount => {\n        this.patchCount = patchCount;\n        this.changeDetectorRef.markForCheck();\n      });\n  }\n\n  onBadgeClick(event: Event, badgeName: string) {\n    event.preventDefault();\n    this.badgeClick.emit(badgeName);\n  }\n}\n","<div class=\"badges-container\">\n  <a *ngIf=\"errorCount > 0\" class=\"error\" (click)=\"onBadgeClick($event, 'Errors')\" tooltip=\"{{errorCount}} error(s)\" placement=\"right\">\n    <span class=\"error fa-stack fa-lg\">\n      <i class=\"fa fa-times fa-stack-1x fa-inverse\"></i>\n    </span>\n  </a>\n  <a *ngIf=\"warningCount > 0\" class=\"warning\" (click)=\"onBadgeClick($event, 'Warnings')\" tooltip=\"{{warningCount}} warning(s)\" placement=\"right\">\n    <span class=\"warning fa-stack fa-lg\"> \n      <i class=\"fa fa-exclamation fa-stack-1x fa-inverse\"></i>\n    </span>\n  </a>\n  <a *ngIf=\"patchCount > 0\" class=\"patch\" (click)=\"onBadgeClick($event, 'Patches')\" tooltip=\"{{patchCount}} conflicts(s)\" placement=\"right\">\n    <span class=\"patch fa-stack fa-lg\">\n      <i class=\"fa fa-bolt fa-stack-1x fa-inverse\"></i>\n    </span>\n  </a>\n</div>","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Set } from 'immutable';\n\nimport { JSONSchema } from '../interfaces';\n\n@Pipe({\n  name: 'addAlwaysShowFields'\n})\nexport class AddAlwaysShowFieldsPipe implements PipeTransform {\n\n  transform(fields: Set<string>, schema: JSONSchema): Set<string> {\n    const alwaysShowFields = schema.alwaysShow || [];\n    return fields.union(alwaysShowFields);\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Set } from 'immutable';\n\nimport { JSONSchema } from '../interfaces';\n\n@Pipe({\n  name: 'filterHiddenFields',\n})\nexport class FilterHiddenFieldsPipe implements PipeTransform {\n\n  /**\n   * It filters out `hidden` fields\n   *\n   * @param keys\n   * @param schema - the `schema` that has object schema which contains each key in `keys`\n   * @return - filtered keys\n   */\n  transform(keys: Set<string>, schema: JSONSchema, adminMode: boolean): Set<string> {\n    const schemaProps = schema.properties;\n    if (!keys) { return undefined; }\n    return keys\n      .filter(key => {\n        if (!schemaProps[key]) {\n          throw new Error(`\"${key}\" is not specified as property in \\n${JSON.stringify(schemaProps, undefined, 2)}`);\n        }\n        return !schemaProps[key].hidden || adminMode;\n      }) as Set<string>;\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport {\n  Component,\n  Input,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Map, Set } from 'immutable';\nimport { ReplaySubject } from 'rxjs';\n\nimport { DomUtilService, WindowHrefService, PathUtilService, AppGlobalsService } from '../shared/services';\nimport { JSONSchema } from '../shared/interfaces';\n\n@Component({\n  selector: 'tree-menu-item',\n  styleUrls: [\n    './tree-menu-item.component.scss'\n  ],\n  templateUrl: './tree-menu-item.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TreeMenuItemComponent implements OnInit, OnChanges {\n\n  @Input() label: string;\n  @Input() value: any;\n  @Input() schema: JSONSchema;\n  @Input() path: string;\n  @Input() depth: number;\n\n  // defined only if schmea.type equals to 'object'\n  keys: Set<string>;\n\n  isCollapsed = true;\n  href: string;\n\n  constructor(private windowHrefService: WindowHrefService,\n    private domUtilService: DomUtilService,\n    private pathUtilService: PathUtilService,\n    private appGlobalsService: AppGlobalsService) {\n  }\n\n  ngOnInit() {\n    this.href = `${this.windowHrefService.hrefWithoutHash}#${this.path}`;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['value'] && this.value && this.schema.type === 'object') {\n      this.keys = this.value.keySeq().toSet();\n    }\n  }\n\n  toggle(event: Event) {\n    // fix to trigger :focus css after focusAndSelectFirstInputChildById called.\n    event.preventDefault();\n\n    this.isCollapsed = !this.isCollapsed;\n    this.domUtilService.focusAndSelectFirstEditableChildById(this.path, true);\n  }\n\n  collapse() {\n    this.isCollapsed = true;\n  }\n\n  get isCollapsable(): boolean {\n    const schemaType = this.schema.type;\n    return this.isNotLeaf && (schemaType === 'object' || schemaType === 'array');\n  }\n\n  get maxDepth(): number {\n    return this.appGlobalsService.config.menuMaxDepth;\n  }\n\n  get isNotLeaf(): boolean {\n    return this.maxDepth === undefined || this.depth < this.maxDepth;\n  }\n\n  get adminMode$(): ReplaySubject<boolean> {\n    return this.appGlobalsService.adminMode$;\n  }\n\n  getChildPath(indexOrKey: number | string) {\n    return `${this.path}${this.pathUtilService.separator}${indexOrKey}`;\n  }\n\n  trackByElement(index: number, element: any): any {\n    return element;\n  }\n\n}\n","<div>\n  <a [href]=\"href\" (click)=\"toggle($event)\">{{label}}</a>\n  <a *ngIf=\"isCollapsable\" [hidden]=\"isCollapsed\" (click)=\"collapse()\"> [x]</a>\n  <div *ngIf=\"isNotLeaf\" [ngSwitch]=\"schema.type\" [hidden]=\"isCollapsed\">\n    <ul>\n      <div *ngSwitchCase=\"'object'\">\n        <li *ngFor=\"let key of keys | filterHiddenFields:schema:(adminMode$ | async) | addAlwaysShowFields:schema | sortAlphabetically; trackBy:trackByElement\">\n          <tree-menu-item [label]=\"key\" [value]=\"value.get(key)\" [schema]=\"schema.properties[key]\" [path]=\"getChildPath(key)\" [depth]=\"depth + 1\"></tree-menu-item>\n        </li>\n      </div>\n      <div *ngSwitchCase=\"'array'\">\n        <li *ngFor=\"let element of value; let i = index; trackBy:trackByElement\">\n          <tree-menu-item [label]=\"i\" [value]=\"element\" [schema]=\"schema.items\" [path]=\"getChildPath(i)\" [depth]=\"depth + 1\"></tree-menu-item>\n        </li>\n      </div>\n    </ul>\n  </div>\n</div>","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Map, Set } from 'immutable';\nimport { ReplaySubject } from 'rxjs';\n\nimport { DomUtilService, PathUtilService, AppGlobalsService } from '../shared/services';\nimport { JSONSchema } from '../shared/interfaces';\n\n@Component({\n  selector: 'tree-menu',\n  styleUrls: [\n    './tree-menu.component.scss'\n  ],\n  templateUrl: './tree-menu.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TreeMenuComponent implements OnChanges {\n\n  @Input() record: Map<string, any>;\n  @Input() schema: JSONSchema;\n\n  keys: Set<string>;\n\n  private prefixOrPath = '';\n\n  constructor(private domUtilService: DomUtilService,\n    private pathUtilService: PathUtilService,\n    private appGlobalsService: AppGlobalsService) {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['record']) {\n      this.keys = this.record.keySeq().toSet();\n    }\n  }\n\n  getChildPath(key: string) {\n    return `${this.pathUtilService.separator}${key}`;\n  }\n\n  trackByElement(index: number, element: any): any {\n    return element;\n  }\n\n  get adminMode$(): ReplaySubject<boolean> {\n    return this.appGlobalsService.adminMode$;\n  }\n}\n","<div class=\"tree-menu-container\">\n  <ul class=\"menu-item-container\">\n    <li *ngFor=\"let key of keys | filterHiddenFields:schema:(adminMode$ | async) | addAlwaysShowFields:schema | sortAlphabetically; trackBy:trackByElement\">\n      <tree-menu-item [label]=\"key\" [value]=\"record.get(key)\" [schema]=\"schema.properties[key]\" [path]=\"getChildPath(key)\" [depth]=\"1\"></tree-menu-item>\n    </li>\n  </ul>\n</div>","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'title-dropdown',\n  styleUrls: [\n    './title-dropdown.component.scss'\n  ],\n  templateUrl: './title-dropdown.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TitleDropdownComponent {\n  @Input() title: string;\n  @Input() isDisabled: boolean;\n}\n","<div dropdown class=\"title-dropdown-container\" [isDisabled]=\"isDisabled\">\n  <button class=\"btn title-dropdown-toggle\" dropdownToggle>\n    {{title}} <span class=\"caret\"></span>\n  </button>\n  <ul class=\"dropdown-menu\" *dropdownMenu>\n    <ng-content></ng-content>\n  </ul>\n</div>","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { List, Map } from 'immutable';\n\nimport { FindReplaceAllService, JsonStoreService, ModalService } from '../shared/services';\nimport { JSONSchema } from '../shared/interfaces';\n\n@Component({\n  selector: 'find-replace',\n  styleUrls: [\n    './find-replace.component.scss'\n  ],\n  templateUrl: './find-replace.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class FindReplaceComponent {\n\n  @Input() path: Array<any>;\n  @Input() schema: JSONSchema;\n\n  private replaced: List<any> | Map<string, any>;\n\n  find: string;\n  replace: string;\n  exactPhrase: boolean;\n\n  constructor(public changeDetectionRef: ChangeDetectorRef,\n    public domSanitizer: DomSanitizer,\n    public findReplaceAllService: FindReplaceAllService,\n    public jsonStoreService: JsonStoreService,\n    public modalService: ModalService) { }\n\n  onKeypress(key: string) {\n    if (key === 'Enter') {\n      this.findAndReplace();\n    }\n  }\n\n  findAndReplace() {\n    if (!(this.find && this.replace)) {\n      return;\n    }\n    const value = this.jsonStoreService.getIn(this.path);\n    const result = this.findReplaceAllService\n      .findReplaceInImmutable(value, this.schema, this.find, this.replace, this.exactPhrase);\n    this.replaced = result.replaced;\n    const stringyfiedDiffHtml = JSON.stringify(result.diffHtml, undefined, 2);\n    this.modalService.displayModal({\n      title: 'After Replace',\n      bodyHtml: this.domSanitizer.bypassSecurityTrustHtml(`<pre class=\"max-height-70-vh\"><code>${stringyfiedDiffHtml}</code></pre>`),\n      type: 'confirm',\n      onConfirm: () => {\n        this.modalService.closeCurrentModal();\n        this.jsonStoreService.setIn(this.path, this.replaced);\n        this.cleanParameters();\n      }\n    });\n  }\n\n  private cleanParameters() {\n    this.find = '';\n    this.replace = '';\n    this.exactPhrase = false;\n    this.changeDetectionRef.markForCheck();\n  }\n}\n","<div class=\"find-replace-container\">\n  <div class=\"top-container-item\">\n    <input placeholder=\"Find\" [(ngModel)]=\"find\" (keypress)=\"onKeypress($event.key)\" />\n  </div>\n  <div>\n    <input placeholder=\"Replace\" [(ngModel)]=\"replace\" (keypress)=\"onKeypress($event.key)\" />\n  </div>\n  <div class=\"bottom-container-item\">\n    <label>\n      Exact phrase\n      <input type=\"checkbox\" [(ngModel)]=\"exactPhrase\" (keypress)=\"onKeypress($event.key)\"/>\n    </label>\n    <i class=\"fa fa-arrow-circle-right\" (click)=\"findAndReplace()\"></i>\n  </div>\n</div>","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { OnInit, Component, OnDestroy, ChangeDetectorRef, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { AbstractSubscriberComponent } from '../abstract-subscriber';\nimport { AppGlobalsService, PathUtilService, JsonStoreService, ProblemsService } from '../shared/services';\nimport { ValidationProblem, PathCache, JSONSchema, JsonPatch, JsonPatchesByOp } from '../shared/interfaces';\nimport { map, takeUntil } from \"rxjs/operators\";\n/**\n * This is the base class for fields\n * WARNING:\n *  XFieldComponent which extends this class should have all services in this constructor, in their constructor!\n *  EX: constructor(...public appGlobalService: AppGlobalService, ...) {...}\n *\n * It provides trackByFunction from AbstractTrackerComponent, and handles errors for the component.\n */\n @Component({\n   template: ''\n })\nexport abstract class AbstractFieldComponent extends AbstractSubscriberComponent implements OnInit, OnDestroy, OnChanges {\n\n  // @Input\n  path: Array<any>;\n\n  pathString: string;\n  pathCache: PathCache = {};\n  externalErrors: Array<ValidationProblem> = [];\n  schema: JSONSchema;\n\n  // patches grouped by op because they different UI representation\n  replaceJsonPatches: Array<JsonPatch> = [];\n  addJsonPatches: Array<JsonPatch> = [];\n  removeJsonPatch: JsonPatch;\n\n\n  constructor(public appGlobalsService: AppGlobalsService,\n    public problemsService: ProblemsService,\n    public pathUtilService: PathUtilService,\n    public changeDetectorRef: ChangeDetectorRef,\n    public jsonStoreService: JsonStoreService) {\n    super();\n  }\n\n  ngOnInit() {\n    this.problemsService.externalCategorizedProblems$\n      .pipe(takeUntil(this.isDestroyed))\n      .subscribe(externalCategorizedProblemMap => {\n        this.externalErrors = externalCategorizedProblemMap.errors[this.pathString] || [];\n        this.changeDetectorRef.markForCheck();\n      });\n\n    this.jsonStoreService.patchesByPath$\n      .pipe(map(patchesByPath => patchesByPath[this.pathString]))\n      .pipe(map(patches => this.groupJsonPatchesByOp(patches)))\n      .pipe(takeUntil(this.isDestroyed))\n      .subscribe(patchesByOp => {\n        this.removeJsonPatch = patchesByOp.remove[0];\n        this.addJsonPatches = patchesByOp.add;\n        this.replaceJsonPatches = patchesByOp.replace;\n        this.changeDetectorRef.markForCheck();\n      });\n  }\n\n  private groupJsonPatchesByOp(patches: Array<JsonPatch>): JsonPatchesByOp {\n    const group: JsonPatchesByOp = {\n      add: [],\n      remove: [],\n      replace: []\n    };\n\n    if (patches) {\n      patches.forEach((patch) => {\n        const opPatches = group[patch.op];\n        opPatches.push(patch);\n      });\n    }\n\n    return group;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['path']) {\n      this.pathString = this.pathUtilService.toPathString(this.path);\n    }\n  }\n\n  /**\n   * Gets path for child, returns from `pathCache` if it is a hit\n   * in order not to re-render child component due to reference change its path.\n   *\n   * @param key - index or field name for child\n   */\n  getPathForChild(key: any): Array<any> {\n    if (!this.pathCache[key] || this.pathCache[key][this.path.length - 1] !== this.path[this.path.length - 1]) {\n      this.pathCache[key] = this.path.concat(key);\n    }\n    return this.pathCache[key];\n  }\n\n  hasErrors(): boolean {\n    return this.externalErrors.length > 0;\n  }\n\n  get disabled() {\n    return this.schema.disabled && !this.appGlobalsService.adminMode;\n  }\n\n  get redLeftBorderClass(): string {\n    return this.removeJsonPatch ? 'red-left-border' : '';\n  }\n\n  trackByElement(index: number, element: any): any {\n    return element;\n  }\n\n  trackByIndex(index: number, element: any): number {\n    return index;\n  }\n\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\nimport { ChangeDetectorRef } from '@angular/core';\nimport { List } from 'immutable';\n\nimport { AbstractFieldComponent } from '../abstract-field';\nimport { JsonStoreService, AppGlobalsService, PathUtilService, ProblemsService } from '../shared/services';\nimport { JSONSchema } from '../shared/interfaces';\n\n/**\n * Abstract component to share code of common operations of all array fields\n *\n * Instance properties declared here only to resolve syntax errors.\n * Hence they need to be declared in children extending components (with decarators if necessary)\n */\nexport abstract class AbstractListFieldComponent extends AbstractFieldComponent {\n\n  values: List<any>;\n  schema: JSONSchema;\n  path: Array<any>;\n\n  constructor(public appGlobalsService: AppGlobalsService,\n    public problemsService: ProblemsService,\n    public jsonStoreService: JsonStoreService,\n    public pathUtilService: PathUtilService,\n    public changeDetectorRef: ChangeDetectorRef) {\n    super(appGlobalsService, problemsService, pathUtilService, changeDetectorRef, jsonStoreService);\n  }\n\n  /**\n   * @param index - Index of the element that is moved\n   * @param  direction - Movement direction. -1 for UP, +1 for DOWN\n   */\n  moveElement(index: number, direction: number) {\n    this.jsonStoreService.moveIn(this.path, index, direction);\n  }\n\n  /**\n   * @param index - Index of the element to be deleted\n   */\n  deleteElement(index: number) {\n    const elementPath = this.path.concat(index);\n    this.jsonStoreService.removeIn(elementPath);\n    // empty list as notSetValue, because there can be lists rendered on the UI, while they are absent in json (alwaysShow)\n    this.values = this.jsonStoreService.getIn(this.path, List());\n  }\n\n  getPathStringForChild(index: number): string {\n    return `${this.pathString}${this.pathUtilService.separator}${index}`;\n  }\n\n  hasPatchOrChildrenHavePatch(): boolean {\n    return this.jsonStoreService.hasPatchOrChildrenHavePatch(this.pathString);\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  SimpleChanges\n} from '@angular/core';\nimport { List, Set } from 'immutable';\n\nimport { AbstractFieldComponent } from '../abstract-field';\nimport {\n  AppGlobalsService,\n  JsonStoreService,\n  PathUtilService,\n  ProblemsService\n} from '../shared/services';\nimport { JSONSchema } from '../shared/interfaces';\n\n@Component({\n  // Defined as attribute selector not to break table > tr > td html structure\n  // tslint:disable-next-line\n  selector: '[table-item-field]',\n  styleUrls: [\n    './table-item-field.component.scss'\n  ],\n  templateUrl: './table-item-field.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TableItemFieldComponent extends AbstractFieldComponent {\n\n  @Input() value: Map<string, any>;\n  @Input() schema: JSONSchema;\n  @Input() path: Array<any>;\n  @Input() keys: Set<string>;\n\n  constructor(public appGlobalsService: AppGlobalsService,\n    public problemsService: ProblemsService,\n    public jsonStoreService: JsonStoreService,\n    public pathUtilService: PathUtilService,\n    public changeDetectorRef: ChangeDetectorRef) {\n    super(appGlobalsService, problemsService, pathUtilService, changeDetectorRef, jsonStoreService);\n  }\n}\n","<td *ngFor=\"let key of keys; trackBy:trackByElement; first as isFirst\" [style.width]=\"schema.properties[key].columnWidth + '%'\"\n  [ngClass]=\"isFirst ? redLeftBorderClass : ''\">\n  <any-type-field [value]=\"value.get(key) | selfOrEmpty:schema.properties[key]\" [schema]=\"schema.properties[key]\" [path]=\"getPathForChild(key)\">\n  </any-type-field>\n  <add-new-element-button *ngIf=\"schema.properties[key].type === 'array'\" [path]=\"getPathForChild(key)\" [schema]=\"schema.properties[key]\">\n  </add-new-element-button>\n  <patch-actions *ngIf=\"removeJsonPatch && isFirst\" [patch]=\"removeJsonPatch\"></patch-actions>\n</td>\n<!-- td element with list-action-group (up/down and delete buttons) -->\n<ng-content></ng-content>\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  OnInit,\n  ViewEncapsulation,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\n\n@Component({\n  selector: 'list-action-group',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: [\n    './list-action-group.component.scss'\n  ],\n  templateUrl: './list-action-group.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ListActionGroupComponent {\n\n  @Input() canMove: boolean;\n  @Input() isDisabled: boolean;\n  @Output() onDelete = new EventEmitter<void>();\n  @Output() onMove = new EventEmitter<number>();\n\n}\n","<div [class.disabled]=\"isDisabled\">\n  <button type=\"button\" class=\"editor-btn-delete\" (click)=\"onDelete.emit()\">\n    <i class=\"fa fa-times\"></i>\n  </button>\n  <button *ngIf=\"canMove\" type=\"button\" class=\"editor-btn-move-up\" (click)=\"onMove.emit(-1)\">\n    <i class=\"fa fa-chevron-up\"></i>\n  </button>\n  <button *ngIf=\"canMove\" type=\"button\" class=\"editor-btn-move-down\" (click)=\"onMove.emit(1)\">\n    <i class=\"fa fa-chevron-down\"></i>\n  </button>\n</div>","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2017 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { JsonStoreService } from '../shared/services';\nimport { JsonPatch } from '../shared/interfaces';\n\n@Component({\n  selector: 'patch-actions',\n  styleUrls: [\n    './patch-actions.component.scss'\n  ],\n  templateUrl: './patch-actions.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PatchActionsComponent {\n  @Input() patch: JsonPatch;\n  @Input() addActionEnabled: boolean;\n\n  constructor(private jsonStoreService: JsonStoreService) { }\n\n  onAcceptClick() {\n    this.jsonStoreService.applyPatch(this.patch);\n  }\n\n  onRejectClick() {\n    this.jsonStoreService.rejectPatch(this.patch);\n  }\n\n  onAddNewClick() {\n    this.patch.op = 'add-as-new';\n    this.jsonStoreService.applyPatch(this.patch);\n  }\n}\n","<div class=\"patch-actions-container\" [ngClass]=\"patch.op\" tabindex=\"-1\">\n  <button (click)=\"onAcceptClick()\"><i class=\"fa fa-check-circle\"></i></button>\n  <button (click)=\"onRejectClick()\"><i class=\"fa fa-times-circle\"></i></button>\n  <button  *ngIf=\"addActionEnabled\" (click)=\"onAddNewClick()\"><i class=\"fa fa-plus-circle\" ></i></button>\n</div>","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2017 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'typeOf',\n  pure: false\n})\n\nexport class TypeOfPipe implements PipeTransform {\n\n  /**\n   * `typeof` with extra 'array'\n   */\n  transform(value: any): string {\n    if (Array.isArray(value)) {\n      return 'array';\n    }\n    return typeof value;\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2018 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\nimport { JSONSchema } from '../interfaces';\nimport { CompareKeysBySchemaService } from '../services';\n\n@Pipe({\n  name: 'sortKeysBySchema',\n  pure: false,\n})\nexport class SortKeysBySchemaPipe implements PipeTransform {\n\n  constructor(private compareKeysBySchemaService: CompareKeysBySchemaService) { }\n\n  /**\n   * WARN: uses Array.sort hence mutates the first param\n   *\n   * @param keys keys in the object\n   * @param schema schema of the parent object\n   */\n  transform(keys: Array<string>, schema: JSONSchema): Array<string> {\n    return keys\n      .sort((a, b) => this.compareKeysBySchemaService.compare(a, b, schema));\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2017 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'keys',\n  pure: false\n})\n\nexport class KeysPipe implements PipeTransform {\n\n  /**\n   * Transforms object to array of its keys (Object.keys replacement for templates)\n   */\n  transform(object: object): Array<string> {\n    if (!object) { return null; }\n\n    return Object.keys(object);\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2017 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Component, Input, ChangeDetectionStrategy, OnChanges, SimpleChanges } from '@angular/core';\n\nimport { JsonPatch, JSONSchema } from '../shared/interfaces';\nimport { JsonSchemaService } from '../shared/services';\n\n@Component({\n  selector: 'add-or-replace-patch',\n  styleUrls: [\n    './add-or-replace-patch.component.scss'\n  ],\n  templateUrl: './add-or-replace-patch.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AddOrReplacePatchComponent implements OnChanges {\n\n  @Input() patch: JsonPatch;\n\n  schema: JSONSchema;\n\n  constructor(private jsonSchemaService: JsonSchemaService) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const patchChanges = changes['patch'];\n    if (patchChanges) {\n      this.schema = this.jsonSchemaService.forPathString(this.patch.path);\n    }\n  }\n\n  get leftBorderClass(): string {\n    return this.patch.op === 'add' ? 'green-left-border' : 'orange-left-border';\n  }\n}\n","<div class=\"patch-container\" [ngClass]=\"leftBorderClass\" [id]=\"patch.path\" tabindex=\"-1\">\n  <div class=\"grow\">\n    <ng-template [ngTemplateOutlet]=\"anyTypeTemplate\" [ngTemplateOutletContext]=\"{value: patch.value, schema: schema}\"></ng-template>\n  </div>\n  <patch-actions class=\"align-self-end\" [patch]=\"patch\"></patch-actions>\n</div>\n\n<ng-template #anyTypeTemplate let-value=\"value\" let-schema=\"schema\">\n  <ng-container [ngSwitch]=\"value | typeOf\">\n    <ng-container *ngSwitchCase=\"'object'\">\n      <ng-template [ngTemplateOutlet]=\"objectTemplate\" [ngTemplateOutletContext]=\"{object: value, schema: schema}\"></ng-template>\n    </ng-container>\n    <ng-container *ngSwitchCase=\"'array'\">\n      <ng-template [ngTemplateOutlet]=\"arrayTemplate\" [ngTemplateOutletContext]=\"{array: value, schema: schema}\"></ng-template>\n    </ng-container>\n    <ng-container *ngSwitchDefault>\n      <ng-template [ngTemplateOutlet]=\"primitiveTemplate\" [ngTemplateOutletContext]=\"{primitive: value}\"></ng-template>\n    </ng-container>\n  </ng-container>\n</ng-template>\n\n<ng-template #objectTemplate let-object=\"object\" let-schema=\"schema\">\n  <table>\n    <tr *ngFor=\"let key of object | keys | sortKeysBySchema:schema\">\n      <td>\n        <label>{{key}}</label>\n      </td>\n      <td>\n        <ng-template [ngTemplateOutlet]=\"anyTypeTemplate\" [ngTemplateOutletContext]=\"{value: object[key], schema: schema.properties[key]}\"></ng-template>\n      </td>\n    </tr>\n  </table>\n</ng-template>\n\n<ng-template #arrayTemplate let-array=\"array\" let-schema=\"schema\">\n  <table>\n    <tr *ngFor=\"let item of array\" class=\"array-item\">\n      <td>\n        <ng-template [ngTemplateOutlet]=\"anyTypeTemplate\" [ngTemplateOutletContext]=\"{value: item, schema: schema.items}\"></ng-template>\n      </td>\n    </tr>\n  </table>\n</ng-template>\n\n<ng-template #primitiveTemplate let-primitive=\"primitive\">\n  <span>{{primitive}}</span>\n</ng-template>","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'underscoreToSpace',\n})\nexport class UnderscoreToSpacePipe implements PipeTransform {\n  transform(text: string): string {\n    return text.replace(/\\_/g, ' ');\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { List, Map, Set } from 'immutable';\nimport { ReplaySubject } from 'rxjs';\n\n\nimport { AbstractListFieldComponent } from '../abstract-list-field';\nimport { AppGlobalsService, JsonStoreService, PathUtilService, KeysStoreService, ProblemsService } from '../shared/services';\nimport { JSONSchema } from '../shared/interfaces';\n\n@Component({\n  selector: 'table-list-field',\n  styleUrls: [\n    './table-list-field.component.scss'\n  ],\n  templateUrl: './table-list-field.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TableListFieldComponent extends AbstractListFieldComponent {\n\n  @Input() values: List<Map<string, any>>;\n  @Input() schema: JSONSchema;\n  @Input() path: Array<any>;\n\n  constructor(public appGlobalsService: AppGlobalsService,\n    public problemsService: ProblemsService,\n    public jsonStoreService: JsonStoreService,\n    public pathUtilService: PathUtilService,\n    public keysStoreService: KeysStoreService,\n    public changeDetectorRef: ChangeDetectorRef) {\n    super(appGlobalsService, problemsService, jsonStoreService, pathUtilService, changeDetectorRef);\n  }\n\n  get keys$(): ReplaySubject<Set<string>> {\n    return this.keysStoreService.forPath(this.pathString);\n  }\n\n}\n","<div [id]=\"pathString\" [ngClass]=\"redLeftBorderClass\">\n  <table class=\"table editable-inner-table\">\n    <thead class=\"thead-inverse\">\n      <tr>\n        <th *ngFor=\"let key of keys$ | async; trackBy:trackByElement\" [style.width]=\"schema.items.properties[key].columnWidth + '%'\">\n          {{key | underscoreToSpace}}\n        </th>\n        <th class=\"button-holder\" [class.sortable]=\"schema.sortable\">\n          <add-field-dropdown *ngIf=\"values.size > 0\" [fields]=\"keys$ | async\" [pathString]=\"pathString\" [schema]=\"schema.items\" [isDisabled]=\"disabled\">\n            <i class=\"fa fa-plus\"></i>\n            <i class=\"fa fa-caret-down\"></i>\n          </add-field-dropdown>\n        </th>\n      </tr>\n    </thead>\n    <tr *ngFor=\"let value of values; let i = index; trackBy:trackByIndex\" table-item-field [id]=\"getPathStringForChild(i)\" [value]=\"value\"\n      [schema]=\"schema.items\" [path]=\"getPathForChild(i)\" [keys]=\"keys$ | async\">\n      <td *ngIf=\"values.size > 0\" class=\"button-holder\" [class.sortable]=\"schema.sortable\">\n        <list-action-group (onMove)=\"moveElement(i, $event)\" (onDelete)=\"deleteElement(i)\" [canMove]=\"schema.sortable\" [isDisabled]=\"disabled\"></list-action-group>\n      </td>\n    </tr>\n    <tr *ngIf=\"removeJsonPatch\">\n      <patch-actions [patch]=\"removeJsonPatch\"></patch-actions>\n    </tr>\n  </table>\n  <div class=\"add-patch\" *ngFor=\"let patch of addJsonPatches\">\n    <add-or-replace-patch [patch]=\"patch\"></add-or-replace-patch>\n  </div>\n  <div *ngIf=\"replaceJsonPatches && replaceJsonPatches[0]\">\n    <add-or-replace-patch [patch]=\"replaceJsonPatches[0]\"></add-or-replace-patch>\n  </div>\n</div>\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\n\nimport { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { Map, Set } from 'immutable';\nimport { ReplaySubject } from 'rxjs';\n\nimport { AbstractFieldComponent } from '../abstract-field';\nimport { AppGlobalsService, JsonStoreService, PathUtilService, KeysStoreService, ProblemsService } from '../shared/services';\nimport { JSONSchema } from '../shared/interfaces';\n\n@Component({\n  selector: 'object-field',\n  styleUrls: [\n    './object-field.component.scss'\n  ],\n  templateUrl: './object-field.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ObjectFieldComponent extends AbstractFieldComponent {\n\n  @Input() value: Map<string, any>;\n  @Input() schema: JSONSchema;\n  @Input() path: Array<any>;\n  @Input() isComplexListFieldItem = false;\n\n  constructor(public appGlobalsService: AppGlobalsService,\n    public problemsService: ProblemsService,\n    public jsonStoreService: JsonStoreService,\n    public pathUtilService: PathUtilService,\n    public changeDetectorRef: ChangeDetectorRef,\n    public keysStoreService: KeysStoreService,\n    ) {\n    super(appGlobalsService, problemsService, pathUtilService, changeDetectorRef, jsonStoreService);\n  }\n\n  get keys$(): ReplaySubject<Set<string>> {\n    return this.keysStoreService.forPath(this.pathString);\n  }\n\n  deleteField(name: string) {\n    const fieldPath = this.path.concat(name);\n    this.jsonStoreService.removeIn(fieldPath);\n  }\n\n  isPropertyDisabled(name: string): boolean {\n    return this.schema.properties[name].disabled && !this.appGlobalsService.adminMode ;\n  }\n\n  getTitleDropdownItemTemplateNamesForChild(key: string): Array<string> {\n    return this.schema.properties[key].titleDropdownItemTemplateNames;\n  }\n}\n","<div [id]=\"pathString\">\n  <div *ngIf=\"isComplexListFieldItem\" class=\"pull-right\">\n    <add-nested-field-dropdown [pathString]=\"pathString\" [schema]=\"schema\" [isDisabled]=\"disabled\"></add-nested-field-dropdown>\n  </div>\n\n  <table class=\"table\" [ngClass]=\"redLeftBorderClass\">\n    <tr *ngFor=\"let key of keys$ | async; trackBy:trackByElement\">\n      <!-- SUB FIELD TITLE MENU -->\n      <td class=\"label-holder\">\n        <div>\n          <title-dropdown [title]=\"key | underscoreToSpace\" [isDisabled]=\"isPropertyDisabled(key)\">\n            <li *ngIf=\"schema.properties[key].type === 'array'\" class=\"title-dropdown-item\">\n              <add-new-element-button [path]=\"getPathForChild(key)\" [schema]=\"schema.properties[key]\"></add-new-element-button>\n            </li>\n            <li class=\"title-dropdown-item\">\n              <button type=\"button\" class=\"editor-btn-delete editor-btn-delete-text\" (click)=\"deleteField(key)\">Delete</button>\n            </li>\n            <ng-container *ngIf=\"getTitleDropdownItemTemplateNamesForChild(key)\">\n              <li *ngFor=\"let templateName of getTitleDropdownItemTemplateNamesForChild(key)\" class=\"title-dropdown-item custom-title-dropdown-item\">\n                <ng-template [ngTemplateOutlet]=\"appGlobalsService.templates[templateName]\"></ng-template>\n              </li>\n            </ng-container>\n          </title-dropdown>\n        </div>\n      </td>\n      <!-- SUB FIELD COMPONENT -->\n      <td>\n        <any-type-field [value]=\"value.get(key) | selfOrEmpty:schema.properties[key]\" [schema]=schema.properties[key] [path]=\"getPathForChild(key)\"></any-type-field>\n      </td>\n    </tr>\n    <!-- ADD PATCHES FOR CHILDREN -->\n    <tr *ngFor=\"let patch of addJsonPatches\">\n      <td class=\"label-holder\">\n        <title-dropdown [title]=\"patch.path | lastPathElement | underscoreToSpace\" [isDisabled]=\"true\"></title-dropdown>\n      </td>\n      <td>\n        <add-or-replace-patch [patch]=\"patch\"></add-or-replace-patch>\n      </td>\n    </tr>\n    <!-- REMOVE PATCH FOR ITSELF -->\n    <tr *ngIf=\"removeJsonPatch\">\n      <patch-actions [patch]=\"removeJsonPatch\"></patch-actions>\n    </tr>\n    <!-- ADD SUB FIELD FROM SCHEMA DROPDOWN -->\n    <tr>\n      <td class=\"button-holder\">\n        <add-field-dropdown [fields]=\"keys$ | async\" [pathString]=\"pathString\" [schema]=\"schema\" [isDisabled]=\"disabled\">\n          <i class=\"fa fa-plus\"></i>\n          <i class=\"fa fa-caret-down\"></i>\n        </add-field-dropdown>\n      </td>\n    </tr>\n  </table>\n  <!-- REPLACE PATCH FOR ITSELF -->\n  <div *ngIf=\"replaceJsonPatches && replaceJsonPatches[0]\">\n    <add-or-replace-patch [patch]=\"replaceJsonPatches[0]\"></add-or-replace-patch>\n  </div>\n</div>\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport {\n  Component,\n  Input,\n  OnChanges,\n  OnInit,\n  ChangeDetectionStrategy,\n  SimpleChanges,\n  ChangeDetectorRef,\n  TemplateRef\n} from '@angular/core';\nimport { List, Map, Set } from 'immutable';\n\nimport { AbstractListFieldComponent } from '../abstract-list-field';\nimport {\n  AppGlobalsService,\n  JsonStoreService,\n  DomUtilService,\n  PathUtilService,\n  ListPageChangerService,\n  ProblemsService\n} from '../shared/services';\nimport { LongListNavigatorConfig, JSONSchema, PaginatedItem } from '../shared/interfaces';\nimport { skipWhile, takeUntil } from \"rxjs/operators\";\n\n@Component({\n  selector: 'complex-list-field',\n  styleUrls: [\n    './complex-list-field.component.scss'\n  ],\n  templateUrl: './complex-list-field.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ComplexListFieldComponent extends AbstractListFieldComponent implements OnChanges, OnInit {\n\n  @Input() values: List<Map<string, any>>;\n  @Input() schema: JSONSchema;\n  @Input() path: Array<any>;\n\n  paginatedItems: any;\n  paginatableItems: any;\n\n  foundIndices: Array<number>;\n  currentFound = 0;\n  currentPage = 1;\n  findExpression: string;\n  navigator: LongListNavigatorConfig;\n  shouldDisplayFoundNavigation: boolean;\n  private _shouldDisplayOnlyEditFormItems = false;\n\n  constructor(public appGlobalsService: AppGlobalsService,\n    public problemsService: ProblemsService,\n    public jsonStoreService: JsonStoreService,\n    public domUtilService: DomUtilService,\n    public pathUtilService: PathUtilService,\n    public changeDetectorRef: ChangeDetectorRef,\n    public listPageChangerService: ListPageChangerService) {\n    super(appGlobalsService, problemsService, jsonStoreService, pathUtilService, changeDetectorRef);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n    this.navigator = this.schema.longListNavigatorConfig;\n    this.paginatableItems = this.getPaginatableItems();\n    this.paginatedItems = this.getPaginatableItemsForPage(this.currentPage);\n\n    if (this.navigator) {\n      this.listPageChangerService\n        .registerPaginatedList(this.pathString, this.navigator.itemsPerPage)\n        .pipe(skipWhile(page => page === this.currentPage))\n        .pipe(takeUntil(this.isDestroyed))\n        .subscribe(page => this.onPageChange(page));\n    }\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    super.ngOnChanges(changes);\n\n    const valuesChange = changes['values'];\n    if (valuesChange && !valuesChange.isFirstChange()) {\n      const preSize = valuesChange.previousValue.size;\n      const curSize = valuesChange.currentValue.size;\n\n      if (curSize !== preSize) {\n        if (this.navigator) {\n          // check if element added in the end by comparing the last elements\n          const elementAddedToEnd = valuesChange.previousValue.equals(valuesChange.currentValue.pop());\n          const lastPage = this.getPageForIndex(curSize - 1);\n          // change the page if a new element is added in the end and it's not on the last page\n          if (curSize > preSize && this.currentPage !== lastPage && elementAddedToEnd) {\n            this.currentPage = lastPage;\n          }\n        }\n      }\n      this.paginatableItems = this.getPaginatableItems();\n      this.paginatedItems = this.getPaginatableItemsForPage(this.currentPage);\n    }\n  }\n\n  hasProblemOrPatch(index: number) {\n    const itemPath = this.getPathStringForChild(index);\n    return this.problemsService.hasProblem(itemPath) || this.jsonStoreService.hasPatchOrChildrenHavePatch(itemPath);\n  }\n\n  get headerItemTemplate(): TemplateRef<any> {\n    return this.appGlobalsService.templates[this.navigator.headerItemTemplateName];\n  }\n\n  onFindClick() {\n    // clear for new search\n    this.foundIndices = [];\n    this.currentFound = 0;\n    // search to look for the first match\n    if (this.navigator.findSingle) {\n      const foundIndex = this.values\n        .findIndex(value => this.navigator.findSingle(value, this.findExpression));\n      if (foundIndex > -1) {\n        this.foundIndices.push(foundIndex);\n      }\n    }\n    // search to look for all matches\n    if (this.foundIndices.length === 0 && this.navigator.findMultiple) {\n      this.values\n        .forEach((value, index) => {\n          if (this.navigator.findMultiple(value, this.findExpression)) {\n            this.foundIndices.push(index);\n          }\n        });\n    }\n    // navigate to first search result if found any\n    if (this.foundIndices.length > 0) {\n      this.navigateToItem(this.foundIndices[0]);\n      this.shouldDisplayFoundNavigation = true;\n    } else {\n      this.shouldDisplayFoundNavigation = false;\n    }\n  }\n\n  onFindInputKeypress(key: string) {\n    if (key === 'Enter') {\n      this.onFindClick();\n    }\n  }\n\n  onFoundNavigate(direction: number) {\n    // No bound checks, since the buttons are disabled in these cases.\n    this.currentFound += direction;\n    this.navigateToItem(this.foundIndices[this.currentFound]);\n  }\n\n  navigateToItem(index: number) {\n    const item = this.paginatableItems.get(index);\n\n    if (!item.editFormDisplayedByUser) {\n      item.editFormDisplayedByUser = true;\n      this.changeDetectorRef.markForCheck();\n    }\n\n    const itemPath = this.path.concat(index);\n    const itemId = this.pathUtilService.toPathString(itemPath);\n\n    setTimeout(() => this.domUtilService.focusAndSelectFirstEditableChildById(itemId));\n  }\n\n  onPageChange(page: number) {\n    this.currentPage = page;\n    this.paginatedItems = this.getPaginatableItemsForPage(page);\n  }\n\n  getPaginatableItemsForPage(page: number): any {\n    if (this.navigator) {\n      const begin = (page - 1) * this.navigator.itemsPerPage;\n      const end = (page * this.navigator.itemsPerPage);\n      return this.paginatableItems.slice(begin, end);\n    } else {\n      return this.paginatableItems;\n    }\n  }\n\n  getPaginatableItems(): any {\n    const { viewTemplateConfig } = this.schema;\n    return this.values\n      .map((value, index) => {\n        const paginatableItem = this.paginatableItems ? this.paginatableItems.get(index) : null;\n        const isNewItem = paginatableItem == null;\n        const editFormDisplayedByUser = isNewItem ? null : paginatableItem.editFormDisplayedByUser;\n        const shouldDisplayEditForm = viewTemplateConfig ? viewTemplateConfig.showEditForm(value) : true;\n        return { index, shouldDisplayEditForm, editFormDisplayedByUser };\n      }).filter(item => {\n        if (this.shouldDisplayOnlyEditFormItems) {\n          return item.shouldDisplayEditForm;\n        } else {\n          return true;\n        }\n      });\n  }\n\n  getPageForIndex(index: number): number {\n    return Math.floor((index / this.navigator.itemsPerPage) + 1);\n  }\n\n  get customTemplate(): TemplateRef<any> {\n    return this.appGlobalsService.templates[this.schema.viewTemplateConfig.itemTemplateName];\n  }\n\n  get shouldDisplayViewTemplate(): boolean {\n    return this.schema.viewTemplateConfig !== undefined;\n  }\n\n  get sortable(): boolean {\n    return this.schema.sortable && !this.shouldDisplayOnlyEditFormItems;\n  }\n\n  shouldDisplayEditableFieldsForItem(item: PaginatedItem): boolean {\n    // override default display state that is based on viewTemplateConfig.showEditForm(item) with user action\n    const shouldDisplayEditForm = item.editFormDisplayedByUser != null ? item.editFormDisplayedByUser : item.shouldDisplayEditForm;\n    return shouldDisplayEditForm || this.hasProblemOrPatch(item.index);\n  }\n\n  set shouldDisplayOnlyEditFormItems(value: boolean) {\n    this.currentPage = 1;\n    this._shouldDisplayOnlyEditFormItems = value;\n    this.paginatableItems = this.getPaginatableItems();\n    this.paginatedItems = this.getPaginatableItemsForPage(this.currentPage);\n  }\n\n\n  get shouldDisplayOnlyEditFormItems(): boolean {\n    return this._shouldDisplayOnlyEditFormItems;\n  }\n}\n","<div [id]=\"pathString\">\n  <!-- Top Bar: Navigator, ToEdit/All switch, custom header item etc. -->\n  <div *ngIf=\"navigator || shouldDisplayViewTemplate\" class=\"top-bar-container\">\n    <div *ngIf=\"navigator\">\n      <div class=\"input-group input-group-sm\">\n        <span class=\"input-group-btn\">\n          <button type=\"button\" class=\"btn btn-default find-button\" (click)=\"onFindClick()\">\n            <i class=\"fa fa-search\" aria-hidden=\"true\"></i>\n          </button>\n        </span>\n        <input type=\"search\" class=\"form-control\" [(ngModel)]=\"findExpression\" (keypress)=\"onFindInputKeypress($event.key)\" placeholder=\"Find\"\n        />\n        <span class=\"input-group-btn\" *ngIf=\"shouldDisplayFoundNavigation\">\n          <button type=\"button\" class=\"btn btn-default\" [disabled]=\"currentFound <= 0\" (click)=\"onFoundNavigate(-1)\">❮</button>\n        </span>\n        <span class=\"input-group-btn\" *ngIf=\"shouldDisplayFoundNavigation\">\n          <button type=\"button\" class=\"btn btn-default\" [disabled]=\"currentFound >= foundIndices.length - 1\" (click)=\"onFoundNavigate(1)\">❯</button>\n        </span>\n        <span *ngIf=\"foundIndices\" [ngSwitch]=\"foundIndices.length\" class=\"input-group-addon transparent borderless\">\n          <span *ngSwitchCase=\"0\">\n            Nothing found\n          </span>\n          <span *ngSwitchDefault>\n            {{currentFound + 1}} of {{foundIndices.length}}\n          </span>\n        </span>\n      </div>\n    </div>\n    <div *ngIf=\"shouldDisplayViewTemplate\" class=\"btn-group\">\n      <label class=\"btn btn-switch\" [class.active]=\"!shouldDisplayOnlyEditFormItems\" (click)=\"shouldDisplayOnlyEditFormItems = false\">All</label>\n      <label class=\"btn btn-switch\" [class.active]=\"shouldDisplayOnlyEditFormItems\" (click)=\"shouldDisplayOnlyEditFormItems = true\">To Edit</label>\n    </div>\n    <div *ngIf=\"headerItemTemplate\">\n      <ng-template [ngTemplateOutlet]=\"headerItemTemplate\"></ng-template>\n    </div>\n    <div *ngIf=\"navigator\">\n      <label class=\"item-count-label\">\n        {{paginatableItems.size}} {{path[path.length - 1]}}\n      </label>\n      <br>\n      <pagination [totalItems]=\"paginatableItems.size\" [ngModel]=\"currentPage\" [maxSize]=\"navigator.maxVisiblePageCount\" [itemsPerPage]=\"navigator.itemsPerPage\"\n        class=\"pagination-sm pagination-top\" [boundaryLinks]=\"true\" [rotate]=\"false\" [firstText]=\"'❮❮'\" [previousText]=\"'❮'\"\n        [nextText]=\"'❯'\" [lastText]=\"'❯❯'\" (pageChanged)=\"onPageChange($event.page)\"></pagination>\n    </div>\n  </div>\n  <div [ngClass]=\"redLeftBorderClass\">\n    <!-- Elements -->\n    <div *ngFor=\"let item of paginatedItems; trackBy:trackByElement\">\n      <div class=\"complex-list-field-wrapper\">\n        <span *ngIf=\"shouldDisplayViewTemplate && values.get(item.index).keySeq().size != 0\">\n          <ng-template [ngTemplateOutlet]=\"customTemplate\" [ngTemplateOutletContext]=\"{item: values.get(item.index)}\"></ng-template>\n          <a href=\"javascript:void(0)\" (click)=\"item.editFormDisplayedByUser = !shouldDisplayEditableFieldsForItem(item)\">\n            {{shouldDisplayEditableFieldsForItem(item) ? 'Hide Fields' : 'Show Fields'}}\n          </a>\n        </span>\n        <span *ngIf=\"shouldDisplayEditableFieldsForItem(item)\">\n          <object-field [value]=\"values.get(item.index)\" [schema]=\"schema.items\" [path]=\"getPathForChild(item.index)\" [isComplexListFieldItem]=\"true\">\n          </object-field>\n          <div class=\"row element-button-container\">\n            <div class=\"col-md-12 text-right\">\n              <list-action-group (onMove)=\"moveElement(item.index, $event)\" (onDelete)=\"deleteElement(item.index)\" [canMove]=\"sortable\"\n                [isDisabled]=\"disabled || hasPatchOrChildrenHavePatch()\">\n              </list-action-group>\n            </div>\n          </div>\n        </span>\n      </div>\n    </div>\n    <div class=\"text-right\" *ngIf=\"removeJsonPatch\">\n      <patch-actions [patch]=\"removeJsonPatch\"></patch-actions>\n    </div>\n  </div>\n\n  <div *ngFor=\"let patch of addJsonPatches\" class=\"complex-list-field-wrapper\">\n    <add-or-replace-patch [patch]=\"patch\"></add-or-replace-patch>\n  </div>\n  <div *ngIf=\"replaceJsonPatches && replaceJsonPatches[0]\">\n    <add-or-replace-patch [patch]=\"replaceJsonPatches[0]\"></add-or-replace-patch>\n  </div>\n</div>\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Component, Input, ChangeDetectionStrategy, ChangeDetectorRef } from '@angular/core';\nimport { List } from 'immutable';\n\nimport { AbstractListFieldComponent } from '../abstract-list-field';\nimport { AppGlobalsService, JsonStoreService, PathUtilService, ProblemsService } from '../shared/services';\nimport { JSONSchema } from '../shared/interfaces';\n\n@Component({\n  selector: 'primitive-list-field',\n  styleUrls: [\n    './primitive-list-field.component.scss'\n  ],\n  templateUrl: './primitive-list-field.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PrimitiveListFieldComponent extends AbstractListFieldComponent {\n  @Input() values: List<any>;\n  @Input() schema: JSONSchema;\n  @Input() path: Array<any>;\n\n  constructor(public appGlobalsService: AppGlobalsService,\n    public problemsService: ProblemsService,\n    public jsonStoreService: JsonStoreService,\n    public pathUtilService: PathUtilService,\n    public changeDetectorRef: ChangeDetectorRef) {\n    super(appGlobalsService, problemsService, jsonStoreService, pathUtilService, changeDetectorRef);\n  }\n\n}\n","<div [id]=\"pathString\" [ngClass]=\"redLeftBorderClass\">\n  <div class=\"wide\">\n    <table class=\"table\">\n      <tr *ngFor=\"let value of values | selfOrEmpty:schema; let i = index; trackBy:trackByIndex\">\n        <td>\n          <any-type-field [value]=\"value\" [schema]=\"schema.items\" [path]=\"getPathForChild(i)\"></any-type-field>\n        </td>\n        <td *ngIf=\"values.size > 0\" class=\"button-holder\" [class.sortable]=\"schema.sortable\">\n          <list-action-group (onMove)=\"moveElement(i, $event)\" (onDelete)=\"deleteElement(i)\" [canMove]=\"schema.sortable\" [isDisabled]=\"disabled\"></list-action-group>\n        </td>\n      </tr>\n      <tr *ngIf=\"removeJsonPatch\">\n        <patch-actions [patch]=\"removeJsonPatch\"></patch-actions>\n      </tr>\n    </table>\n    <table class=\"table\">\n      <tr *ngFor=\"let patch of addJsonPatches\">\n        <add-or-replace-patch [patch]=\"patch\"></add-or-replace-patch>\n      </tr>\n      <tr *ngIf=\"replaceJsonPatches && replaceJsonPatches[0]\">\n        <add-or-replace-patch [patch]=\"replaceJsonPatches[0]\"></add-or-replace-patch>\n      </tr>\n    </table>\n  </div>\n</div>","import {\n  Directive,\n  ElementRef,\n  Input,\n  Output,\n  EventEmitter,\n  HostListener,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\n\n@Directive({\n  selector: '[contentModel]'\n})\nexport class ContentModelDirective implements OnChanges {\n\n  @Input() contentModel: string;\n\n  @Output() contentModelChange = new EventEmitter<string>();\n\n  constructor(private elementRef: ElementRef) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['contentModel']) {\n      this.refresh();\n    }\n  }\n\n  @HostListener('blur')\n  onBlur() {\n    this.emitContentModelChange();\n  }\n\n  @HostListener('keypress', ['$event'])\n  onKeypress(event: KeyboardEvent) {\n    if (event.key === 'Enter') {\n      this.emitContentModelChange();\n    }\n  }\n\n  private emitContentModelChange() {\n    const value = this.elementRef.nativeElement.innerText;\n    this.contentModelChange.emit(value);\n  }\n\n  private refresh() {\n    this.elementRef.nativeElement.innerText = this.contentModel;\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2017 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport {\n  Component,\n  ElementRef,\n  EventEmitter,\n  Input,\n  Output,\n  OnInit,\n  AfterViewInit,\n  ChangeDetectionStrategy,\n  ViewChild,\n  OnChanges,\n  SimpleChanges\n} from '@angular/core';\n\nimport { DomUtilService, KatexService } from '../shared/services';\n\n@Component({\n  selector: 'string-input',\n  styleUrls: [\n    './string-input.component.scss'\n  ],\n  templateUrl: './string-input.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class StringInputComponent implements AfterViewInit, OnInit, OnChanges {\n  @ViewChild('latexPreview') latexPreviewEl: ElementRef;\n\n  // value update triggers re-rendering of latex preview if it's enabled\n  @Input() value: string;\n  @Input() disabled: boolean;\n  @Input() pathString: string;\n  @Input() placeholder: string;\n  @Input() tabIndex: number;\n  @Input() latexPreviewEnabled: boolean;\n\n  @Output() blur = new EventEmitter<void>();\n  @Output() onKeypress = new EventEmitter<void>();\n  @Output() valueChange = new EventEmitter<string>();\n\n  latexPreviewShown: boolean;\n  // updated as typed in contenteditable el, doesn't trigger latex re-rendering.\n  contentModel: string;\n\n  constructor(public domUtilService: DomUtilService, public katexService: KatexService) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const valueChange = changes['value'];\n    if (valueChange) {\n      this.contentModel = this.value;\n      if (this.latexPreviewEnabled && !valueChange.firstChange) {\n        this.renderLatex();\n      }\n    }\n  }\n\n  ngOnInit() {\n    if (this.shouldShowLatexPreview) {\n      this.latexPreviewShown = true;\n    }\n  }\n\n  ngAfterViewInit() {\n    // render latex preview on init, if it's enabled and value is not empty\n    if (this.shouldShowLatexPreview) {\n      this.renderLatex();\n    }\n  }\n\n  onBlur() {\n    if (this.shouldShowLatexPreview) {\n      this.latexPreviewShown = true;\n      this.value = this.contentModel;\n    }\n    this.blur.emit();\n  }\n\n  renderLatex() {\n    this.katexService.renderMathInText(this.value, this.latexPreviewEl.nativeElement);\n  }\n\n  hideLatexPreview(contentEditableEl: HTMLElement) {\n    this.latexPreviewShown = false;\n    setTimeout(() => contentEditableEl.focus());\n  }\n\n  contentModelChange(value: string) {\n    this.contentModel = value;\n    this.valueChange.emit(value);\n  }\n\n  get shouldShowLatexPreview(): boolean {\n    return this.latexPreviewEnabled && Boolean(this.value);\n  }\n}\n","<span [class.hidden]=\"latexPreviewShown\" [attr.contenteditable]=\"!disabled\" [attr.data-path]=\"pathString\" [tabindex]=\"tabIndex\"\n  [contentModel]=\"contentModel\" (contentModelChange)=\"contentModelChange($event)\" (blur)=\"onBlur()\" (keypress)=\"onKeypress.emit($event)\"\n  attr.placeholder=\"{{placeholder || '⁣\\u2063'}}\" #contentEditable></span>\n<div [class.hidden]=\"!latexPreviewEnabled || !latexPreviewShown\" (click)=\"hideLatexPreview(contentEditable)\" (blur)=\"hideLatexPreview(contentEditable)\"\n  #latexPreview></div>","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy,\n  ViewChild,\n  ElementRef\n} from '@angular/core';\n\nimport { BiDirectionalMap } from 'bi-directional-map/dist';\n\nimport { BsDropdownDirective } from 'ngx-bootstrap/dropdown';\n\n@Component({\n  selector: 'searchable-dropdown',\n  styleUrls: [\n    './searchable-dropdown.component.scss'\n  ],\n  templateUrl: './searchable-dropdown.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SearchableDropdownComponent implements OnChanges {\n\n  @Input() items: Array<string>;\n  @Input() shortcutMap: { [key: string]: string };\n  @Input() displayValueMap: { [key: string]: string };\n  @Input() value: string;\n  @Input() pathString: string;\n  @Input() tabIndex: number;\n  @Input() placeholder: string;\n  expression: string;\n  biDisplayValueMap: BiDirectionalMap<string, string>;\n  displayValues: Array<string>;\n\n  @Output() onSelect = new EventEmitter<string>();\n  @Output() onBlur = new EventEmitter<void>();\n\n  @ViewChild('filterInput') filterInputElRef: ElementRef;\n  @ViewChild('dropdown') dropdown: BsDropdownDirective;\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['value']) {\n      this.placeholder = this.value || this.placeholder || '';\n    }\n\n    if (changes['displayValueMap'] || changes['items']) {\n      this.displayValueMap = this.displayValueMap || Object.create(null);\n      this.biDisplayValueMap = new BiDirectionalMap<string, string>(this.displayValueMap);\n      // set original value as display value for not configured items.\n      this.items\n        .filter(item => !this.displayValueMap[item])\n        .forEach(item => {\n          this.biDisplayValueMap.set(item, item);\n        });\n\n      this.displayValues = Array.from(this.biDisplayValueMap.values());\n    }\n  }\n\n  onItemClick(displayValue: string) {\n    const originalValue = this.biDisplayValueMap.getKey(displayValue);\n    this.onSelect.emit(originalValue);\n\n    // only necessary to force closing when selected is item equals to value\n    // in which case dropdown doesn't close automatically for some reason\n    this.dropdown.hide();\n  }\n\n  onEnterKeyUp() {\n    if (this.shortcutMap && this.shortcutMap[this.expression]) {\n      this.onItemClick(this.shortcutMap[this.expression]);\n    }\n    this.dropdown.hide();\n  }\n\n  showDropdown() {\n    this.dropdown.show();\n    this.expression = '';\n    setTimeout(() => {\n      (this.filterInputElRef.nativeElement as HTMLInputElement).focus();\n    });\n  }\n\n  onInputBlur(event: FocusEvent) {\n    // this avoids closing dropdown when an item is selected\n    // so that onItemClick() can be executed properly before closing.\n    const relatedTarget = event.relatedTarget as HTMLElement;\n    if (!relatedTarget || relatedTarget.className !== 'dropdown-item') {\n      this.dropdown.hide();\n    }\n    this.onBlur.emit();\n  }\n}\n","<div class=\"btn-group\" #dropdown=\"bs-dropdown\" dropdown keyboardNav=\"true\">\n  <!-- there is no dropdownToggle since it is handled manually see: onInputFocus and onInputBlur in ts -->\n  <div class=\"toggle-container\">\n    <input *ngIf=\"dropdown.isOpen; else valueDisplayTemplate\" #filterInput class=\"value\" attr.data-path=\"{{pathString}}\" [placeholder]=\"placeholder\"\n      [(ngModel)]=\"expression\" (keyup.enter)=\"onEnterKeyUp()\" (blur)=\"onInputBlur($event)\">\n    <i class=\"fa fa-caret-down\" (click)=\"showDropdown()\"></i>\n  </div>\n  <ul class=\"dropdown-menu\" *dropdownMenu role=\"menu\">\n    <li *ngFor=\"let displayValue of displayValues | filterByExpression:expression\" role=\"menuitem\">\n      <!-- href is needed for keyboard navigation -->\n      <a class=\"dropdown-item\" href=\"javascript:void(0)\" (click)=\"onItemClick(displayValue)\">{{displayValue}}</a>\n    </li>\n  </ul>\n</div>\n\n<ng-template #valueDisplayTemplate>\n  <span class=\"value\" [tabindex]=\"tabIndex\" (focus)=\"showDropdown()\">{{biDisplayValueMap.getValue(value)}}</span>\n</ng-template>","/*\n * This file is part of INSPIRE.\n * Copyright (C) 2016 CERN.\n *\n * INSPIRE is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * INSPIRE is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with INSPIRE; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Component, EventEmitter, Input, OnInit, Output, ChangeDetectionStrategy, TemplateRef } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nimport { RemoteAutocompletionService, AppGlobalsService } from '../shared/services';\nimport { AutocompletionConfig } from '../shared/interfaces';\n\n@Component({\n  selector: 'autocomplete-input',\n  styleUrls: [\n    './autocomplete-input.component.scss'\n  ],\n  templateUrl: './autocomplete-input.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AutocompleteInputComponent implements OnInit {\n  static readonly slashesRegExp = new RegExp('/', 'g');\n\n  @Input() autocompletionConfig: AutocompletionConfig;\n  @Input() value: string;\n  @Input() pathString: string;\n  @Input() tabIndex: number;\n  @Input() placeholder: string;\n\n  @Output() onValueChange = new EventEmitter<string>();\n  @Output() onCompletionSelect = new EventEmitter<string>();\n  @Output() onKeypress = new EventEmitter<KeyboardEvent>();\n  @Output() onBlur = new EventEmitter<void>();\n\n  dataSource: Observable<Array<string | object>> | Array<string | object>;\n  typeaheadOptionField: string;\n\n  constructor(public remoteAutocompletionService: RemoteAutocompletionService,\n    public appGlobalsService: AppGlobalsService) { }\n\n  ngOnInit() {\n    if (this.autocompletionConfig.url) {\n      // remote\n      this.typeaheadOptionField = this.getDotSeparatedOptionField() || 'text';\n      this.dataSource = Observable.create((observer: any) => {\n        if (this.value && this.value.length > 0) {\n          observer.next(this.value);\n        }\n      }).mergeMap((token: string) =>\n        this.remoteAutocompletionService.getAutocompletionResults(this.autocompletionConfig, token));\n    } else {\n      // local\n      this.typeaheadOptionField = this.getDotSeparatedOptionField() || '';\n      this.dataSource = this.autocompletionConfig.source;\n    }\n  }\n\n  get customItemTemplate(): TemplateRef<any> {\n    return this.appGlobalsService.templates[this.autocompletionConfig.itemTemplateName];\n  }\n\n  getDotSeparatedOptionField() {\n    const { optionField } = this.autocompletionConfig;\n    return optionField && optionField.replace(AutocompleteInputComponent.slashesRegExp, '.');\n  }\n\n  onModelChange(value: string) {\n    this.value = value;\n    this.onValueChange.emit(value);\n  }\n\n  onMatchSelect(match: any) {\n    this.onCompletionSelect.emit(match.item);\n  }\n\n  onMatchWrapperMouseDown(match: any) {\n    this.onModelChange(match.value);\n    this.onMatchSelect(match);\n  }\n}\n","<ng-template let-match=\"match\" #matchWrapper>\n  <div style=\"width: 100%; height: 100%; padding: 3px 20px;\" (mousedown)=\"onMatchWrapperMouseDown(match)\">\n    <ng-template [ngTemplateOutlet]=\"customItemTemplate || defaultItemTemplate\"\n      [ngTemplateOutletContext]=\"{item:match.item, index:i, match:match, query:query}\"></ng-template>\n  </div>\n</ng-template>\n\n<ng-template #defaultItemTemplate let-match=\"match\">\n  {{match.value}}\n</ng-template>\n\n<div class=\"autocomplete-container\">\n  <input attr.data-path=\"{{pathString}}\" [ngModel]=\"value\" (ngModelChange)=\"onModelChange($event)\"\n    (keypress)=\"onKeypress.emit($event)\" (blur)=\"onBlur.emit()\" [typeahead]=\"dataSource\"\n    [typeaheadOptionsLimit]=\"autocompletionConfig.size\" [typeaheadOptionField]=\"typeaheadOptionField\"\n    [typeaheadItemTemplate]=\"matchWrapper\" (typeaheadOnSelect)=\"onMatchSelect($event)\" [typeaheadWaitMs]=\"200\"\n    [tabindex]=\"tabIndex\" placeholder=\"{{placeholder}}\">\n</div>","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2017 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef\n} from '@angular/core';\n\nimport { IDiffResult } from 'diff';\n\nimport { TextDiffService } from '../shared/services';\n\n@Component({\n  selector: 'text-diff',\n  templateUrl: './text-diff.component.html',\n  styleUrls: [\n    './text-diff.component.scss'\n  ],\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TextDiffComponent {\n\n  @Input() newText: string;\n  @Input() currentText: string;\n\n  constructor(public textDiffService: TextDiffService) { }\n\n  get diffs(): Array<IDiffResult> {\n    return this.textDiffService\n      .diffByWord(this.currentText, this.newText);\n  }\n\n}\n","<span *ngFor=\"let diff of diffs\" [ngClass]=\"{added: diff.added, removed: diff.removed}\">{{diff.value}}</span>","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport {\n  Component,\n  Input,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  OnDestroy,\n  OnInit\n} from '@angular/core';\n\nimport { AbstractFieldComponent } from '../abstract-field';\nimport {\n  AppGlobalsService,\n  ProblemsService,\n  ComponentTypeService,\n  JsonStoreService,\n  KeysStoreService,\n  SchemaValidationService,\n  PathUtilService,\n  DomUtilService\n} from '../shared/services';\nimport { JSONSchema, JsonPatch } from '../shared/interfaces';\nimport { Subscription } from 'rxjs';\nimport { takeUntil } from 'rxjs/operators';\nimport { ValidationProblem } from '../shared/interfaces';\n\n@Component({\n  selector: 'primitive-field',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: [\n    './primitive-field.component.scss'\n  ],\n  templateUrl: './primitive-field.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PrimitiveFieldComponent extends AbstractFieldComponent implements OnInit, OnDestroy {\n\n  @Input() schema: JSONSchema;\n  @Input() path: Array<any>;\n  @Input() value: string | number | boolean;\n\n  internalErrors: Array<ValidationProblem> = [];\n  private lastCommitedValue: string | number | boolean;\n\n  constructor(public schemaValidationService: SchemaValidationService,\n    public componentTypeService: ComponentTypeService,\n    public appGlobalsService: AppGlobalsService,\n    public problemsService: ProblemsService,\n    public jsonStoreService: JsonStoreService,\n    public keysStoreService: KeysStoreService,\n    public pathUtilService: PathUtilService,\n    public domUtilService: DomUtilService,\n    public changeDetectorRef: ChangeDetectorRef) {\n    super(appGlobalsService, problemsService, pathUtilService, changeDetectorRef, jsonStoreService);\n  }\n\n  ngOnInit() {\n    super.ngOnInit();\n\n    if (this.value !== this.schema.default) {\n      this.lastCommitedValue = this.value;\n    }\n    this.problemsService\n      .internalCategorizedProblems$\n      .pipe(takeUntil(this.isDestroyed))\n      .subscribe(internalCategorizedErrorMap => {\n        this.internalErrors = internalCategorizedErrorMap.errors[this.pathString] || [];\n      });\n    this.appGlobalsService\n      .adminMode$\n      .pipe(takeUntil(this.isDestroyed))\n      .subscribe(adminMode => {\n        this.changeDetectorRef.markForCheck();\n      });\n    this.validate();\n  }\n\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    if (this.internalErrors.length > 0) {\n      this.problemsService.setInternalProblemsForPath(this.pathString, []);\n    }\n  }\n\n  commitValueChange() {\n    this.validate();\n    this.lastCommitedValue = this.value;\n    this.jsonStoreService.setIn(this.path, this.value);\n\n    if (this.schema.onValueChange) {\n      // setTimeout to workaround the case when the value is changed back to previous value inside onValuChange callback\n      setTimeout(() =>\n        this.schema.onValueChange(this.path, this.value, this.jsonStoreService, this.keysStoreService)\n      );\n    }\n  }\n\n  onBlur() {\n    this.domUtilService.clearHighlight();\n\n    if (this.value !== this.lastCommitedValue) {\n      this.commitValueChange();\n    }\n  }\n\n  onKeypress(event: KeyboardEvent) {\n    if (event.key === 'Enter' && !event.shiftKey) {\n      event.preventDefault();\n      (document.activeElement as HTMLElement).blur();\n    }\n  }\n\n  onValueChange(value: string) {\n    this.value = value;\n  }\n\n  onSearchableDropdownSelect(value: string) {\n    this.onValueChange(value);\n    this.commitValueChange();\n  }\n\n  onCompletionSelect(selection: string | object) {\n    this.commitValueChange();\n    const onCompletionSelect = this.schema.autocompletionConfig.onCompletionSelect;\n    if (onCompletionSelect) {\n      onCompletionSelect(this.path, selection, this.jsonStoreService, this.keysStoreService);\n    }\n  }\n\n  get tabIndex(): number {\n    return this.disabled ? -1 : 1;\n  }\n\n  get tooltipPosition(): string {\n    if (this.pathString.startsWith(this.appGlobalsService.firstElementPathForCurrentTab)) {\n      return 'bottom';\n    } else {\n      return 'top';\n    }\n  }\n\n  hasErrors(): boolean {\n    return super.hasErrors() || this.internalErrors.length > 0;\n  }\n\n  get errorClass(): string {\n    return !this.replaceJsonPatches[0] && this.hasErrors() ? 'error' : '';\n  }\n\n  get isPathToAnIndex(): boolean {\n    return typeof this.path[this.path.length - 1] === 'number';\n  }\n\n  private validate() {\n    if (this.value != null && this.value !== '' && this.externalErrors.length === 0) {\n      this.internalErrors = this.schemaValidationService.validateValue(this.value, this.schema);\n      this.problemsService.setInternalProblemsForPath(this.pathString, this.internalErrors);\n    }\n  }\n\n}\n","<div [id]=\"pathString\" [ngClass]=\"redLeftBorderClass\">\n  <table class=\"primitive-field-container\" [ngSwitch]=\"schema.componentType\">\n    <tr [ngClass]=\"errorClass\">\n      <ng-template #errorsTooltipTemplate>\n        <ul class=\"tooltip-left-align\">\n          <li *ngFor=\"let error of internalErrors\">\n            {{error.message}}\n          </li>\n          <li *ngFor=\"let error of externalErrors\">\n            {{error.message}}\n          </li>\n        </ul>\n      </ng-template>\n      <td *ngIf=\"!replaceJsonPatches[0]; else patchTemplate\" class=\"value-container\" [class.disabled]=\"disabled\" [tooltip]=\"errorsTooltipTemplate\"\n        [isDisabled]=\"!hasErrors()\" placement=\"{{tooltipPosition}}\" container=\"body\">\n        <div *ngSwitchCase=\"'string'\">\n          <string-input [pathString]=\"pathString\" [value]=\"value\" (valueChange)=\"onValueChange($event)\" [disabled]=\"disabled\" [tabIndex]=\"tabIndex\"\n            [latexPreviewEnabled]=\"schema.latexPreviewEnabled\" [placeholder]=\"schema.title\" (blur)=\"onBlur()\" (onKeypress)=\"onKeypress($event)\">\n          </string-input>\n        </div>\n        <div *ngSwitchCase=\"'enum'\">\n          <searchable-dropdown [pathString]=\"pathString\" [value]=\"value\" [placeholder]=\"schema.title\" [items]=\"schema.enum\" [shortcutMap]=\"schema.enumShorcutMap\"\n            (onSelect)=\"onSearchableDropdownSelect($event)\" [displayValueMap]=\"schema.enumDisplayValueMap\" [tabIndex]=\"tabIndex\"\n            (onBlur)=\"onBlur()\"></searchable-dropdown>\n        </div>\n        <div *ngSwitchCase=\"'autocomplete'\">\n          <autocomplete-input [pathString]=\"pathString\" [value]=\"value\" [autocompletionConfig]=\"schema.autocompletionConfig\"\n            (onBlur)=\"onBlur()\" (onKeypress)=\"onKeypress($event)\" (onValueChange)=\"onValueChange($event)\" (onCompletionSelect) = \"onCompletionSelect($event)\" \n            [placeholder]=\"schema.title\" [tabIndex]=\"tabIndex\"></autocomplete-input>\n        </div>\n        <div *ngSwitchCase=\"'integer'\">\n          <input type=\"number\" [(ngModel)]=\"value\" [tabindex]=\"tabIndex\" [attr.data-path]=\"pathString\" (blur)=\"onBlur()\" (keypress)=\"onKeypress($event)\"\n            [placeholder]=\"schema.title\">\n        </div>\n        <div *ngSwitchCase=\"'boolean'\">\n          <input type=\"checkbox\" [(ngModel)]=\"value\" (ngModelChange)=\"onBlur()\" [placeholder]=\"schema.title\">\n        </div>\n        <div *ngSwitchDefault>\n          ## Not recognized type: {{valueType}}\n        </div>\n      </td>\n      <td class=\"link-button-container\">\n        <a *ngIf=\"schema.linkBuilder\" class=\"no-decoration\" target=\"_blank\" [href]=\"schema.linkBuilder(value)\">\n          <i class=\"fa fa-link\" aria-hidden=\"true\"></i>\n        </a>\n        <a *ngIf=\"!schema.linkBuilder && schema.format === 'url'\" class=\"no-decoration\" target=\"_blank\" [href]=\"value\">\n          <i class=\"fa fa-link\" aria-hidden=\"true\"></i>\n        </a>\n      </td>\n    </tr>\n    <tr *ngIf=\"removeJsonPatch\">\n      <patch-actions [patch]=\"removeJsonPatch\"></patch-actions>\n    </tr>\n  </table>\n</div>\n\n<ng-template #patchTemplate>\n  <button class=\"btn btn-default btn-merge orange-left-border\" type=\"button\" [popover]=\"mergePopover\" [popoverContext]=\"{currentValue: value, patchValue: replaceJsonPatches[0].value}\"\n    popoverTitle=\"Merge\" container=\"body\">\n    {{value}}\n    <i class=\"fa fa-bolt\"></i>\n  </button>\n</ng-template>\n\n<ng-template let-currentValue=\"currentValue\" let-patchValue=\"patchValue\" #mergePopover>\n  <text-diff [currentText]=\"currentValue.toString()\" [newText]=\"patchValue ? patchValue.toString() : ''\"></text-diff>\n  <patch-actions [patch]=\"replaceJsonPatches[0]\" [addActionEnabled]=\"isPathToAnIndex\"></patch-actions>\n</ng-template>","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n  ChangeDetectorRef,\n  OnChanges,\n  SimpleChanges,\n  TemplateRef\n} from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpRequest } from '@angular/common/http';\n\nimport { Observable, of } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\nimport { AppGlobalsService, PathUtilService } from '../shared/services';\nimport { RefConfig, JSONSchema, RefAnchorAttributes } from '../shared/interfaces';\n\n@Component({\n  selector: 'ref-field',\n  styleUrls: [\n    './ref-field.component.scss'\n  ],\n  templateUrl: './ref-field.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class RefFieldComponent implements OnChanges {\n\n  @Input() schema: JSONSchema;\n  @Input() value: Map<string, string>;\n  @Input() path: Array<any>;\n\n  pathString: string;\n  refData: object;\n  requestOptions: any;\n  refPath: Array<any>;\n\n  isPreviewButtonHidden = false;\n\n  private anchorAttributes: RefAnchorAttributes;\n\n  constructor(private http: HttpClient,\n    private changeDetectorRef: ChangeDetectorRef,\n    private appGlobalsService: AppGlobalsService,\n    private pathUtilService: PathUtilService) { }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (this.refConfig) {\n      const valueChange = changes['value'];\n      const schemaChange = changes['schema'];\n\n      if (valueChange && this.refConfig && this.refConfig.anchorBuilder && this.ref) {\n        this.anchorAttributes = this.refConfig.anchorBuilder(this.ref);\n      }\n\n      // instead of ngOnInit because requestOptions has to be set before fetching\n      if (schemaChange && schemaChange.isFirstChange()) {\n        this.requestOptions = this.createRequestOptionsWithConfig();\n      }\n\n      if (valueChange && this.isTemplateEnabled) {\n        if (this.refConfig.lazy) {\n          this.isPreviewButtonHidden = false;\n        } else {\n          this.fetchRef();\n        }\n      }\n    }\n\n    if (changes['path']) {\n      this.pathString = this.pathUtilService.toPathString(this.path);\n      this.refPath = this.path.concat('$ref');\n    }\n  }\n\n  onPreviewClick() {\n    this.isPreviewButtonHidden = true;\n    this.fetchRef();\n  }\n\n  get customTemplate(): TemplateRef<any> {\n    return this.appGlobalsService.templates[this.refConfig.templateName];\n  }\n\n  get refConfig(): RefConfig {\n    return this.schema.refFieldConfig;\n  }\n\n  get ref(): string {\n    return this.value.get('$ref');\n  }\n\n  get anchorHref(): string {\n    return this.anchorAttributes ? this.anchorAttributes.href : this.ref;\n  }\n\n  get anchorDisplay(): string {\n    return this.anchorAttributes ? this.anchorAttributes.display : this.ref;\n  }\n\n  get isTemplateEnabled(): boolean {\n    return this.refConfig !== undefined && this.refConfig.templateName !== undefined;\n  }\n\n  get shouldDisplayTemplate(): boolean {\n    return this.isPreviewButtonHidden || !this.refConfig.lazy;\n  }\n\n  get shouldDisplayInputField(): boolean {\n    return this.refConfig !== undefined && this.refConfig.displayInputField;\n  }\n\n  private fetchRef() {\n    this.refData = undefined;\n    this.http\n      .get(this.ref, this.requestOptions)\n      .pipe(map((res: any) => res.json())).subscribe(data => {\n        this.refData = data;\n        this.changeDetectorRef.markForCheck();\n      });\n  }\n\n  private createRequestOptionsWithConfig(): any {\n    const headers = new Headers();\n    if (this.refConfig.headers) {\n      this.refConfig.headers\n        .forEach(header => headers.append(header.name, header.value));\n    }\n    return { headers };\n  }\n}\n","<div [id]=\"pathString\">\n  <div *ngIf=\"shouldDisplayInputField\">\n    <primitive-field [value]=\"ref\" [schema]=\"schema['properties']['$ref']\" [path]=\"refPath\"></primitive-field>\n  </div>\n  <div *ngIf=\"ref\">\n    <div *ngIf=\"isTemplateEnabled\">\n      <button class=\"btn-preview-template\" *ngIf=\"!shouldDisplayTemplate\" (click)=\"onPreviewClick($event)\"><i class=\"fa fa-eye\"></i></button>\n      <div *ngIf=\"shouldDisplayTemplate\">\n        <ng-template *ngIf=\"refData\" [ngTemplateOutlet]=\"customTemplate\" [ngTemplateOutletContext]=\"{response: refData}\"></ng-template>\n        <i *ngIf=\"!refData\" class=\"fa fa-spinner fa-spin align-center\"></i>\n      </div>\n    </div>\n    <div *ngIf=\"!isTemplateEnabled\">\n      <a target=\"_blank\" class=\"break-word\" [href]=\"anchorHref\">{{anchorDisplay}}</a>\n    </div>\n  </div>\n</div>\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport {\n  Component,\n  Input,\n  ChangeDetectionStrategy,\n} from '@angular/core';\n\nimport { JSONSchema } from '../shared/interfaces';\n\n/**\n * AnyFieldComponent\n *\n * This is a dummy component that has no logic, just passes @Input to its child and\n * propagates its child's output to its parent.\n *\n * IMPORTANT:\n * On the other hand it has smart template which has logic to decide which type of\n * component to use according to schema.\n */\n@Component({\n  selector: 'any-type-field',\n  styleUrls: [\n    './any-type-field.component.scss'\n  ],\n  templateUrl: './any-type-field.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AnyTypeFieldComponent {\n  @Input() schema: JSONSchema;\n  @Input() path: Array<any>;\n  @Input() value: any;\n}\n","<div [ngSwitch]=\"schema.componentType\">\n  <div *ngSwitchCase=\"'table-list'\">\n    <table-list-field [values]=\"value\" [schema]=\"schema\" [path]=\"path\"></table-list-field>\n  </div>\n  <div *ngSwitchCase=\"'complex-list'\">\n    <complex-list-field [values]=\"value\" [schema]=\"schema\" [path]=\"path\"></complex-list-field>\n  </div>\n  <div *ngSwitchCase=\"'primitive-list'\">\n    <primitive-list-field [values]=\"value\" [schema]=\"schema\" [path]=\"path\"></primitive-list-field>\n  </div>\n  <div *ngSwitchCase=\"'object'\">\n    <object-field [value]=\"value\" [schema]=\"schema\" [path]=\"path\"></object-field>\n  </div>\n  <div *ngSwitchCase=\"'ref'\">\n    <ref-field [value]=\"value\" [schema]=\"schema\" [path]=\"path\"></ref-field>\n  </div>\n  <div *ngSwitchDefault>\n    <primitive-field [value]=\"value\" [schema]=\"schema\" [path]=\"path\"></primitive-field>\n  </div>\n</div>\n","import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { List } from 'immutable';\n\n\nimport { DomUtilService, EmptyValueService, JsonStoreService, PathUtilService, KeysStoreService } from '../shared/services';\nimport { JSONSchema } from '../shared/interfaces';\n\n@Component({\n  selector: 'add-new-element-button',\n  styleUrls: [\n    './add-new-element-button.component.scss'\n  ],\n  templateUrl: './add-new-element-button.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AddNewElementButtonComponent {\n\n  @Input() path: Array<any>;\n  @Input() schema: JSONSchema;\n\n  constructor(public domUtilService: DomUtilService,\n    public emptyValueService: EmptyValueService,\n    public jsonStoreService: JsonStoreService,\n    public pathUtilService: PathUtilService,\n    public keyStoreService: KeysStoreService) { }\n\n  addNewElement() {\n    const itemSchema = this.schema.items;\n    const emptyValue = this.emptyValueService.generateEmptyValue(itemSchema);\n    const values: List<any> = this.jsonStoreService.getIn(this.path);\n    const insertIndex = values ? values.size : 0;\n    const insertPath = this.path.concat(insertIndex);\n    this.jsonStoreService.addIn(insertPath, emptyValue);\n    // focus on the new added element\n    const insertPathString = this.pathUtilService.toPathString(insertPath);\n    setTimeout(() => {\n      this.domUtilService.focusAndSelectFirstEditableChildById(insertPathString);\n    });\n  }\n\n}\n","<div [class.disabled]=\"schema.disabled\"  class=\"button-container\">\n  <button type=\"button\" class=\"btn-new-field\" (click)=\"addNewElement()\">Add new</button>\n</div>","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { List } from 'immutable';\n\nimport { EmptyValueService } from '../services';\nimport { JSONSchema } from '../interfaces';\n\n@Pipe({\n  name: 'selfOrEmpty',\n})\n\nexport class SelfOrEmptyPipe implements PipeTransform {\n\n  constructor(public emptyValueService: EmptyValueService) {}\n\n  /**\n   * Transforms a value to empty value if it is undefined,\n   * returns self if it is already defined\n   *\n   * @return - empty value if given value is undefined or value itself.\n   */\n  transform(value: any, schema: JSONSchema): any {\n    return value ? value : this.emptyValueService.generateEmptyValue(schema);\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2017 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n */\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Set } from 'immutable';\n\nimport { AppGlobalsService, PathUtilService } from '../services';\n\n@Pipe({\n  name: 'setFirstElementPath'\n})\nexport class SetFirstElementPathPipe implements PipeTransform {\n\n  constructor(public appGlobalsService: AppGlobalsService,\n              public pathUtilService: PathUtilService) { }\n\n  transform(fields: Set<string>, tabName: string): Set<string> {\n    this.appGlobalsService.tabNameToFirstTopLevelElement[tabName] = `${this.pathUtilService.separator}${fields.first()}`;\n    return fields;\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport {\n  Component,\n  Input,\n  Output,\n  OnChanges,\n  SimpleChanges,\n  ChangeDetectionStrategy\n} from '@angular/core';\n\nimport { Map, Set } from 'immutable';\n\nimport { PathCache, JSONSchema } from '../shared/interfaces';\nimport { JsonStoreService, AppGlobalsService, TabsUtilService, KeysStoreService } from '../shared/services';\n\n@Component({\n  selector: 'sub-record',\n  styleUrls: [\n    './sub-record.component.scss'\n  ],\n  templateUrl: './sub-record.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class SubRecordComponent implements OnChanges {\n  @Input() value: Map<string, any>;\n  @Input() schema: JSONSchema;\n  @Input() tabName: string;\n  @Input() keys: Set<string>;\n  @Input() pathString: string;\n\n  keysByType: { others: Set<string>, toggles: Set<string> };\n  pathCache: PathCache = {};\n\n  constructor(public jsonStoreService: JsonStoreService,\n    public appGlobalsService: AppGlobalsService,\n    public tabsUtilService: TabsUtilService,\n    public keysStoreService: KeysStoreService) {\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    if (changes['keys']) {\n      let keys;\n      if (this.tabName) {\n        const keyToTabName = this.tabsUtilService.getSchemaKeyToTabName(this.appGlobalsService.config.tabsConfig, this.schema);\n        keys = this.keys\n          .filter(key => keyToTabName[key] === this.tabName);\n      } else {\n        keys = this.keys;\n      }\n      this.keysByType = keys\n        .groupBy(key => this.isToggle(key) ? 'toggles' : 'others')\n        .toObject() as any;\n    }\n  }\n\n  // delete only work for others, not toggles (UPDATE: config comment if this changes)\n  deleteField(field: string) {\n    this.jsonStoreService.removeIn(this.getPathForChild(field));\n  }\n\n  getPathForChild(key: string): Array<any> {\n    if (!this.pathCache[key]) {\n      this.pathCache[key] = [key];\n    }\n    return this.pathCache[key];\n  }\n\n  onToggleValueChange(field: string, value: boolean) {\n    this.jsonStoreService.setIn(this.getPathForChild(field), value);\n  }\n\n  private isToggle(field: string): boolean {\n    return this.schema.properties[field].toggleColor !== undefined;\n  }\n\n  isDisabled(key): boolean {\n    return this.schema.properties[key].disabled && !this.appGlobalsService.adminMode ;\n  }\n\n  trackByElement(index: number, element: any): any {\n    return element;\n  }\n\n  getTitleDropdownItemTemplateNamesForChild(key: string): Array<string> {\n    return this.schema.properties[key].titleDropdownItemTemplateNames;\n  }\n}\n","<div class=\"record-fields-container\">\n  <table class=\"table\">\n    <div class=\"field-wrapper\">\n      <tr *ngIf=\"keysByType.toggles\" class=\"align-right\">\n        <td *ngFor=\"let key of keysByType.toggles; trackBy:trackByElement\">\n          <slide-toggle [id]=\"'/' + key\" [value]=\"value.get(key) | selfOrEmpty:schema.properties[key]\" (valueChange)=\"onToggleValueChange(key, $event)\"\n            [onText]=\"key\" [offText]=\"key\" [onColor]=\"schema.properties[key].toggleColor\"></slide-toggle>\n        </td>\n      </tr>\n    </div>\n    <div *ngIf=\"keysByType.others\">\n      <div class=\"field-wrapper\" *ngFor=\"let key of keysByType.others | setFirstElementPath:tabName; trackBy:trackByElement\">\n        <tr>\n          <td class=\"label-holder\">\n            <title-dropdown [title]=\"key | underscoreToSpace\" [isDisabled]=\"isDisabled(key)\">\n              <li *ngIf=\"schema.properties[key].type === 'array'\" class=\"title-dropdown-item\">\n                <add-new-element-button [path]=\"getPathForChild(key)\" [schema]=\"schema.properties[key]\"></add-new-element-button>\n              </li>\n              <li class=\"title-dropdown-item\">\n                <button type=\"button\" class=\"editor-btn-delete editor-btn-delete-text\" (click)=\"deleteField(key)\">Delete</button>\n              </li>\n              <ng-container *ngIf=\"getTitleDropdownItemTemplateNamesForChild(key)\">\n                <li *ngFor=\"let templateName of getTitleDropdownItemTemplateNamesForChild(key)\" class=\"title-dropdown-item custom-title-dropdown-item\">\n                  <ng-template [ngTemplateOutlet]=\"appGlobalsService.templates[templateName]\"></ng-template>\n                </li>\n              </ng-container>\n              <li class=\"divider\"></li>\n              <li class=\"title-dropdown-item\" (click)=\"$event.stopPropagation()\">\n                <find-replace [path]=\"getPathForChild(key)\" [schema]=\"schema.properties[key]\"></find-replace>\n              </li>\n            </title-dropdown>\n          </td>\n        </tr>\n        <tr>\n          <td>\n            <any-type-field [value]=\"value.get(key) | selfOrEmpty:schema.properties[key]\" [schema]=\"schema.properties[key]\" [path]=\"getPathForChild(key)\"></any-type-field>\n          </td>\n        </tr>\n      </div>\n    </div>\n  </table>\n</div>\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { DomSanitizer, SafeResourceUrl } from '@angular/platform-browser';\n\n@Pipe({\n  name: 'sanitizeUrl',\n})\n\nexport class SanitizeUrlPipe implements PipeTransform {\n\n  constructor(public domSanitizer: DomSanitizer) { }\n\n  /**\n   * Transforms url to safe url that can be used for `<script src>` or `<iframe src>`\n   *\n   * @param {string} url\n   * @return {SafeResourceUrl}\n   */\n  transform(url: string): SafeResourceUrl {\n    return this.domSanitizer.bypassSecurityTrustResourceUrl(url);\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\n@Component({\n  selector: 'html-view',\n  styleUrls: [\n    './html-view.component.scss'\n  ],\n  templateUrl: './html-view.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class HtmlViewComponent {\n\n  @Input() url: string;\n\n}\n","<object class=\"fit-parent\" [data]=\"url | sanitizeUrl\"></object>","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Component, Input, ChangeDetectionStrategy } from '@angular/core';\n\nimport { Preview } from '../shared/interfaces';\n\n@Component({\n  selector: 'editor-previewer',\n  styleUrls: [\n    './editor-previewer.component.scss'\n  ],\n  templateUrl: './editor-previewer.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class EditorPreviewerComponent {\n\n  @Input() previews: Array<Preview>;\n\n  openUrlInNewWindow(url: string) {\n    window.open(url, 'Preview', 'left=20,top=20,width=750,height=750');\n  }\n\n  trackByIndex(index: number, element: any): number {\n    return index;\n  }\n}\n","<div>\n  <tabset>\n    <tab *ngFor=\"let preview of previews; trackBy:trackByIndex\" [heading]=\"preview.name\">\n      <div [ngSwitch]=\"preview.type\">\n        <div *ngSwitchCase=\"'html'\" class=\"preview-container\">\n          <ng-template tabHeading>\n            <span class=\"preview-link\" (click)=\"openUrlInNewWindow(preview.url)\">\n              <i class=\"fa fa-external-link\"></i>\n            </span>\n          </ng-template>\n          <html-view [url]=\"preview.url\"></html-view>\n        </div>\n      </div>\n    </tab>\n  </tabset>\n</div>","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2017 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  Input,\n  OnInit,\n  ChangeDetectorRef\n} from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { takeUntil, map } from 'rxjs/operators';\n\nimport { AbstractSubscriberComponent } from '../../abstract-subscriber';\nimport { DomUtilService, PathUtilService, ProblemsService } from '../../shared/services';\nimport { SchemaValidationProblems, ProblemCollectionType } from '../../shared/interfaces';\n\n@Component({\n  selector: 'problems-console-tab',\n  styleUrls: [\n    '../abstract-console-tab/abstract-console-tab.component.scss',\n    './problems-console-tab.component.scss'\n  ],\n  templateUrl: './problems-console-tab.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ProblemsConsoleTabComponent extends AbstractSubscriberComponent implements OnInit {\n\n  @Input() problemType: ProblemCollectionType;\n\n  internalProblemMap: SchemaValidationProblems;\n  externalProblemMap: SchemaValidationProblems;\n  problemCount = 0;\n  iconClassName: string;\n\n  constructor(public domUtilService: DomUtilService,\n    public pathUtilService: PathUtilService,\n    public problemsService: ProblemsService,\n    public changeDetectorRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.problemsService.externalCategorizedProblems$\n      .pipe(map(categorizedProblemMap => categorizedProblemMap[this.problemType]))\n      .pipe(takeUntil(this.isDestroyed))\n      .subscribe(problemMap => {\n        this.externalProblemMap = problemMap;\n        this.changeDetectorRef.markForCheck();\n      });\n    this.problemsService.internalCategorizedProblems$\n      .pipe(map(categorizedProblemMap => categorizedProblemMap[this.problemType]))\n      .pipe(takeUntil(this.isDestroyed))\n      .subscribe(problemMap => {\n        this.internalProblemMap = problemMap;\n        this.changeDetectorRef.markForCheck();\n      });\n\n    // TODO: create WarningsConsoleTabComponent with same template to avoid `if`\n\n    const problemCount$ = this.problemType === 'errors' ? this.problemsService.errorCount$ : this.problemsService.warningCount$;\n    problemCount$\n      .pipe(takeUntil(this.isDestroyed))\n      .subscribe(problemCount => {\n        this.problemCount = problemCount;\n      });\n\n    this.iconClassName = this.problemType === 'errors' ? 'fa fa-times' : 'fa fa-exclamation-triangle';\n  }\n\n  focusAndSelectPath(path: string) {\n    this.domUtilService.focusAndSelectFirstEditableChildById(path, true);\n  }\n}\n\n","<ng-template tabHeading>\n  <i [ngClass]=\"iconClassName\"></i> {{problemType | titlecase}} <span class=\"badge\">{{problemCount}}</span>\n</ng-template>\n\n<ul class=\"list-group\">\n  <ng-container *ngFor=\"let key of internalProblemMap | keys\">\n    <li *ngFor=\"let problem of internalProblemMap[key]\" class=\"list-group-item\" (click)=\"focusAndSelectPath(key)\">\n      <i [ngClass]=\"iconClassName\"></i> {{ problem.message }}\n    </li>\n  </ng-container>\n  <ng-container *ngFor=\"let key of externalProblemMap | keys\">\n    <li *ngFor=\"let problem of externalProblemMap[key]\" class=\"list-group-item\" (click)=\"focusAndSelectPath(key)\">\n      <i [ngClass]=\"iconClassName\"></i> {{ problem.message }}\n    </li>\n  </ng-container>\n</ul>","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2017 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n */\n\nimport {\n  Component,\n  ChangeDetectionStrategy,\n  OnInit,\n  ChangeDetectorRef,\n  TemplateRef\n} from '@angular/core';\nimport { takeUntil } from \"rxjs/operators\";\nimport { AbstractSubscriberComponent } from '../../abstract-subscriber';\nimport { DomUtilService, PathUtilService, JsonStoreService, AppGlobalsService } from '../../shared/services';\nimport { JsonPatch, JsonPatchesByPath } from '../../shared/interfaces';\n\n@Component({\n  selector: 'patches-console-tab',\n  styleUrls: [\n    '../abstract-console-tab/abstract-console-tab.component.scss',\n    './patches-console-tab.component.scss'\n  ],\n  templateUrl: './patches-console-tab.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class PatchesConsoleTabComponent extends AbstractSubscriberComponent implements OnInit {\n\n  patchesByPath: JsonPatchesByPath = {};\n\n  constructor(private domUtilService: DomUtilService,\n    private appGlobalsService: AppGlobalsService,\n    private pathUtilService: PathUtilService,\n    private jsonStoreService: JsonStoreService,\n    private changeDetectorRef: ChangeDetectorRef) {\n    super();\n  }\n\n  ngOnInit() {\n    this.jsonStoreService.patchesByPath$\n      .pipe(takeUntil(this.isDestroyed))\n      .subscribe(patchesByPath => {\n        this.patchesByPath = patchesByPath;\n        this.changeDetectorRef.markForCheck();\n      });\n  }\n\n  focusPatch(patch: JsonPatch) {\n    this.domUtilService.focusPatch(patch);\n  }\n\n  get patches(): Array<JsonPatch> {\n    return Object\n      .keys(this.patchesByPath)\n      .reduce((patches, path) => patches.concat(this.patchesByPath[path]), []);\n  }\n\n  get customHeaderTemplate(): TemplateRef<any> {\n    return this.appGlobalsService.templates.patchesHeaderTemplate;\n  }\n\n  acceptAll() {\n    this.patches\n      .forEach(patch => this.jsonStoreService.applyPatch(patch));\n  }\n\n  rejectAll() {\n    this.patches\n      .forEach(patch => this.jsonStoreService.rejectPatch(patch));\n  }\n}\n\n","<ng-template tabHeading>\n  <i class=\"fa fa-bolt\"></i> Conflicts <span class=\"badge\">{{patches.length}}</span>\n</ng-template>\n\n<div *ngIf=\"patches && patches.length > 0\" class=\"header-container\">\n  <ng-template [ngTemplateOutlet]=\"customHeaderTemplate\"></ng-template>\n  <button class=\"btn btn-success\" (click)=\"acceptAll()\">Accept All<i class=\"fa fa-check icon-padding-left\"></i></button>\n  <button class=\"btn btn-danger\" (click)=\"rejectAll()\">Reject All<i class=\"fa fa-times icon-padding-left\"></i></button>\n</div>\n<ul class=\"list-group\">\n  <li *ngFor=\"let path of patchesByPath | keys | sortAlphabetically\" class=\"list-group-item\">\n    <span *ngIf=\"patchesByPath[path].length === 1\" (click)=\"focusPatch(patchesByPath[path][0])\" role=\"button\" class=\"title\">\n      <i class=\"fa fa-bolt\"></i> {{patchesByPath[path][0].path}} - {{patchesByPath[path][0].op}}\n    </span>\n    <ng-container *ngIf=\"patchesByPath[path].length > 1\">\n      <span class=\"title\" role=\"button\" [attr.aria-controls]=\"path + '-collapse'\" (click)=\"collapse.toggle()\">\n        <i class=\"fa fa-expand\"></i> {{path}} ({{patchesByPath[path].length}})\n      </span>\n      <ul class=\"list-group\" #collapse=\"bs-collapse\" [collapse]=\"true\" [attr.id]=\"path + '-collapse'\">\n        <li *ngFor=\"let patch of patchesByPath[path]\" class=\"list-group-item nested\">\n          <span class=\"title\" (click)=\"focusPatch(patch)\" role=\"button\">\n            <i class=\"fa fa-bolt\"></i> {{patch.path}} - {{patch.op}}\n          </span>\n        </li>\n      </ul>\n    </ng-container>\n  </li>\n</ul>\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2017 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n */\n\nimport {\n  Component, Input, ChangeDetectorRef, ChangeDetectionStrategy, OnInit, Output,\n  EventEmitter, OnDestroy\n} from '@angular/core';\n\nimport { CategorizedValidationProblems } from '../shared/interfaces';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'bottom-console',\n  styleUrls: [\n    './bottom-console.component.scss'\n  ],\n  templateUrl: './bottom-console.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class BottomConsoleComponent {\n\n  @Input() isOpen = false;\n  @Input() activeTab = '';\n\n  @Output() onCollapse = new EventEmitter<boolean>();\n\n  closePanel() {\n    this.onCollapse.emit(false);\n  }\n\n  isActive(tabName: string): boolean {\n    return tabName === this.activeTab;\n  }\n}\n","<div *ngIf=\"isOpen\" class=\"bottom-console-container\">\n  <tabset>\n    <tab [active]=\"isActive('Errors')\">\n      <problems-console-tab [problemType]=\"'errors'\"></problems-console-tab>\n    </tab>\n    <tab [active]=\"isActive('Warnings')\">\n      <problems-console-tab [problemType]=\"'warnings'\"></problems-console-tab>\n    </tab>\n    <tab [active]=\"isActive('Patches')\">\n      <patches-console-tab></patches-console-tab>\n    </tab>\n    <tab (select)=\"closePanel()\" [customClass]=\"'pull-right'\">\n      <ng-template tabHeading>\n        <i class=\"fa fa-window-close\"></i>\n      </ng-template>\n    </tab>\n  </tabset>\n</div>","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n */\n\nimport {\n  Component,\n  EventEmitter,\n  Input,\n  Output,\n  OnInit,\n  OnChanges,\n  SimpleChanges,\n  ViewEncapsulation,\n  ChangeDetectionStrategy,\n  TemplateRef\n} from '@angular/core';\nimport { fromJS, Map, Set } from 'immutable';\n\nimport { ReplaySubject } from 'rxjs';\nimport { takeUntil, skipWhile } from 'rxjs/operators';\n\nimport { AbstractSubscriberComponent } from './abstract-subscriber';\nimport {\n  AppGlobalsService,\n  JsonStoreService,\n  JsonUtilService,\n  JsonSchemaService,\n  KeysStoreService,\n  PathUtilService,\n  RecordFixerService,\n  SchemaFixerService,\n  TabsUtilService,\n  ProblemsService\n} from './shared/services';\n\nimport {\n  JsonEditorConfig,\n  Preview,\n  SchemaValidationProblems,\n  JsonPatch,\n  Shortcut,\n  CustomShortcutKeys,\n  JSONSchema\n} from './shared/interfaces';\n\n\n@Component({\n  selector: 'json-editor',\n  encapsulation: ViewEncapsulation.None,\n  styleUrls: [\n    './json-editor.component.scss'\n  ],\n  templateUrl: './json-editor.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\n\nexport class JsonEditorComponent extends AbstractSubscriberComponent implements OnChanges, OnInit {\n\n  @Input() config: JsonEditorConfig;\n  @Input() record: object;\n  // original schema\n  @Input() schema: any;\n  @Input() problemMap: SchemaValidationProblems;\n  @Input() jsonPatches: Array<JsonPatch>;\n  @Input() templates: { [templateName: string]: TemplateRef<any> };\n\n  @Output() recordChange = new EventEmitter<Object>();\n  @Output() jsonPatchesChange = new EventEmitter<Array<JsonPatch>>();\n  @Output() validationProblems = new EventEmitter<SchemaValidationProblems>();\n\n  readonly pathString = '';\n  _record: Map<string, any>;\n  tabNames: Array<string>;\n  previews: Array<Preview>;\n  isBottomConsoleOpen = false;\n  isPreviewerHidden = false;\n  isSidebarCollapsed = true;\n  bottomConsoleActiveTab = '';\n  customShortcutKeys: CustomShortcutKeys;\n  // altered schema enchanced with configs\n  fixedSchema: JSONSchema;\n\n  // used to decide if the [record] is change caused by recordChange.emit or parent component\n  private lastEmittedRecord: object;\n\n  constructor(\n    public appGlobalsService: AppGlobalsService,\n    public problemsService: ProblemsService,\n    public jsonStoreService: JsonStoreService,\n    public jsonUtilService: JsonUtilService,\n    public jsonSchemaService: JsonSchemaService,\n    public keysStoreService: KeysStoreService,\n    public recordFixerService: RecordFixerService,\n    public schemaFixerService: SchemaFixerService,\n    public tabsUtilService: TabsUtilService,\n    public pathUtilService: PathUtilService\n  ) {\n    super();\n  }\n\n  ngOnInit() {\n    this.isPreviewerHidden = this.config.isPreviewerHiddenOnStart;\n    this.appGlobalsService.adminMode$\n      .pipe(takeUntil(this.isDestroyed))\n      .subscribe(adminMode => {\n        this.keysStoreService.buildKeysMap(this._record, this.fixedSchema);\n      });\n\n    // listen for all changes on json\n    this.jsonStoreService.json$\n      .pipe(skipWhile(json => json === this._record))\n      .pipe(takeUntil(this.isDestroyed))\n      .subscribe(json => {\n        this._record = json;\n        // emit the change as plain JS object\n        this.lastEmittedRecord = json.toJS();\n        this.recordChange.emit(this.lastEmittedRecord);\n      });\n\n    // list for all changes on jsonPatches\n    this.jsonStoreService.jsonPatches$\n      .pipe(takeUntil(this.isDestroyed))\n      .subscribe(patches => {\n        this.jsonPatchesChange.emit(patches);\n      });\n\n    this.problemsService.internalProblemMap$\n      .pipe(takeUntil(this.isDestroyed))\n      .subscribe(internalProblemMap => {\n        this.validationProblems.emit(internalProblemMap);\n      });\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    // throw error if a required input is undefined\n    if (changes['schema'] && !this.schema) {\n      this.throwInputUndefined('schema');\n    }\n    if (changes['record'] && !this.record) {\n      this.throwInputUndefined('record');\n    }\n\n    // warn if an important input is undefined\n    if (changes['config'] && !this.config) {\n      this.config = {};\n      console.warn(`[config] is undefined, make sure that is intended.`);\n    }\n\n    const recordChanged = changes['record'] && this.record !== this.lastEmittedRecord;\n    const schemaChanged = changes['schema'] || changes['config'];\n\n    if (schemaChanged) {\n      this.fixedSchema = this.schemaFixerService.fixSchema(this.schema, this.config.schemaOptions);\n      this.jsonSchemaService.setSchema(this.fixedSchema);\n    }\n\n    if (schemaChanged || recordChanged) {\n      this.record = this.recordFixerService.fixRecord(this.record, this.fixedSchema);\n      this.lastEmittedRecord = this.record;\n      this._record = fromJS(this.record);\n      this.jsonStoreService.setJson(this._record);\n      this.keysStoreService.buildKeysMap(this._record, this.fixedSchema);\n    }\n\n\n    if (changes['config']) {\n      this.appGlobalsService.config = this.config;\n      if (this.config.tabsConfig) {\n        this.tabNames = this.tabsUtilService.getTabNames(this.config.tabsConfig);\n        this.tabsUtilService.activeTabName$.subscribe(tabName => { this.appGlobalsService.activeTabName = tabName; });\n        this.appGlobalsService.activeTabName = this.config.tabsConfig.defaultTabName;\n      }\n\n      this.customShortcutKeys = this.config.shortcuts;\n    }\n\n    if (recordChanged || changes['config']) {\n      this.extractPreviews();\n    }\n\n    if (changes['jsonPatches']) {\n      if (this.jsonPatches) {\n        this.jsonStoreService.setJsonPatches(this.jsonPatches);\n      }\n    }\n\n    if (changes['problemMap']) {\n      this.problemsService.externalProblems = this.problemMap;\n    }\n\n    if (changes['templates']) {\n      this.appGlobalsService.templates = this.templates || {};\n    }\n  }\n\n  private throwInputUndefined(inputName: string) {\n    throw new Error(`[${inputName}] is undefined!\n      if you are fetching ${inputName} async then please consider using:\n        <json-editor *ngIf=\"${inputName}\" [${inputName}]=\"${inputName}\" ...> </json-editor>\n      in order to wait for it to be fetched before initializing json-editor`\n    );\n  }\n\n  /**\n   * Converts PreviewConfig instances to Preview instances and appends to `previews` array.\n   */\n  private extractPreviews() {\n    if (!this.isPreviewerDisabled) {\n      // if url is not set directly, populate it\n      this.previews = [];\n      this.config.previews\n        .forEach(previewConfig => {\n          let url: string;\n          if (previewConfig.url) {\n            url = previewConfig.url;\n          } else if (previewConfig.getUrl) {\n            url = previewConfig.getUrl(this.record);\n          } else if (previewConfig.urlPath) {\n            try {\n              url = this.jsonUtilService.getValueInPath(this.record, previewConfig.urlPath);\n            } catch (error) {\n              console.warn(`Path ${previewConfig.urlPath} in preview config is not present in the input record`);\n            }\n          } else {\n            throw new Error('Either url, urlPath or getUrl should be set for a preview');\n          }\n          if (url) {\n            this.previews.push({\n              name: previewConfig.name,\n              type: previewConfig.type,\n              url: url\n            });\n          }\n        });\n    }\n  }\n\n  get keys$(): ReplaySubject<Set<string>> {\n    return this.keysStoreService.forPath(this.pathString);\n  }\n\n  get isPreviewerDisabled(): boolean {\n    return (\n      this.config.previews === undefined || this.config.previews.length === 0\n    );\n  }\n\n  set activeTabName(tabName: string) {\n    this.appGlobalsService.activeTabName = tabName;\n  }\n\n  isActiveTab(tabName) {\n    return this.appGlobalsService.activeTabName === tabName;\n  }\n\n  get shorterEditorContainerClass(): string {\n    return this.isBottomConsoleOpen ? 'shorter-editor-container' : '';\n  }\n\n  openBottomConsole(tabName: string) {\n    this.isBottomConsoleOpen = true;\n    this.bottomConsoleActiveTab = tabName;\n  }\n\n  trackByElement(index: number, element: any): any {\n    return element;\n  }\n}\n","<div id=\"ng2-json-editor\" class=\"editor-container\" [ngClass]=\"shorterEditorContainerClass\">\n  \n  <div  *ngIf=\"!config.compact\" class=\"collapsed-menu-container\">\n      <add-field-dropdown [fields]=\"keys$ | async\" [pathString]=\"pathString\" \n      [schema]=\"fixedSchema\" class=\"add-field-button\">\n        <i class=\"fa fa-plus fa-2x\" tooltip=\"Add Field\" placement=\"right\"></i>\n      </add-field-dropdown>\n    <span id=\"preview-toggle-icon\" tooltip=\"{{isPreviewerHidden ? 'Show Preview' : 'Hide Preview'}}\" placement=\"right\"class=\"preview-icon\" (click)=\"isPreviewerHidden = !isPreviewerHidden\">\n      <i class=\"fa fa-1x\" [ngClass]=\"!isPreviewerHidden ? 'fa-eye-slash' : 'fa-eye'\"></i>\n    </span>\n    <bottom-console-badges (badgeClick)=\"openBottomConsole($event)\"></bottom-console-badges>\n    <span class=\"open-sidebar-container\" (click)=\"isSidebarCollapsed = !isSidebarCollapsed\">\n      <i class=\"fa fa-angle-right fa-4x\" [class.rotate]=\"!isSidebarCollapsed\"></i>\n    </span>\n  </div>\n\n  <div *ngIf=\"!config.compact\" class=\"menu-container\" [ngClass]=\"isSidebarCollapsed ? 'close' : 'open'\">\n    <tree-menu [record]=\"_record\" [schema]=\"fixedSchema\"></tree-menu>\n    <hr>\n    <div *ngIf=\"config.enableAdminModeSwitch\" class=\"admin-mode\" tooltip=\"Allows editing all fields (use with care)\">\n      <input id=\"admin-mode-checkbox\" type=\"checkbox\" [(ngModel)]=\"appGlobalsService.adminMode\" />\n      <label class=\"admin-mode\" for=\"admin-mode-checkbox\">Enable Admin Mode</label>\n    </div>\n    <hr>\n  </div>\n\n  <div id=\"middle-main-container\" class=\"middle main-container\" [shortcuts]=\"customShortcutKeys\" [ngClass]=\"{ 'maximizeEditor' : isPreviewerHidden, 'compact' : config.compact }\">\n    <add-field-dropdown *ngIf=\"config.compact\" [fields]=\"keys$ | async\" [pathString]=\"pathString\" \n    [schema]=\"fixedSchema\">Add field</add-field-dropdown>\n    <tabset *ngIf=\"config.tabsConfig\">\n      <tab *ngFor=\"let tabName of tabNames; trackBy:trackByElement\" [heading]=\"tabName\" (select)=\"activeTabName = tabName\" [active]=\"isActiveTab(tabName)\">\n        <sub-record [value]=\"_record\" [tabName]=\"tabName\" [schema]=\"fixedSchema\" [keys]=\"keys$ | async\" [pathString]=\"pathString\"></sub-record>\n      </tab>\n    </tabset>\n    <sub-record *ngIf=\"!config.tabsConfig\" [value]=\"_record\" [schema]=\"fixedSchema\" [keys]=\"keys$ | async\" [pathString]=\"pathString\"></sub-record>\n  </div>\n\n  <div id=\"right-main-container\" *ngIf=\"!isPreviewerDisabled\" class=\"main-container right\" [ngClass]=\"isPreviewerHidden ? 'minimizePreview' : 'maximizePreview' \">\n    <editor-previewer [hidden]=\"isPreviewerHidden\" [previews]=\"previews\"> </editor-previewer>\n  </div>\n\n</div>\n\n<bottom-console *ngIf=\"!config.compact\" [activeTab]=\"bottomConsoleActiveTab\" [isOpen]=\"isBottomConsoleOpen\" (onCollapse)=\"isBottomConsoleOpen = $event\"></bottom-console>\n<!-- Modal View controlled by ModalService -->\n<modal-view>\n</modal-view>","// All rxjs operators used in the codebase\n\nimport { of } from \"rxjs\";\nimport { distinctUntilChanged, filter, map, skipWhile, takeUntil  } from \"rxjs/operators\";\nimport 'rxjs/add/operator/catch';\n\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { PathUtilService } from '../services';\n\n/**\n * Returs last part of json-pointer string\n * Example: for '/foo/bar/0/thing', returs 'thing'\n */\n@Pipe({\n  name: 'lastPathElement'\n})\nexport class LastPathElementPipe implements PipeTransform {\n\n  constructor(private pathUtilService: PathUtilService) { }\n\n  transform(path: string): string {\n    return path\n      .substring(path.lastIndexOf('/') + 1);\n  }\n}\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Component, Input, OnChanges, SimpleChanges, ChangeDetectionStrategy, OnDestroy } from '@angular/core';\nimport { Set } from 'immutable';\nimport { Subscription } from 'rxjs';\nimport { filter, takeUntil } from 'rxjs/operators';\n\nimport { AbstractSubscriberComponent } from '../abstract-subscriber';\nimport { DomUtilService, PathUtilService, KeysStoreService, JsonSchemaService } from '../shared/services';\nimport { JSONSchema } from '../shared/interfaces';\n\n@Component({\n  selector: 'add-nested-field-dropdown',\n  styleUrls: [\n    './add-field-dropdown.component.scss',\n    './add-nested-field-dropdown.component.scss'\n  ],\n  templateUrl: './add-nested-field-dropdown.component.html',\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class AddNestedFieldDropdownComponent extends AbstractSubscriberComponent implements OnChanges, OnDestroy {\n\n  @Input() schema: JSONSchema;\n  @Input() pathString: string;\n  @Input() isDisabled: boolean;\n\n  nestedKeysMap: { [path: string]: Set<string> };\n  keysChangeSubscription: Subscription;\n\n  constructor(public keysStoreService: KeysStoreService,\n    public jsonSchemaService: JsonSchemaService,\n    public pathUtilService: PathUtilService,\n    public domUtilService: DomUtilService) {\n    super();\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    const pathStringChange = changes['pathString'];\n    if (pathStringChange) {\n      this.nestedKeysMap = {};\n      this.nestedKeysMap[this.pathString] = this.keysStoreService.keysMap[this.pathString];\n      const nestedPathPrefix = this.pathString + this.pathUtilService.separator;\n      Object.keys(this.keysStoreService.keysMap)\n        .filter(path => path.startsWith(nestedPathPrefix))\n        .forEach(path => {\n          this.nestedKeysMap[path] = this.keysStoreService.keysMap[path];\n        });\n\n      if (this.keysChangeSubscription) {\n        this.keysChangeSubscription.unsubscribe();\n      }\n      this.keysChangeSubscription = this.keysStoreService.onKeysChange\n        .pipe(filter(change => change.path.startsWith(this.pathString)))\n        .pipe(takeUntil(this.isDestroyed))\n        .subscribe(change => { this.nestedKeysMap[change.path] = change.keys; });\n    }\n  }\n\n  /**\n   * Return keys that could be added for the given path.\n   *\n   * @return schema key - hidden keys - existing keys\n   */\n  addableKeysForPath(path: string): Set<string> {\n    const keys = this.nestedKeysMap[path];\n    const schema = this.jsonSchemaService.forPathString(path);\n    // || schema.items.properties is to handle the keys when the path belongs to table-list.\n    const schemaProps = schema.properties || schema.items.properties;\n    const schemaKeys = Set<string>(Object.keys(schemaProps)\n      .filter(key => !schemaProps[key].hidden));\n    const addableKeys = schemaKeys.subtract(keys);\n    return addableKeys.size > 0 ? addableKeys : undefined;\n  }\n\n  onFieldSelect(path: string, key: string) {\n    let schema = this.jsonSchemaService.forPathString(path);\n    if (schema.componentType === 'table-list') {\n      schema = schema.items;\n    }\n    const newKeyPath = this.keysStoreService.addKey(path, key, schema);\n    if (this.keysStoreService.keysMap[newKeyPath]) {\n      this.nestedKeysMap[newKeyPath] = this.keysStoreService.keysMap[newKeyPath];\n    }\n    this.domUtilService.focusAndSelectFirstEditableChildById(newKeyPath);\n  }\n}\n","<div class=\"btn-group add-field-dropdown-container\" dropdown keyboardNav=\"true\" [isDisabled]=\"isDisabled\">\n  <button type=\"button\" class=\"btn btn-add-field-dropdown\" dropdownToggle>\n    <i class=\"fa fa-plus\"></i> <i class=\"fa fa-caret-down\"></i>\n  </button>\n  <ul class=\"dropdown-menu\" *dropdownMenu>\n    <div *ngFor=\"let path of nestedKeysMap | keys | sortAlphabetically; first as isFirst\">\n      <div *ngIf=\"addableKeysForPath(path); let addableKeys\">\n        <li *ngIf=\"!isFirst\" class=\"divider dropdown-divider\"></li>\n        <li *ngIf=\"!isFirst\" class=\"dropdown-header title\">{{path | lastPathElement}}</li>\n        <li *ngFor=\"let key of addableKeys | sortAlphabetically\">\n          <a class=\"dropdown-item\" href=\"javascript:void(0)\" (click)=\"onFieldSelect(path, key)\">{{key}}</a>\n        </li>\n      </div>\n    </div>\n  </ul>\n</div>","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport { Pipe, PipeTransform } from '@angular/core';\nimport { Set } from 'immutable';\n\n/**\n * It returns array of keys which aren't present in given object\n */\n@Pipe({\n  name: 'differentKeys'\n})\nexport class DifferentKeysPipe implements PipeTransform {\n  transform(object: object, keys: Set<string>): Set<string> {\n    return Set.fromKeys(object).subtract(keys);\n  }\n}\n","import { AddAlwaysShowFieldsPipe } from './add-always-show-fields.pipe';\nimport { DifferentKeysPipe } from './different-keys.pipe';\nimport { FilterByExpressionPipe } from './filter-by-expression.pipe';\nimport { FilterHiddenFieldsPipe } from './filter-hidden-fields.pipe';\nimport { SanitizeUrlPipe } from './sanitize-url.pipe';\nimport { SelfOrEmptyPipe } from './self-or-empty.pipe';\nimport { UnderscoreToSpacePipe } from './underscore-to-space.pipe';\nimport { SetFirstElementPathPipe } from './set-first-element-path.pipe';\nimport { SortAlphabeticallyPipe } from './sort-alphabetically.pipe';\nimport { KeysPipe } from './keys-pipe';\nimport { LastPathElementPipe } from './last-path-element.pipe';\nimport { TypeOfPipe } from './type-of.pipe';\nimport { SortKeysBySchemaPipe } from './sort-keys-by-schema.pipe';\n\nexport {\n  AddAlwaysShowFieldsPipe,\n  DifferentKeysPipe,\n  FilterByExpressionPipe,\n  FilterHiddenFieldsPipe,\n  SanitizeUrlPipe,\n  SelfOrEmptyPipe,\n  UnderscoreToSpacePipe,\n  SetFirstElementPathPipe,\n  SortAlphabeticallyPipe,\n  KeysPipe,\n  LastPathElementPipe,\n  TypeOfPipe,\n  SortKeysBySchemaPipe\n};\n\nexport const SHARED_PIPES = [\n  AddAlwaysShowFieldsPipe,\n  DifferentKeysPipe,\n  FilterByExpressionPipe,\n  FilterHiddenFieldsPipe,\n  SanitizeUrlPipe,\n  SelfOrEmptyPipe,\n  UnderscoreToSpacePipe,\n  SetFirstElementPathPipe,\n  SortAlphabeticallyPipe,\n  KeysPipe,\n  LastPathElementPipe,\n  TypeOfPipe,\n  SortKeysBySchemaPipe\n];\n","import { ShortcutsDirective } from './shortcuts.directive';\nimport { ContentModelDirective } from './content-model.directive';\n\nexport {\n  ShortcutsDirective,\n  ContentModelDirective\n};\n\nexport const SHARED_DIRECTIVES = [\n  ShortcutsDirective,\n  ContentModelDirective\n];\n","/*\n * This file is part of ng2-json-editor.\n * Copyright (C) 2016 CERN.\n *\n * ng2-json-editor is free software; you can redistribute it and/or\n * modify it under the terms of the GNU General Public License as\n * published by the Free Software Foundation; either version 2 of the\n * License, or (at your option) any later version.\n *\n * ng2-json-editor is distributed in the hope that it will be useful, but\n * WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU\n * General Public License for more details.\n *\n * You should have received a copy of the GNU General Public License\n * along with ng2-json-editor; if not, write to the Free Software Foundation, Inc.,\n * 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.\n * In applying this license, CERN does not\n * waive the privileges and immunities granted to it by virtue of its status\n * as an Intergovernmental Organization or submit itself to any jurisdiction.\n*/\n\nimport './rxjs-operators';\n\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { HttpClientModule } from '@angular/common/http';\n\nimport { TooltipModule } from 'ngx-bootstrap/tooltip';\nimport { PopoverModule } from 'ngx-bootstrap/popover';\nimport { CollapseModule } from 'ngx-bootstrap/collapse';\nimport { BsDropdownModule } from 'ngx-bootstrap/dropdown';\nimport { PaginationModule } from 'ngx-bootstrap/pagination';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { TabsModule } from 'ngx-bootstrap/tabs';\nimport { TypeaheadModule } from 'ngx-bootstrap/typeahead';\n\nimport {\n  AddFieldDropdownComponent,\n  AddNestedFieldDropdownComponent\n} from './add-field-dropdown';\nimport { AddNewElementButtonComponent } from './add-new-element-button';\nimport { AnyTypeFieldComponent } from './any-type-field';\nimport { AutocompleteInputComponent } from './autocomplete-input';\nimport { ComplexListFieldComponent } from './complex-list-field';\nimport { EditorPreviewerComponent } from './editor-previewer';\nimport { SubRecordComponent } from './sub-record';\nimport { BottomConsoleBadgesComponent } from './bottom-console-badges';\nimport { FindReplaceComponent } from './find-replace';\nimport { HtmlViewComponent } from './html-view';\nimport { JsonEditorComponent } from './json-editor.component';\nimport { ModalViewComponent } from './modal-view';\nimport { ObjectFieldComponent } from './object-field';\nimport { PrimitiveListFieldComponent } from './primitive-list-field';\nimport { PrimitiveFieldComponent } from './primitive-field';\nimport { RefFieldComponent } from './ref-field';\nimport { TableListFieldComponent } from './table-list-field';\nimport { TableItemFieldComponent } from './table-item-field';\nimport { TitleDropdownComponent } from './title-dropdown';\nimport { StringInputComponent } from './string-input';\nimport {\n  TreeMenuComponent,\n  TreeMenuItemComponent\n} from './tree-menu';\nimport { SearchableDropdownComponent } from './searchable-dropdown';\nimport { ListActionGroupComponent } from './list-action-group';\nimport { SHARED_PIPES, SHARED_SERVICES, SHARED_DIRECTIVES } from './shared';\nimport { BottomConsoleComponent, PatchesConsoleTabComponent, ProblemsConsoleTabComponent } from './bottom-console';\nimport { TextDiffComponent } from './text-diff';\nimport { PatchActionsComponent } from './patch-actions';\nimport { AddOrReplacePatchComponent } from './add-or-replace-patch';\n\n@NgModule({\n  declarations: [\n    ...SHARED_PIPES,\n    ...SHARED_DIRECTIVES,\n    AddFieldDropdownComponent,\n    AddNestedFieldDropdownComponent,\n    AddNewElementButtonComponent,\n    AnyTypeFieldComponent,\n    AutocompleteInputComponent,\n    ComplexListFieldComponent,\n    ObjectFieldComponent,\n    EditorPreviewerComponent,\n    FindReplaceComponent,\n    ModalViewComponent,\n    PrimitiveListFieldComponent,\n    PrimitiveFieldComponent,\n    RefFieldComponent,\n    SearchableDropdownComponent,\n    ListActionGroupComponent,\n    TableListFieldComponent,\n    TableItemFieldComponent,\n    TitleDropdownComponent,\n    TreeMenuItemComponent,\n    TreeMenuComponent,\n    JsonEditorComponent,\n    SubRecordComponent,\n    HtmlViewComponent,\n    BottomConsoleBadgesComponent,\n    BottomConsoleComponent,\n    StringInputComponent,\n    TextDiffComponent,\n    PatchActionsComponent,\n    PatchesConsoleTabComponent,\n    ProblemsConsoleTabComponent,\n    AddOrReplacePatchComponent\n  ],\n  exports: [JsonEditorComponent],\n  imports: [\n    TooltipModule.forRoot(),\n    CollapseModule.forRoot(),\n    PopoverModule.forRoot(),\n    BsDropdownModule.forRoot(),\n    PaginationModule.forRoot(),\n    ModalModule.forRoot(),\n    TabsModule.forRoot(),\n    TypeaheadModule.forRoot(),\n    CommonModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: SHARED_SERVICES\n})\nexport class JsonEditorModule { }\n\nexport {\n  AddFieldDropdownComponent,\n  AddNestedFieldDropdownComponent,\n  AddNewElementButtonComponent,\n  AnyTypeFieldComponent,\n  AutocompleteInputComponent,\n  ComplexListFieldComponent,\n  ObjectFieldComponent,\n  EditorPreviewerComponent,\n  BottomConsoleComponent,\n  FindReplaceComponent,\n  ModalViewComponent,\n  PrimitiveListFieldComponent,\n  PrimitiveFieldComponent,\n  RefFieldComponent,\n  SearchableDropdownComponent,\n  ListActionGroupComponent,\n  TableListFieldComponent,\n  TableItemFieldComponent,\n  TitleDropdownComponent,\n  TreeMenuItemComponent,\n  TreeMenuComponent,\n  JsonEditorComponent,\n  SubRecordComponent,\n  HtmlViewComponent,\n  BottomConsoleBadgesComponent,\n  StringInputComponent,\n  TextDiffComponent,\n  PatchActionsComponent,\n  PatchesConsoleTabComponent,\n  ProblemsConsoleTabComponent,\n  AddOrReplacePatchComponent\n};\n","/*\n * Public API Surface of json-editor\n */\n\nexport * from './lib/json-editor.component';\nexport * from './lib/json-editor.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["ReplaySubject","_.cloneDeep","_.mergeWith","_.merge","i0.ɵɵelementStart","i0.ɵɵlistener","i0.ɵɵelement","i0.ɵɵtext","i0.ɵɵelementEnd","i0.ɵɵtemplate","i0.ɵɵadvance","i0.ɵɵtextInterpolate","i0.ɵɵproperty","i0.ɵɵprojection","Set","i0.ɵɵpropertyInterpolate1","i0.ɵɵtextInterpolate1","i0.ɵɵstyleProp","i0.ɵɵclassProp","i0.ɵɵelementContainerStart","i0.ɵɵelementContainerEnd","i0.ɵɵtextInterpolate2","i0.ɵɵattribute","i0.ɵɵpropertyInterpolate"],"mappings":"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"}